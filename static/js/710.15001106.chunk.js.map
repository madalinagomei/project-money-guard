{"version":3,"file":"static/js/710.15001106.chunk.js","mappings":"yHAAA,SAASA,EAAQC,GAGf,OAAOD,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBC,QAAUD,EAAEG,cAAgBF,QAAUD,IAAMC,OAAOG,UAAY,gBAAkBJ,CACpH,EAAGD,EAAQC,EACb,CCNA,SAASK,EAAcC,GACrB,IAAIC,ECFN,SAAqBD,EAAGE,GACtB,GAAI,UAAYT,EAAQO,KAAOA,EAAG,OAAOA,EACzC,IAAIG,EAAIH,EAAEL,OAAOS,aACjB,QAAI,IAAWD,EAAG,CAChB,IAAIF,EAAIE,EAAEE,KAAKL,EAAGE,GAAK,WACvB,GAAI,UAAYT,EAAQQ,GAAI,OAAOA,EACnC,MAAM,IAAIK,UAAU,+CACtB,CACA,OAAQ,WAAaJ,EAAIK,OAASC,QAAQR,EAC5C,CDPUI,CAAYJ,EAAG,UACvB,MAAO,UAAYP,EAAQQ,GAAKA,EAAIA,EAAI,EAC1C,CEJA,SAASQ,EAAgBN,EAAGD,EAAGF,GAC7B,OAAQE,EAAIH,EAAcG,MAAOC,EAAIO,OAAOC,eAAeR,EAAGD,EAAG,CAC/DU,MAAOZ,EACPa,YAAY,EACZC,cAAc,EACdC,UAAU,IACPZ,EAAED,GAAKF,EAAGG,CACjB,CCPA,SAASa,EAAQb,EAAGD,GAClB,IAAIF,EAAIU,OAAOO,KAAKd,GACpB,GAAIO,OAAOQ,sBAAuB,CAChC,IAAIxB,EAAIgB,OAAOQ,sBAAsBf,GACrCD,IAAMR,EAAIA,EAAEyB,QAAO,SAAUjB,GAC3B,OAAOQ,OAAOU,yBAAyBjB,EAAGD,GAAGW,UAC/C,KAAKb,EAAEqB,KAAKC,MAAMtB,EAAGN,EACvB,CACA,OAAOM,CACT,CACA,SAAS,EAAeG,GACtB,IAAK,IAAID,EAAI,EAAGA,EAAIqB,UAAUC,OAAQtB,IAAK,CACzC,IAAIF,EAAI,MAAQuB,UAAUrB,GAAKqB,UAAUrB,GAAK,CAAC,EAC/CA,EAAI,EAAIc,EAAQN,OAAOV,IAAI,GAAIyB,SAAQ,SAAUvB,GAC/C,EAAeC,EAAGD,EAAGF,EAAEE,GACzB,IAAKQ,OAAOgB,0BAA4BhB,OAAOiB,iBAAiBxB,EAAGO,OAAOgB,0BAA0B1B,IAAMgB,EAAQN,OAAOV,IAAIyB,SAAQ,SAAUvB,GAC7IQ,OAAOC,eAAeR,EAAGD,EAAGQ,OAAOU,yBAAyBpB,EAAGE,GACjE,GACF,CACA,OAAOC,CACT,CCrBA,SAASyB,EAAkB1B,EAAG2B,IAC3B,MAAQA,GAAKA,EAAI3B,EAAEsB,UAAYK,EAAI3B,EAAEsB,QACtC,IAAK,IAAIrB,EAAI,EAAG2B,EAAIC,MAAMF,GAAI1B,EAAI0B,EAAG1B,IAAK2B,EAAE3B,GAAKD,EAAEC,GACnD,OAAO2B,CACT,CCHA,SAASE,EAA4B9B,EAAG2B,GACtC,GAAI3B,EAAG,CACL,GAAI,iBAAmBA,EAAG,OAAO,EAAiBA,EAAG2B,GACrD,IAAI7B,EAAI,CAAC,EAAEiC,SAAS5B,KAAKH,GAAGgC,MAAM,GAAI,GACtC,MAAO,WAAalC,GAAKE,EAAEL,cAAgBG,EAAIE,EAAEL,YAAYsC,MAAO,QAAUnC,GAAK,QAAUA,EAAI+B,MAAMK,KAAKlC,GAAK,cAAgBF,GAAK,2CAA2CqC,KAAKrC,GAAK,EAAiBE,EAAG2B,QAAK,CACtN,CACF,CCHA,SAASS,EAAepC,EAAGC,GACzB,OCLF,SAAyBD,GACvB,GAAI6B,MAAMQ,QAAQrC,GAAI,OAAOA,CAC/B,CDGS,CAAeA,IELxB,SAA+BA,EAAGsC,GAChC,IAAIxC,EAAI,MAAQE,EAAI,KAAO,oBAAsBP,QAAUO,EAAEP,OAAOC,WAAaM,EAAE,cACnF,GAAI,MAAQF,EAAG,CACb,IAAIG,EACF2B,EACA7B,EACAwC,EACAZ,EAAI,GACJa,GAAI,EACJhD,GAAI,EACN,IACE,GAAIO,GAAKD,EAAIA,EAAEK,KAAKH,IAAIyC,KAAM,IAAMH,EAAG,CACrC,GAAI9B,OAAOV,KAAOA,EAAG,OACrB0C,GAAI,CACN,MAAO,OAASA,GAAKvC,EAAIF,EAAEI,KAAKL,IAAI4C,QAAUf,EAAER,KAAKlB,EAAES,OAAQiB,EAAEL,SAAWgB,GAAIE,GAAI,GACtF,CAAE,MAAOxC,GACPR,GAAI,EAAIoC,EAAI5B,CACd,CAAE,QACA,IACE,IAAKwC,GAAK,MAAQ1C,EAAU,SAAMyC,EAAIzC,EAAU,SAAKU,OAAO+B,KAAOA,GAAI,MACzE,CAAE,QACA,GAAI/C,EAAG,MAAMoC,CACf,CACF,CACA,OAAOD,CACT,CACF,CFrB8B,CAAqB3B,EAAGC,IAAM,EAA2BD,EAAGC,IGL1F,WACE,MAAM,IAAIG,UAAU,4IACtB,CHGgG,EAChG,C,iCILA,SAASuC,EAAyB1C,EAAGH,GACnC,GAAI,MAAQG,EAAG,MAAO,CAAC,EACvB,IAAIT,EACFQ,EACAD,GAAI,EAAA6C,EAAA,GAA6B3C,EAAGH,GACtC,GAAIU,OAAOQ,sBAAuB,CAChC,IAAI6B,EAAIrC,OAAOQ,sBAAsBf,GACrC,IAAKD,EAAI,EAAGA,EAAI6C,EAAEvB,OAAQtB,IAAKR,EAAIqD,EAAE7C,GAAIF,EAAEgD,SAAStD,IAAM,CAAC,EAAEuD,qBAAqB5C,KAAKF,EAAGT,KAAOO,EAAEP,GAAKS,EAAET,GAC5G,CACA,OAAOO,CACT,C,cCNIiD,EAAY,CAAC,oBAAqB,oBAAqB,eAAgB,aAAc,aAAc,WAAY,gBAAiB,cAAe,aAAc,S,cCJjK,SAASC,EAAkBhD,EAAGD,GAC5B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAEsB,OAAQxB,IAAK,CACjC,IAAIN,EAAIQ,EAAEF,GACVN,EAAEmB,WAAanB,EAAEmB,aAAc,EAAInB,EAAEoB,cAAe,EAAI,UAAWpB,IAAMA,EAAEqB,UAAW,GAAKL,OAAOC,eAAeR,EAAGJ,EAAcL,EAAE0D,KAAM1D,EAC5I,CACF,C,cCNA,SAAS2D,EAAgBrD,GACvB,OAAOqD,EAAkB3C,OAAO4C,eAAiB5C,OAAO6C,eAAeC,OAAS,SAAUxD,GACxF,OAAOA,EAAEyD,WAAa/C,OAAO6C,eAAevD,EAC9C,EAAGqD,EAAgBrD,EACrB,CCJA,SAAS0D,IACP,IACE,IAAI1D,GAAK2D,QAAQ7D,UAAU8D,QAAQvD,KAAKwD,QAAQC,UAAUH,QAAS,IAAI,WAAa,IACtF,CAAE,MAAO3D,GAAI,CACb,OAAQ0D,EAA4B,WAClC,QAAS1D,CACX,IACF,C,cCJA,SAAS+D,EAAa/D,GACpB,IAAIE,EAAI,IACR,OAAO,WACL,IAAIC,EACFT,EAAI,EAAeM,GACrB,GAAIE,EAAG,CACL,IAAI6C,EAAI,EAAeiB,MAAMnE,YAC7BM,EAAI0D,QAAQC,UAAUpE,EAAG6B,UAAWwB,EACtC,MAAO5C,EAAIT,EAAE4B,MAAM0C,KAAMzC,WACzB,OCVJ,SAAoCvB,EAAGG,GACrC,GAAIA,IAAM,UAAYV,EAAQU,IAAM,mBAAqBA,GAAI,OAAOA,EACpE,QAAI,IAAWA,EAAG,MAAM,IAAIG,UAAU,4DACtC,OAAO,EAAA2D,EAAA,GAAsBjE,EAC/B,CDMW,CAA0BgE,KAAM7D,EACzC,CACF,CEVA,SAAS+D,EAAmBhE,GAC1B,OCJF,SAA4BA,GAC1B,GAAI6B,MAAMQ,QAAQrC,GAAI,OAAO,EAAiBA,EAChD,CDES,CAAkBA,IEL3B,SAA0BA,GACxB,GAAI,oBAAsBP,QAAU,MAAQO,EAAEP,OAAOC,WAAa,MAAQM,EAAE,cAAe,OAAO6B,MAAMK,KAAKlC,EAC/G,CFGiC,CAAgBA,IAAM,EAA2BA,IGLlF,WACE,MAAM,IAAII,UAAU,uIACtB,CHGwF,EACxF,C,sCIFA,QAFa6D,EAAAA,gB,+mJCFmBhE,GAAGH,G,kzCAAHG,G,+DACvBH,KAAMA,GAAIG,GAAE+B,MAAM,I,EAAKxB,OAAO0D,OAAO1D,OAAOiB,iBAAiBxB,GAAG,CACrEkE,IAAK,CACHzD,MAAOF,OAAO0D,OAAOpE,U,u+MCHvBsE,GAAY9D,OAAO+D,OACnB,SAAkB3D,GACd,MAAwB,kBAAVA,GAAsBA,IAAUA,CAClD,EAUJ,SAAS4D,GAAeC,EAAWC,GAC/B,GAAID,EAAUjD,SAAWkD,EAAWlD,OAChC,OAAO,EAEX,IAAK,IAAIvB,EAAI,EAAGA,EAAIwE,EAAUjD,OAAQvB,IAClC,GAdS0E,EAcIF,EAAUxE,GAdP2E,EAcWF,EAAWzE,KAbtC0E,IAAUC,GAGVN,GAAUK,IAAUL,GAAUM,IAW1B,OAAO,EAfnB,IAAiBD,EAAOC,EAkBpB,OAAO,CACX,C,wiVAEA,SAAoBC,EAAUC,QACV,IAAZA,IAAsBA,EAAUN,IACpC,IAAIO,EAAQ,KACZ,SAASC,IAEL,IADA,IAAIC,EAAU,GACLC,EAAK,EAAGA,EAAK3D,UAAUC,OAAQ0D,IACpCD,EAAQC,GAAM3D,UAAU2D,GAE5B,GAAIH,GAASA,EAAMI,WAAanB,MAAQc,EAAQG,EAASF,EAAMK,UAC3D,OAAOL,EAAMM,WAEjB,IAAIA,EAAaR,EAASvD,MAAM0C,KAAMiB,GAMtC,OALAF,EAAQ,CACJM,WAAYA,EACZD,SAAUH,EACVE,SAAUnB,MAEPqB,CACX,CAIA,OAHAL,EAASM,MAAQ,WACbP,EAAQ,IACZ,EACOC,CACX,C,mjaC/CA,SAAmBhF,EAAGG,GACpB,GAAI,mBAAqBA,GAAK,OAASA,EAAG,MAAM,IAAIG,UAAU,sDAC9DN,EAAEF,UAAYY,OAAO6E,OAAOpF,GAAKA,EAAEL,UAAW,CAC5CD,YAAa,CACXe,MAAOZ,EACPe,UAAU,EACVD,cAAc,KAEdJ,OAAOC,eAAeX,EAAG,YAAa,CACxCe,UAAU,IACRZ,IAAK,EAAAmD,EAAA,GAAetD,EAAGG,EAC7B,C,wCCZA,SAAyB0B,EAAGC,GAC1B,KAAMD,aAAaC,GAAI,MAAM,IAAIxB,UAAU,oCAC7C,C,gwQbKA,SAAsBH,EAAGD,EAAGF,GACnBE,GAAKiD,EAAkBhD,EAAEL,UAAWI,GAAIF,GAAKmD,EAAkBhD,EAAGH,GAAIU,OAAOC,eAAeR,EAAG,YAAa,CACjHY,UAAU,GAEd,C,w8cceIyE,IAAkCC,EAAAA,EAAAA,aAAW,SAAUC,EAAOC,GAChE,IAAIC,EfrBN,SAAyBC,GACvB,IAAIC,EAAwBD,EAAKE,kBAC/BA,OAA8C,IAA1BD,EAAmC,GAAKA,EAC5DE,EAAwBH,EAAKI,kBAC7BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAoBL,EAAKM,aACzBA,OAAqC,IAAtBD,EAA+B,KAAOA,EACrDE,EAAkBP,EAAKQ,WACvBC,EAAkBT,EAAKU,WACvBC,EAAgBX,EAAKY,SACrBC,EAAqBb,EAAKc,cAC1BC,EAAmBf,EAAKgB,YACxBC,EAAkBjB,EAAKkB,WACvBC,EAAanB,EAAKjF,MAClBqG,EAAkBpE,EAAyBgD,EAAM3C,GAEjDgE,EAAa5E,GADC6E,EAAAA,EAAAA,eAA6BC,IAApBhB,EAAgCA,EAAkBL,GAClC,GACvCsB,EAAkBH,EAAW,GAC7BI,EAAqBJ,EAAW,GAEhCK,EAAajF,GADE6E,EAAAA,EAAAA,eAA6BC,IAApBd,EAAgCA,EAAkBL,GAClC,GACxCuB,EAAkBD,EAAW,GAC7BE,EAAqBF,EAAW,GAEhCG,EAAapF,GADE6E,EAAAA,EAAAA,eAAwBC,IAAfJ,EAA2BA,EAAab,GACxB,GACxCwB,EAAaD,EAAW,GACxBE,EAAgBF,EAAW,GACzBjB,GAAWoB,EAAAA,EAAAA,cAAY,SAAUjH,EAAOkH,GACb,oBAAlBtB,GACTA,EAAc5F,EAAOkH,GAEvBF,EAAchH,EAChB,GAAG,CAAC4F,IACAG,GAAgBkB,EAAAA,EAAAA,cAAY,SAAUjH,EAAOkH,GAC/C,IAAIC,EAC8B,oBAAvBrB,IACTqB,EAAWrB,EAAmB9F,EAAOkH,IAEvCR,OAAgCF,IAAbW,EAAyBA,EAAWnH,EACzD,GAAG,CAAC8F,IACAK,GAAac,EAAAA,EAAAA,cAAY,WACI,oBAApBf,GACTA,IAEFW,GAAmB,EACrB,GAAG,CAACX,IACAD,GAAcgB,EAAAA,EAAAA,cAAY,WACI,oBAArBjB,GACTA,IAEFa,GAAmB,EACrB,GAAG,CAACb,IACAP,OAAiCe,IAApBhB,EAAgCA,EAAkBiB,EAC/Dd,OAAiCa,IAApBd,EAAgCA,EAAkBkB,EAC/D5G,OAAuBwG,IAAfJ,EAA2BA,EAAaW,EACpD,OAAOK,EAAcA,EAAc,CAAC,EAAGf,GAAkB,CAAC,EAAG,CAC3DZ,WAAYA,EACZE,WAAYA,EACZE,SAAUA,EACVE,cAAeA,EACfE,YAAaA,EACbE,WAAYA,EACZnG,MAAOA,GAEX,Ce3CwBqH,CAAgBvC,GACtC,OAAoBwC,EAAAA,cAAoBC,IAAQC,EAAAA,EAAAA,GAAS,CACvDzC,IAAKA,GACJC,GACL,IACIyC,GAAuB7C,E,4JC7B3B,SAAS8C,EAA2BzC,EAAM0C,EAAWC,GACnD,IAAI,UACFC,EAAS,SACTC,GACE7C,EACJ,MAAM8C,GAAWC,EAAAA,EAAAA,IAAYL,GACvBM,GAAgBC,EAAAA,EAAAA,IAAiBP,GACjCQ,GAAcC,EAAAA,EAAAA,IAAcH,GAC5BI,GAAOC,EAAAA,EAAAA,IAAQX,GACfY,EAA0B,MAAbR,EACbS,EAAUX,EAAUY,EAAIZ,EAAUa,MAAQ,EAAIZ,EAASY,MAAQ,EAC/DC,EAAUd,EAAUe,EAAIf,EAAUgB,OAAS,EAAIf,EAASe,OAAS,EACjEC,EAAcjB,EAAUM,GAAe,EAAIL,EAASK,GAAe,EACzE,IAAIY,EACJ,OAAQV,GACN,IAAK,MACHU,EAAS,CACPN,EAAGD,EACHI,EAAGf,EAAUe,EAAId,EAASe,QAE5B,MACF,IAAK,SACHE,EAAS,CACPN,EAAGD,EACHI,EAAGf,EAAUe,EAAIf,EAAUgB,QAE7B,MACF,IAAK,QACHE,EAAS,CACPN,EAAGZ,EAAUY,EAAIZ,EAAUa,MAC3BE,EAAGD,GAEL,MACF,IAAK,OACHI,EAAS,CACPN,EAAGZ,EAAUY,EAAIX,EAASY,MAC1BE,EAAGD,GAEL,MACF,QACEI,EAAS,CACPN,EAAGZ,EAAUY,EACbG,EAAGf,EAAUe,GAGnB,QAAQI,EAAAA,EAAAA,IAAarB,IACnB,IAAK,QACHoB,EAAOd,IAAkBa,GAAelB,GAAOW,GAAc,EAAI,GACjE,MACF,IAAK,MACHQ,EAAOd,IAAkBa,GAAelB,GAAOW,GAAc,EAAI,GAGrE,OAAOQ,CACT,CAqGAE,eAAeC,EAAeC,EAAOC,GACnC,IAAIC,OACY,IAAZD,IACFA,EAAU,CAAC,GAEb,MAAM,EACJX,EAAC,EACDG,EAAC,SACDU,EAAQ,MACRC,EAAK,SACLC,EAAQ,SACRC,GACEN,GACE,SACJO,EAAW,oBAAmB,aAC9BC,EAAe,WAAU,eACzBC,EAAiB,WAAU,YAC3BC,GAAc,EAAK,QACnBC,EAAU,IACRC,EAAAA,EAAAA,IAASX,EAASD,GAChBa,GAAgBC,EAAAA,EAAAA,IAAiBH,GAEjCI,EAAUV,EAASK,EADa,aAAnBD,EAAgC,YAAc,WACbA,GAC9CO,GAAqBC,EAAAA,EAAAA,UAAuBd,EAASe,gBAAgB,CACzEH,QAAiH,OAAtGb,QAAqD,MAAtBC,EAASgB,eAAoB,EAAShB,EAASgB,UAAUJ,MAAqBb,EAAgCa,EAAUA,EAAQK,sBAAyD,MAA/BjB,EAASkB,wBAA6B,EAASlB,EAASkB,mBAAmBhB,EAAS1B,WACxR4B,WACAC,eACAF,cAEIgB,EAA0B,aAAnBb,EAAgC,CAC3CnB,IACAG,IACAF,MAAOa,EAAMzB,SAASY,MACtBG,OAAQU,EAAMzB,SAASe,QACrBU,EAAM1B,UACJ6C,QAAkD,MAA5BpB,EAASqB,qBAA0B,EAASrB,EAASqB,gBAAgBnB,EAAS1B,WACpG8C,QAA4C,MAAtBtB,EAASgB,eAAoB,EAAShB,EAASgB,UAAUI,WAA+C,MAArBpB,EAASuB,cAAmB,EAASvB,EAASuB,SAASH,KAGlK,CACFjC,EAAG,EACHG,EAAG,GAECkC,GAAoBV,EAAAA,EAAAA,IAAiBd,EAASyB,4DAA8DzB,EAASyB,sDAAsD,CAC/KvB,WACAiB,OACAC,eACAjB,aACGgB,GACL,MAAO,CACLO,KAAMb,EAAmBa,IAAMF,EAAkBE,IAAMhB,EAAcgB,KAAOJ,EAAYhC,EACxFqC,QAASH,EAAkBG,OAASd,EAAmBc,OAASjB,EAAciB,QAAUL,EAAYhC,EACpGsC,MAAOf,EAAmBe,KAAOJ,EAAkBI,KAAOlB,EAAckB,MAAQN,EAAYnC,EAC5F0C,OAAQL,EAAkBK,MAAQhB,EAAmBgB,MAAQnB,EAAcmB,OAASP,EAAYnC,EAEpG,CAyTA,SAAS2C,EAAeC,EAAUZ,GAChC,MAAO,CACLO,IAAKK,EAASL,IAAMP,EAAK5B,OACzBsC,MAAOE,EAASF,MAAQV,EAAK/B,MAC7BuC,OAAQI,EAASJ,OAASR,EAAK5B,OAC/BqC,KAAMG,EAASH,KAAOT,EAAK/B,MAE/B,CACA,SAAS4C,EAAsBD,GAC7B,OAAOE,EAAAA,GAAMC,MAAKnD,GAAQgD,EAAShD,IAAS,GAC9C,CA2DA,SAASoD,EAAgBlC,GACvB,MAAMmC,GAAOC,EAAAA,EAAAA,OAAOpC,EAAMqC,KAAInB,GAAQA,EAAKS,QACrCW,GAAOF,EAAAA,EAAAA,OAAOpC,EAAMqC,KAAInB,GAAQA,EAAKO,OAG3C,MAAO,CACLvC,EAAGiD,EACH9C,EAAGiD,EACHnD,OALWoD,EAAAA,EAAAA,OAAOvC,EAAMqC,KAAInB,GAAQA,EAAKU,SAK3BO,EACd7C,QALWiD,EAAAA,EAAAA,OAAOvC,EAAMqC,KAAInB,GAAQA,EAAKQ,UAK1BY,EAEnB,C,cCzlBA,SAASE,EAAiB7B,GACxB,MAAM8B,GAAMC,EAAAA,EAAAA,IAAiB/B,GAG7B,IAAIxB,EAAQwD,WAAWF,EAAItD,QAAU,EACjCG,EAASqD,WAAWF,EAAInD,SAAW,EACvC,MAAMsD,GAAYC,EAAAA,EAAAA,IAAclC,GAC1BmC,EAAcF,EAAYjC,EAAQmC,YAAc3D,EAChD4D,EAAeH,EAAYjC,EAAQoC,aAAezD,EAClD0D,GAAiBC,EAAAA,EAAAA,IAAM9D,KAAW2D,IAAeG,EAAAA,EAAAA,IAAM3D,KAAYyD,EAKzE,OAJIC,IACF7D,EAAQ2D,EACRxD,EAASyD,GAEJ,CACL5D,QACAG,SACA4D,EAAGF,EAEP,CAEA,SAASG,EAAcxC,GACrB,OAAQI,EAAAA,EAAAA,IAAUJ,GAAoCA,EAAzBA,EAAQK,cACvC,CAEA,SAASM,EAASX,GAChB,MAAMyC,EAAaD,EAAcxC,GACjC,KAAKkC,EAAAA,EAAAA,IAAcO,GACjB,OAAOC,EAAAA,EAAAA,IAAa,GAEtB,MAAMnC,EAAOkC,EAAWE,yBAClB,MACJnE,EAAK,OACLG,EAAM,EACN4D,GACEV,EAAiBY,GACrB,IAAIlE,GAAKgE,GAAID,EAAAA,EAAAA,IAAM/B,EAAK/B,OAAS+B,EAAK/B,OAASA,EAC3CE,GAAK6D,GAAID,EAAAA,EAAAA,IAAM/B,EAAK5B,QAAU4B,EAAK5B,QAAUA,EAUjD,OANKJ,GAAM7I,OAAOkN,SAASrE,KACzBA,EAAI,GAEDG,GAAMhJ,OAAOkN,SAASlE,KACzBA,EAAI,GAEC,CACLH,IACAG,IAEJ,CAEA,MAAMmE,GAAyBH,EAAAA,EAAAA,IAAa,GAC5C,SAASI,EAAiB9C,GACxB,MAAM+C,GAAMC,EAAAA,EAAAA,IAAUhD,GACtB,OAAKiD,EAAAA,EAAAA,OAAeF,EAAIG,eAGjB,CACL3E,EAAGwE,EAAIG,eAAeC,WACtBzE,EAAGqE,EAAIG,eAAeE,WAJfP,CAMX,CAWA,SAASF,EAAsB3C,EAASqD,EAAcC,EAAiB9C,QAChD,IAAjB6C,IACFA,GAAe,QAEO,IAApBC,IACFA,GAAkB,GAEpB,MAAMC,EAAavD,EAAQ2C,wBACrBF,EAAaD,EAAcxC,GACjC,IAAIwD,GAAQd,EAAAA,EAAAA,IAAa,GACrBW,IACE7C,GACEJ,EAAAA,EAAAA,IAAUI,KACZgD,EAAQ7C,EAASH,IAGnBgD,EAAQ7C,EAASX,IAGrB,MAAMyD,EA7BR,SAAgCzD,EAAS0D,EAASC,GAIhD,YAHgB,IAAZD,IACFA,GAAU,MAEPC,GAAwBD,GAAWC,KAAyBX,EAAAA,EAAAA,IAAUhD,KAGpE0D,CACT,CAqBwBE,CAAuBnB,EAAYa,EAAiB9C,GAAgBsC,EAAiBL,IAAcC,EAAAA,EAAAA,IAAa,GACtI,IAAInE,GAAKgF,EAAWvC,KAAOyC,EAAclF,GAAKiF,EAAMjF,EAChDG,GAAK6E,EAAWzC,IAAM2C,EAAc/E,GAAK8E,EAAM9E,EAC/CF,EAAQ+E,EAAW/E,MAAQgF,EAAMjF,EACjCI,EAAS4E,EAAW5E,OAAS6E,EAAM9E,EACvC,GAAI+D,EAAY,CACd,MAAMM,GAAMC,EAAAA,EAAAA,IAAUP,GAChBoB,EAAYrD,IAAgBJ,EAAAA,EAAAA,IAAUI,IAAgBwC,EAAAA,EAAAA,IAAUxC,GAAgBA,EACtF,IAAIsD,EAAaf,EACbgB,GAAgBC,EAAAA,EAAAA,IAAgBF,GACpC,KAAOC,GAAiBvD,GAAgBqD,IAAcC,GAAY,CAChE,MAAMG,EAActD,EAASoD,GACvBG,EAAaH,EAAcpB,wBAC3Bb,GAAMC,EAAAA,EAAAA,IAAiBgC,GACvB/C,EAAOkD,EAAWlD,MAAQ+C,EAAcI,WAAanC,WAAWF,EAAIsC,cAAgBH,EAAY1F,EAChGuC,EAAMoD,EAAWpD,KAAOiD,EAAcM,UAAYrC,WAAWF,EAAIwC,aAAeL,EAAYvF,EAClGH,GAAK0F,EAAY1F,EACjBG,GAAKuF,EAAYvF,EACjBF,GAASyF,EAAY1F,EACrBI,GAAUsF,EAAYvF,EACtBH,GAAKyC,EACLtC,GAAKoC,EACLgD,GAAad,EAAAA,EAAAA,IAAUe,GACvBA,GAAgBC,EAAAA,EAAAA,IAAgBF,EAClC,CACF,CACA,OAAO5D,EAAAA,EAAAA,IAAiB,CACtB1B,QACAG,SACAJ,IACAG,KAEJ,CA6CA,SAAS6F,EAAoBvE,GAG3B,OAAO2C,GAAsBrC,EAAAA,EAAAA,IAAmBN,IAAUgB,MAAOwD,EAAAA,EAAAA,IAAcxE,GAASyE,UAC1F,CAiEA,SAASC,EAAkC1E,EAAS2E,EAAkBpF,GACpE,IAAIgB,EACJ,GAAyB,aAArBoE,EACFpE,EA7CJ,SAAyBP,EAAST,GAChC,MAAMwD,GAAMC,EAAAA,EAAAA,IAAUhD,GAChB4E,GAAOtE,EAAAA,EAAAA,IAAmBN,GAC1BkD,EAAiBH,EAAIG,eAC3B,IAAI1E,EAAQoG,EAAKC,YACblG,EAASiG,EAAKE,aACdvG,EAAI,EACJG,EAAI,EACR,GAAIwE,EAAgB,CAClB1E,EAAQ0E,EAAe1E,MACvBG,EAASuE,EAAevE,OACxB,MAAMoG,GAAsB9B,EAAAA,EAAAA,QACvB8B,GAAuBA,GAAoC,UAAbxF,KACjDhB,EAAI2E,EAAeC,WACnBzE,EAAIwE,EAAeE,UAEvB,CACA,MAAO,CACL5E,QACAG,SACAJ,IACAG,IAEJ,CAsBWsG,CAAgBhF,EAAST,QAC3B,GAAyB,aAArBoF,EACTpE,EAlEJ,SAAyBP,GACvB,MAAM4E,GAAOtE,EAAAA,EAAAA,IAAmBN,GAC1BiF,GAAST,EAAAA,EAAAA,IAAcxE,GACvBkF,EAAOlF,EAAQmF,cAAcD,KAC7B1G,GAAQoD,EAAAA,EAAAA,IAAIgD,EAAKQ,YAAaR,EAAKC,YAAaK,EAAKE,YAAaF,EAAKL,aACvElG,GAASiD,EAAAA,EAAAA,IAAIgD,EAAKS,aAAcT,EAAKE,aAAcI,EAAKG,aAAcH,EAAKJ,cACjF,IAAIvG,GAAK0G,EAAOR,WAAaF,EAAoBvE,GACjD,MAAMtB,GAAKuG,EAAOK,UAIlB,MAHyC,SAArCvD,EAAAA,EAAAA,IAAiBmD,GAAMK,YACzBhH,IAAKqD,EAAAA,EAAAA,IAAIgD,EAAKC,YAAaK,EAAKL,aAAerG,GAE1C,CACLA,QACAG,SACAJ,IACAG,IAEJ,CAiDW8G,EAAgBlF,EAAAA,EAAAA,IAAmBN,SACrC,IAAII,EAAAA,EAAAA,IAAUuE,GACnBpE,EAvBJ,SAAoCP,EAAST,GAC3C,MAAMgE,EAAaZ,EAAsB3C,GAAS,EAAmB,UAAbT,GAClDuB,EAAMyC,EAAWzC,IAAMd,EAAQqE,UAC/BrD,EAAOuC,EAAWvC,KAAOhB,EAAQmE,WACjCX,GAAQtB,EAAAA,EAAAA,IAAclC,GAAWW,EAASX,IAAW0C,EAAAA,EAAAA,IAAa,GAKxE,MAAO,CACLlE,MALYwB,EAAQ6E,YAAcrB,EAAMjF,EAMxCI,OALaqB,EAAQ8E,aAAetB,EAAM9E,EAM1CH,EALQyC,EAAOwC,EAAMjF,EAMrBG,EALQoC,EAAM0C,EAAM9E,EAOxB,CAQW+G,CAA2Bd,EAAkBpF,OAC/C,CACL,MAAMkE,EAAgBX,EAAiB9C,GACvCO,EAAO,IACFoE,EACHpG,EAAGoG,EAAiBpG,EAAIkF,EAAclF,EACtCG,EAAGiG,EAAiBjG,EAAI+E,EAAc/E,EAE1C,CACA,OAAOwB,EAAAA,EAAAA,IAAiBK,EAC1B,CACA,SAASmF,EAAyB1F,EAAS2F,GACzC,MAAMC,GAAaC,EAAAA,EAAAA,IAAc7F,GACjC,QAAI4F,IAAeD,KAAavF,EAAAA,EAAAA,IAAUwF,KAAeE,EAAAA,EAAAA,IAAsBF,MAG9B,WAA1C7D,EAAAA,EAAAA,IAAiB6D,GAAYG,UAAwBL,EAAyBE,EAAYD,GACnG,CA2EA,SAASK,EAA8BhG,EAASQ,EAAcjB,GAC5D,MAAM0G,GAA0B/D,EAAAA,EAAAA,IAAc1B,GACxC0F,GAAkB5F,EAAAA,EAAAA,IAAmBE,GACrCkD,EAAuB,UAAbnE,EACVgB,EAAOoC,EAAsB3C,GAAS,EAAM0D,EAASlD,GAC3D,IAAIyE,EAAS,CACXR,WAAY,EACZa,UAAW,GAEb,MAAMa,GAAUzD,EAAAA,EAAAA,IAAa,GAC7B,GAAIuD,IAA4BA,IAA4BvC,EAI1D,IAHkC,UAA9B0C,EAAAA,EAAAA,IAAY5F,KAA4B6F,EAAAA,EAAAA,IAAkBH,MAC5DjB,GAAST,EAAAA,EAAAA,IAAchE,IAErByF,EAAyB,CAC3B,MAAMK,EAAa3D,EAAsBnC,GAAc,EAAMkD,EAASlD,GACtE2F,EAAQ5H,EAAI+H,EAAW/H,EAAIiC,EAAa2D,WACxCgC,EAAQzH,EAAI4H,EAAW5H,EAAI8B,EAAa6D,SAC1C,MAAW6B,IACTC,EAAQ5H,EAAIgG,EAAoB2B,IAKpC,MAAO,CACL3H,EAHQgC,EAAKS,KAAOiE,EAAOR,WAAa0B,EAAQ5H,EAIhDG,EAHQ6B,EAAKO,IAAMmE,EAAOK,UAAYa,EAAQzH,EAI9CF,MAAO+B,EAAK/B,MACZG,OAAQ4B,EAAK5B,OAEjB,CAEA,SAAS4H,EAAmBvG,GAC1B,MAA8C,YAAvC+B,EAAAA,EAAAA,IAAiB/B,GAAS+F,QACnC,CAEA,SAASS,EAAoBxG,EAASyG,GACpC,OAAKvE,EAAAA,EAAAA,IAAclC,IAAmD,WAAvC+B,EAAAA,EAAAA,IAAiB/B,GAAS+F,SAGrDU,EACKA,EAASzG,GAEXA,EAAQQ,aALN,IAMX,CAIA,SAASC,EAAgBT,EAASyG,GAChC,MAAM1D,GAAMC,EAAAA,EAAAA,IAAUhD,GACtB,IAAI0G,EAAAA,EAAAA,IAAW1G,GACb,OAAO+C,EAET,KAAKb,EAAAA,EAAAA,IAAclC,GAAU,CAC3B,IAAI2G,GAAkBd,EAAAA,EAAAA,IAAc7F,GACpC,KAAO2G,KAAoBb,EAAAA,EAAAA,IAAsBa,IAAkB,CACjE,IAAIvG,EAAAA,EAAAA,IAAUuG,KAAqBJ,EAAmBI,GACpD,OAAOA,EAETA,GAAkBd,EAAAA,EAAAA,IAAcc,EAClC,CACA,OAAO5D,CACT,CACA,IAAIvC,EAAegG,EAAoBxG,EAASyG,GAChD,KAAOjG,IAAgBoG,EAAAA,EAAAA,IAAepG,IAAiB+F,EAAmB/F,IACxEA,EAAegG,EAAoBhG,EAAciG,GAEnD,OAAIjG,IAAgBsF,EAAAA,EAAAA,IAAsBtF,IAAiB+F,EAAmB/F,MAAkBqG,EAAAA,EAAAA,IAAkBrG,GACzGuC,EAEFvC,IAAgBsG,EAAAA,EAAAA,IAAmB9G,IAAY+C,CACxD,CAqBA,MAAM3D,EAAW,CACfyB,sDAhTF,SAA+D9F,GAC7D,IAAI,SACFuE,EAAQ,KACRiB,EAAI,aACJC,EAAY,SACZjB,GACExE,EACJ,MAAM2I,EAAuB,UAAbnE,EACV2G,GAAkB5F,EAAAA,EAAAA,IAAmBE,GACrCuG,IAAWzH,IAAWoH,EAAAA,EAAAA,IAAWpH,EAAS1B,UAChD,GAAI4C,IAAiB0F,GAAmBa,GAAYrD,EAClD,OAAOnD,EAET,IAAI0E,EAAS,CACXR,WAAY,EACZa,UAAW,GAET9B,GAAQd,EAAAA,EAAAA,IAAa,GACzB,MAAMyD,GAAUzD,EAAAA,EAAAA,IAAa,GACvBuD,GAA0B/D,EAAAA,EAAAA,IAAc1B,GAC9C,IAAIyF,IAA4BA,IAA4BvC,MACxB,UAA9B0C,EAAAA,EAAAA,IAAY5F,KAA4B6F,EAAAA,EAAAA,IAAkBH,MAC5DjB,GAAST,EAAAA,EAAAA,IAAchE,KAErB0B,EAAAA,EAAAA,IAAc1B,IAAe,CAC/B,MAAM8F,EAAa3D,EAAsBnC,GACzCgD,EAAQ7C,EAASH,GACjB2F,EAAQ5H,EAAI+H,EAAW/H,EAAIiC,EAAa2D,WACxCgC,EAAQzH,EAAI4H,EAAW5H,EAAI8B,EAAa6D,SAC1C,CAEF,MAAO,CACL7F,MAAO+B,EAAK/B,MAAQgF,EAAMjF,EAC1BI,OAAQ4B,EAAK5B,OAAS6E,EAAM9E,EAC5BH,EAAGgC,EAAKhC,EAAIiF,EAAMjF,EAAI0G,EAAOR,WAAajB,EAAMjF,EAAI4H,EAAQ5H,EAC5DG,EAAG6B,EAAK7B,EAAI8E,EAAM9E,EAAIuG,EAAOK,UAAY9B,EAAM9E,EAAIyH,EAAQzH,EAE/D,EA4QE4B,mBAAkB,KAClBH,gBApIF,SAAyBpF,GACvB,IAAI,QACFiF,EAAO,SACPR,EAAQ,aACRC,EAAY,SACZF,GACExE,EACJ,MACMiM,EAAoB,IADoB,sBAAbxH,GAAmCkH,EAAAA,EAAAA,IAAW1G,GAAW,GAxC5F,SAAqCA,EAAS/F,GAC5C,MAAMgN,EAAehN,EAAMiN,IAAIlH,GAC/B,GAAIiH,EACF,OAAOA,EAET,IAAIE,GAASC,EAAAA,EAAAA,IAAqBpH,EAAS,IAAI,GAAO3J,QAAOgR,IAAMjH,EAAAA,EAAAA,IAAUiH,IAA2B,UAApBjB,EAAAA,EAAAA,IAAYiB,KAC5FC,EAAsC,KAC1C,MAAMC,EAAwD,WAAvCxF,EAAAA,EAAAA,IAAiB/B,GAAS+F,SACjD,IAAIyB,EAAcD,GAAiB1B,EAAAA,EAAAA,IAAc7F,GAAWA,EAG5D,MAAOI,EAAAA,EAAAA,IAAUoH,MAAiB1B,EAAAA,EAAAA,IAAsB0B,IAAc,CACpE,MAAMC,GAAgB1F,EAAAA,EAAAA,IAAiByF,GACjCE,GAA0Bb,EAAAA,EAAAA,IAAkBW,GAC7CE,GAAsD,UAA3BD,EAAc1B,WAC5CuB,EAAsC,OAEVC,GAAkBG,IAA4BJ,GAAuCI,GAAsD,WAA3BD,EAAc1B,UAA2BuB,GAAuC,CAAC,WAAY,SAASpP,SAASoP,EAAoCvB,YAAaM,EAAAA,EAAAA,IAAkBmB,KAAiBE,GAA2BhC,EAAyB1F,EAASwH,IAG5YL,EAASA,EAAO9Q,QAAOsR,GAAYA,IAAaH,IAGhDF,EAAsCG,EAExCD,GAAc3B,EAAAA,EAAAA,IAAc2B,EAC9B,CAEA,OADAvN,EAAM2N,IAAI5H,EAASmH,GACZA,CACT,CAWiGU,CAA4B7H,EAAS9G,KAAK4O,IAAM,GAAGC,OAAOvI,GACjGC,GAClDuI,EAAwBhB,EAAkB,GAC1CiB,EAAejB,EAAkBkB,QAAO,CAACC,EAASxD,KACtD,MAAMpE,EAAOmE,EAAkC1E,EAAS2E,EAAkBpF,GAK1E,OAJA4I,EAAQrH,KAAMc,EAAAA,EAAAA,IAAIrB,EAAKO,IAAKqH,EAAQrH,KACpCqH,EAAQlH,OAAQQ,EAAAA,EAAAA,IAAIlB,EAAKU,MAAOkH,EAAQlH,OACxCkH,EAAQpH,QAASU,EAAAA,EAAAA,IAAIlB,EAAKQ,OAAQoH,EAAQpH,QAC1CoH,EAAQnH,MAAOY,EAAAA,EAAAA,IAAIrB,EAAKS,KAAMmH,EAAQnH,MAC/BmH,CAAO,GACbzD,EAAkC1E,EAASgI,EAAuBzI,IACrE,MAAO,CACLf,MAAOyJ,EAAahH,MAAQgH,EAAajH,KACzCrC,OAAQsJ,EAAalH,OAASkH,EAAanH,IAC3CvC,EAAG0J,EAAajH,KAChBtC,EAAGuJ,EAAanH,IAEpB,EA6GEL,kBACA2H,gBAxBsBrJ,eAAgBsJ,GACtC,MAAMC,EAAoBpP,KAAKuH,iBAAmBA,EAC5C8H,EAAkBrP,KAAKsP,cACvBC,QAA2BF,EAAgBF,EAAKzK,UACtD,MAAO,CACLD,UAAWqI,EAA8BqC,EAAK1K,gBAAiB2K,EAAkBD,EAAKzK,UAAWyK,EAAK9I,UACtG3B,SAAU,CACRW,EAAG,EACHG,EAAG,EACHF,MAAOiK,EAAmBjK,MAC1BG,OAAQ8J,EAAmB9J,QAGjC,EAYE+J,eA9QF,SAAwB1I,GACtB,OAAO/I,MAAMK,KAAK0I,EAAQ0I,iBAC5B,EA6QEF,cA9GF,SAAuBxI,GACrB,MAAM,MACJxB,EAAK,OACLG,GACEkD,EAAiB7B,GACrB,MAAO,CACLxB,QACAG,SAEJ,EAsGEgC,WACAP,UAAS,KACTuI,MAdF,SAAe3I,GACb,MAA+C,SAAxC+B,EAAAA,EAAAA,IAAiB/B,GAASuF,SACnC,GAoGA,SAASqD,EAAWjL,EAAWC,EAAUiL,EAAQ3J,QAC/B,IAAZA,IACFA,EAAU,CAAC,GAEb,MAAM,eACJ4J,GAAiB,EAAI,eACrBC,GAAiB,EAAI,cACrBC,EAA0C,oBAAnBC,eAA6B,YACpDC,EAA8C,oBAAzBC,qBAAmC,eACxDC,GAAiB,GACflK,EACEmK,EAAc7G,EAAc7E,GAC5B2L,EAAYR,GAAkBC,EAAiB,IAAKM,GAAcjC,EAAAA,EAAAA,IAAqBiC,GAAe,OAAQjC,EAAAA,EAAAA,IAAqBxJ,IAAa,GACtJ0L,EAAU3S,SAAQgR,IAChBmB,GAAkBnB,EAAS4B,iBAAiB,SAAUV,EAAQ,CAC5DW,SAAS,IAEXT,GAAkBpB,EAAS4B,iBAAiB,SAAUV,EAAO,IAE/D,MAAMY,EAAYJ,GAAeH,EAvGnC,SAAqBlJ,EAAS0J,GAC5B,IACIC,EADAC,EAAK,KAET,MAAMC,GAAOvJ,EAAAA,EAAAA,IAAmBN,GAChC,SAAS8J,IACP,IAAIC,EACJC,aAAaL,GACC,OAAbI,EAAMH,IAAeG,EAAIE,aAC1BL,EAAK,IACP,CAgEA,OA/DA,SAASM,EAAQC,EAAMC,QACR,IAATD,IACFA,GAAO,QAES,IAAdC,IACFA,EAAY,GAEdN,IACA,MAAM,KACJ9I,EAAI,IACJF,EAAG,MACHtC,EAAK,OACLG,GACEqB,EAAQ2C,wBAIZ,GAHKwH,GACHT,KAEGlL,IAAUG,EACb,OAEF,MAKMO,EAAU,CACdmL,aANeC,EAAAA,EAAAA,IAAMxJ,GAIQ,QAHZwJ,EAAAA,EAAAA,IAAMT,EAAKhF,aAAe7D,EAAOxC,IAGC,QAFjC8L,EAAAA,EAAAA,IAAMT,EAAK/E,cAAgBhE,EAAMnC,IAEuB,QAD1D2L,EAAAA,EAAAA,IAAMtJ,GACyE,KAG/FoJ,WAAWxI,EAAAA,EAAAA,IAAI,GAAGH,EAAAA,EAAAA,IAAI,EAAG2I,KAAe,GAE1C,IAAIG,GAAgB,EACpB,SAASC,EAAcC,GACrB,MAAMC,EAAQD,EAAQ,GAAGE,kBACzB,GAAID,IAAUN,EAAW,CACvB,IAAKG,EACH,OAAOL,IAEJQ,EAOHR,GAAQ,EAAOQ,GAJff,EAAYiB,YAAW,KACrBV,GAAQ,EAAO,KAAK,GACnB,IAIP,CACAK,GAAgB,CAClB,CAIA,IACEX,EAAK,IAAIT,qBAAqBqB,EAAe,IACxCtL,EAEH2K,KAAMA,EAAK1E,eAEf,CAAE,MAAO9P,GACPuU,EAAK,IAAIT,qBAAqBqB,EAAetL,EAC/C,CACA0K,EAAGiB,QAAQ7K,EACb,CACAkK,EAAQ,GACDJ,CACT,CA6BiDgB,CAAYzB,EAAaR,GAAU,KAClF,IAsBIkC,EAtBAC,GAAkB,EAClBC,EAAiB,KACjBjC,IACFiC,EAAiB,IAAIhC,gBAAelO,IAClC,IAAKmQ,GAAcnQ,EACfmQ,GAAcA,EAAWC,SAAW9B,GAAe4B,IAGrDA,EAAeG,UAAUxN,GACzByN,qBAAqBL,GACrBA,EAAiBM,uBAAsB,KACrC,IAAIC,EACkC,OAArCA,EAAkBN,IAA2BM,EAAgBV,QAAQjN,EAAS,KAGnFiL,GAAQ,IAENQ,IAAgBD,GAClB6B,EAAeJ,QAAQxB,GAEzB4B,EAAeJ,QAAQjN,IAGzB,IAAI4N,EAAcpC,EAAiBzG,EAAsBhF,GAAa,KAatE,OAZIyL,GAGJ,SAASqC,IACP,MAAMC,EAAc/I,EAAsBhF,IACtC6N,GAAgBE,EAAYnN,IAAMiN,EAAYjN,GAAKmN,EAAYhN,IAAM8M,EAAY9M,GAAKgN,EAAYlN,QAAUgN,EAAYhN,OAASkN,EAAY/M,SAAW6M,EAAY7M,QACtKkK,IAEF2C,EAAcE,EACdX,EAAUO,sBAAsBG,EAClC,CATEA,GAUF5C,IACO,KACL,IAAI8C,EACJrC,EAAU3S,SAAQgR,IAChBmB,GAAkBnB,EAASiE,oBAAoB,SAAU/C,GACzDE,GAAkBpB,EAASiE,oBAAoB,SAAU/C,EAAO,IAErD,MAAbY,GAAqBA,IACkB,OAAtCkC,EAAmBV,IAA2BU,EAAiB1B,aAChEgB,EAAiB,KACb7B,GACFiC,qBAAqBN,EACvB,CAEJ,CAUA,MAAM/L,EAAiB6M,EASjBC,ED4JS,SAAU5M,GAIvB,YAHgB,IAAZA,IACFA,EAAU,GAEL,CACL7H,KAAM,SACN6H,UACA,QAAM6M,CAAG9M,GACP,IAAI+M,EAAuBC,EAC3B,MAAM,EACJ1N,EAAC,EACDG,EAAC,UACDjB,EAAS,eACTyO,GACEjN,EACEkN,QA/DZpN,eAAoCE,EAAOC,GACzC,MAAM,UACJzB,EAAS,SACT2B,EAAQ,SACRE,GACEL,EACEvB,QAA+B,MAAlB0B,EAASuJ,WAAgB,EAASvJ,EAASuJ,MAAMrJ,EAAS1B,WACvEO,GAAOC,EAAAA,EAAAA,IAAQX,GACf2O,GAAYtN,EAAAA,EAAAA,IAAarB,GACzBY,EAAwC,OAA3BP,EAAAA,EAAAA,IAAYL,GACzB4O,EAAgB,CAAC,OAAQ,OAAOnU,SAASiG,IAAS,EAAI,EACtDmO,EAAiB5O,GAAOW,GAAc,EAAI,EAC1CkO,GAAW1M,EAAAA,EAAAA,IAASX,EAASD,GAGnC,IAAI,SACFuN,EAAQ,UACRC,EAAS,cACT1O,GACsB,kBAAbwO,EAAwB,CACjCC,SAAUD,EACVE,UAAW,EACX1O,cAAe,MACb,CACFyO,SAAU,EACVC,UAAW,EACX1O,cAAe,QACZwO,GAKL,OAHIH,GAAsC,kBAAlBrO,IACtB0O,EAA0B,QAAdL,GAAuC,EAAjBrO,EAAqBA,GAElDM,EAAa,CAClBE,EAAGkO,EAAYH,EACf5N,EAAG8N,EAAWH,GACZ,CACF9N,EAAGiO,EAAWH,EACd3N,EAAG+N,EAAYH,EAEnB,CAwB+BI,CAAqBzN,EAAOC,GAIrD,OAAIzB,KAAkE,OAAlDuO,EAAwBE,EAAeJ,aAAkB,EAASE,EAAsBvO,YAAgE,OAAjDwO,EAAwBC,EAAeS,QAAkBV,EAAsBW,gBACjM,CAAC,EAEH,CACLrO,EAAGA,EAAI4N,EAAW5N,EAClBG,EAAGA,EAAIyN,EAAWzN,EAClB2J,KAAM,IACD8D,EACH1O,aAGN,EAEJ,ECpLMoP,ED7TgB,SAAU3N,GAI9B,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL7H,KAAM,gBACN6H,UACA,QAAM6M,CAAG9M,GACP,IAAI6N,EAAuBC,EAAwBC,EACnD,MAAM,MACJ3N,EAAK,eACL6M,EAAc,UACdzO,EAAS,SACT2B,EAAQ,SACRE,GACEL,GACE,UACJwN,GAAY,EAAK,UACjBL,EAAS,kBACTa,EAAoBC,EAAAA,GAAU,cAC9BC,GAAgB,KACbC,IACDvN,EAAAA,EAAAA,IAASX,EAASD,GAChBoO,OAA6B/Q,IAAd8P,GAA2Ba,IAAsBC,EAAAA,GAtC5E,SAA0Bd,EAAWe,EAAeF,GAElD,OAD2Cb,EAAY,IAAIa,EAAkB5W,QAAOoH,IAAaqB,EAAAA,EAAAA,IAAarB,KAAe2O,OAAea,EAAkB5W,QAAOoH,IAAaqB,EAAAA,EAAAA,IAAarB,KAAe2O,KAAca,EAAkB5W,QAAOoH,IAAaW,EAAAA,EAAAA,IAAQX,KAAeA,KAC/OpH,QAAOoH,IAC3C2O,IACKtN,EAAAA,EAAAA,IAAarB,KAAe2O,KAAce,IAAgBG,EAAAA,EAAAA,IAA8B7P,KAAeA,GAIpH,CA8ByF8P,CAAiBnB,GAAa,KAAMe,EAAeF,GAAqBA,EACrJ9L,QAAiBnC,EAAeC,EAAOmO,GACvCI,GAA0E,OAAzDV,EAAwBZ,EAAeW,oBAAyB,EAASC,EAAsBW,QAAU,EAC1HC,EAAmBL,EAAaG,GACtC,GAAwB,MAApBE,EACF,MAAO,CAAC,EAEV,MAAMC,GAAiBC,EAAAA,EAAAA,IAAkBF,EAAkBrO,QAAgC,MAAlBD,EAASuJ,WAAgB,EAASvJ,EAASuJ,MAAMrJ,EAAS1B,YAGnI,GAAIH,IAAciQ,EAChB,MAAO,CACLG,MAAO,CACLpQ,UAAW4P,EAAa,KAI9B,MAAMS,EAAmB,CAAC3M,GAAS/C,EAAAA,EAAAA,IAAQsP,IAAoBvM,EAASwM,EAAe,IAAKxM,EAASwM,EAAe,KAC9GI,EAAe,KAAiE,OAA1DhB,EAAyBb,EAAeW,oBAAyB,EAASE,EAAuBiB,YAAc,GAAK,CAC9IvQ,UAAWiQ,EACXM,UAAWF,IAEPG,EAAgBZ,EAAaG,EAAe,GAGlD,GAAIS,EACF,MAAO,CACL5F,KAAM,CACJoF,MAAOD,EAAe,EACtBQ,UAAWD,GAEbF,MAAO,CACLpQ,UAAWwQ,IAIjB,MAAMC,EAA8BH,EAAarM,KAAIyM,IACnD,MAAM/B,GAAYtN,EAAAA,EAAAA,IAAaqP,EAAE1Q,WACjC,MAAO,CAAC0Q,EAAE1Q,UAAW2O,GAAaK,EAElC0B,EAAEH,UAAU5W,MAAM,EAAG,GAAG8Q,QAAO,CAACkG,EAAKC,IAAMD,EAAMC,GAAG,GAEpDF,EAAEH,UAAU,GAAIG,EAAEH,UAAU,IAC3BM,MAAK,CAACvX,EAAGwX,IAAMxX,EAAE,GAAKwX,EAAE,KAKrBC,GAA8E,OAA3DxB,EAJWkB,EAA4B7X,QAAO8X,GAAKA,EAAE,GAAG/W,MAAM,GAGvF0H,EAAAA,EAAAA,IAAaqP,EAAE,IAAM,EAAI,GAAGM,OAAMJ,GAAKA,GAAK,MACiC,SAAc,EAASrB,EAAsB,KAAOkB,EAA4B,GAAG,GAChK,OAAIM,IAAmB/Q,EACd,CACL4K,KAAM,CACJoF,MAAOD,EAAe,EACtBQ,UAAWD,GAEbF,MAAO,CACLpQ,UAAW+Q,IAIV,CAAC,CACV,EAEJ,EC8OME,EDoLQ,SAAUxP,GAItB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL7H,KAAM,QACN6H,UACA,QAAM6M,CAAG9M,GACP,MAAM,EACJV,EAAC,EACDG,EAAC,UACDjB,GACEwB,GAEFuN,SAAUmC,GAAgB,EAC1BlC,UAAWmC,GAAiB,EAAK,QACjCC,EAAU,CACR9C,GAAIhR,IACF,IAAI,EACFwD,EAAC,EACDG,GACE3D,EACJ,MAAO,CACLwD,IACAG,IACD,MAGF0O,IACDvN,EAAAA,EAAAA,IAASX,EAASD,GAChBJ,EAAS,CACbN,IACAG,KAEIyC,QAAiBnC,EAAeC,EAAOmO,GACvCX,GAAY3O,EAAAA,EAAAA,KAAYM,EAAAA,EAAAA,IAAQX,IAChC+O,GAAWsC,EAAAA,EAAAA,IAAgBrC,GACjC,IAAIsC,EAAgBlQ,EAAO2N,GACvBwC,EAAiBnQ,EAAO4N,GAC5B,GAAIkC,EAAe,CACjB,MACMM,EAAuB,MAAbzC,EAAmB,SAAW,QACxC/K,EAAMsN,EAAgB5N,EAFC,MAAbqL,EAAmB,MAAQ,QAGrC5K,EAAMmN,EAAgB5N,EAAS8N,GACrCF,GAAgBG,EAAAA,EAAAA,IAAMzN,EAAKsN,EAAenN,EAC5C,CACA,GAAIgN,EAAgB,CAClB,MACMK,EAAwB,MAAdxC,EAAoB,SAAW,QACzChL,EAAMuN,EAAiB7N,EAFC,MAAdsL,EAAoB,MAAQ,QAGtC7K,EAAMoN,EAAiB7N,EAAS8N,GACtCD,GAAiBE,EAAAA,EAAAA,IAAMzN,EAAKuN,EAAgBpN,EAC9C,CACA,MAAMuN,EAAgBN,EAAQ9C,GAAG,IAC5B9M,EACH,CAACuN,GAAWuC,EACZ,CAACtC,GAAYuC,IAEf,MAAO,IACFG,EACH9G,KAAM,CACJ9J,EAAG4Q,EAAc5Q,EAAIA,EACrBG,EAAGyQ,EAAczQ,EAAIA,GAG3B,EAEJ,EC/OM0Q,ED9OO,SAAUlQ,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL7H,KAAM,OACN6H,UACA,QAAM6M,CAAG9M,GACP,IAAIgN,EAAuBoD,EAC3B,MAAM,UACJ5R,EAAS,eACTyO,EAAc,MACd7M,EAAK,iBACLiQ,EAAgB,SAChBlQ,EAAQ,SACRE,GACEL,GAEFuN,SAAUmC,GAAgB,EAC1BlC,UAAWmC,GAAiB,EAC5BW,mBAAoBC,EAA2B,iBAC/CC,EAAmB,UAAS,0BAC5BC,EAA4B,OAAM,cAClCC,GAAgB,KACbvC,IACDvN,EAAAA,EAAAA,IAASX,EAASD,GAMtB,GAAsD,OAAjDgN,EAAwBC,EAAeS,QAAkBV,EAAsBW,gBAClF,MAAO,CAAC,EAEV,MAAMzO,GAAOC,EAAAA,EAAAA,IAAQX,GACfmS,GAAkB9R,EAAAA,EAAAA,IAAYwR,GAC9BO,GAAkBzR,EAAAA,EAAAA,IAAQkR,KAAsBA,EAChD5R,QAA+B,MAAlB0B,EAASuJ,WAAgB,EAASvJ,EAASuJ,MAAMrJ,EAAS1B,WACvE2R,EAAqBC,IAAgCK,IAAoBF,EAAgB,EAACG,EAAAA,EAAAA,IAAqBR,KAAqBS,EAAAA,EAAAA,IAAsBT,IAC1JU,EAA6D,SAA9BN,GAChCF,GAA+BQ,GAClCT,EAAmBhZ,SAAQ0Z,EAAAA,EAAAA,IAA0BX,EAAkBK,EAAeD,EAA2BhS,IAEnH,MAAMwP,EAAa,CAACoC,KAAqBC,GACnCpO,QAAiBnC,EAAeC,EAAOmO,GACvCY,EAAY,GAClB,IAAIkC,GAAiE,OAA/Cb,EAAuBnD,EAAekD,WAAgB,EAASC,EAAqBrB,YAAc,GAIxH,GAHIW,GACFX,EAAUzX,KAAK4K,EAAShD,IAEtByQ,EAAgB,CAClB,MAAMvN,GAAQuM,EAAAA,EAAAA,IAAkBnQ,EAAW4B,EAAO3B,GAClDsQ,EAAUzX,KAAK4K,EAASE,EAAM,IAAKF,EAASE,EAAM,IACpD,CAOA,GANA6O,EAAgB,IAAIA,EAAe,CACjCzS,YACAuQ,eAIGA,EAAUS,OAAMtQ,GAAQA,GAAQ,IAAI,CACvC,IAAIgS,EAAuBC,EAC3B,MAAMC,IAA+D,OAAhDF,EAAwBjE,EAAekD,WAAgB,EAASe,EAAsB1C,QAAU,GAAK,EACpHQ,EAAgBf,EAAWmD,GACjC,GAAIpC,EAEF,MAAO,CACL5F,KAAM,CACJoF,MAAO4C,EACPrC,UAAWkC,GAEbrC,MAAO,CACLpQ,UAAWwQ,IAOjB,IAAIO,EAAgJ,OAA9H4B,EAAwBF,EAAc7Z,QAAO8X,GAAKA,EAAEH,UAAU,IAAM,IAAGM,MAAK,CAACvX,EAAGwX,IAAMxX,EAAEiX,UAAU,GAAKO,EAAEP,UAAU,KAAI,SAAc,EAASoC,EAAsB3S,UAG1L,IAAK+Q,EACH,OAAQiB,GACN,IAAK,UACH,CACE,IAAIa,EACJ,MAAM7S,EASmJ,OATtI6S,EAAyBJ,EAAc7Z,QAAO8X,IAC/D,GAAI6B,EAA8B,CAChC,MAAMO,GAAkBzS,EAAAA,EAAAA,IAAYqQ,EAAE1Q,WACtC,OAAO8S,IAAoBX,GAGP,MAApBW,CACF,CACA,OAAO,CAAI,IACV7O,KAAIyM,GAAK,CAACA,EAAE1Q,UAAW0Q,EAAEH,UAAU3X,QAAO8K,GAAYA,EAAW,IAAG+G,QAAO,CAACkG,EAAKjN,IAAaiN,EAAMjN,GAAU,MAAKmN,MAAK,CAACvX,EAAGwX,IAAMxX,EAAE,GAAKwX,EAAE,KAAI,SAAc,EAAS+B,EAAuB,GAC5L7S,IACF+Q,EAAiB/Q,GAEnB,KACF,CACF,IAAK,mBACH+Q,EAAiBc,EAIvB,GAAI7R,IAAc+Q,EAChB,MAAO,CACLX,MAAO,CACLpQ,UAAW+Q,GAInB,CACA,MAAO,CAAC,CACV,EAEJ,ECgIMgC,EDmTO,SAAUtR,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL7H,KAAM,OACN6H,UACA,QAAM6M,CAAG9M,GACP,MAAM,UACJxB,EAAS,MACT4B,EAAK,SACLD,EAAQ,SACRE,GACEL,GACE,MACJzI,EAAQA,UACL4W,IACDvN,EAAAA,EAAAA,IAASX,EAASD,GAChBkC,QAAiBnC,EAAeC,EAAOmO,GACvCjP,GAAOC,EAAAA,EAAAA,IAAQX,GACf2O,GAAYtN,EAAAA,EAAAA,IAAarB,GACzBgT,EAAqC,OAA3B3S,EAAAA,EAAAA,IAAYL,IACtB,MACJe,EAAK,OACLG,GACEU,EAAMzB,SACV,IAAI8S,EACAC,EACS,QAATxS,GAA2B,WAATA,GACpBuS,EAAavS,EACbwS,EAAYvE,WAAyC,MAAlBhN,EAASuJ,WAAgB,EAASvJ,EAASuJ,MAAMrJ,EAAS1B,WAAc,QAAU,OAAS,OAAS,UAEvI+S,EAAYxS,EACZuS,EAA2B,QAAdtE,EAAsB,MAAQ,UAE7C,MAAMwE,EAAwBjS,EAASwC,EAASL,IAAMK,EAASJ,OACzD8P,EAAuBrS,EAAQ2C,EAASH,KAAOG,EAASF,MACxD6P,GAA0BrP,EAAAA,EAAAA,IAAI9C,EAASwC,EAASuP,GAAaE,GAC7DG,GAAyBtP,EAAAA,EAAAA,IAAIjD,EAAQ2C,EAASwP,GAAYE,GAC1DG,GAAW/R,EAAMiN,eAAewC,MACtC,IAAIuC,EAAkBH,EAClBI,EAAiBH,EAMrB,GALIN,EACFS,EAAiB9E,GAAa4E,GAAUvP,EAAAA,EAAAA,IAAIsP,EAAwBF,GAAwBA,EAE5FI,EAAkB7E,GAAa4E,GAAUvP,EAAAA,EAAAA,IAAIqP,EAAyBF,GAAyBA,EAE7FI,IAAY5E,EAAW,CACzB,MAAM+E,GAAOvP,EAAAA,EAAAA,IAAIT,EAASH,KAAM,GAC1BoQ,GAAOxP,EAAAA,EAAAA,IAAIT,EAASF,MAAO,GAC3BoQ,GAAOzP,EAAAA,EAAAA,IAAIT,EAASL,IAAK,GACzBwQ,GAAO1P,EAAAA,EAAAA,IAAIT,EAASJ,OAAQ,GAC9B0P,EACFS,EAAiB1S,EAAQ,GAAc,IAAT2S,GAAuB,IAATC,EAAaD,EAAOC,GAAOxP,EAAAA,EAAAA,IAAIT,EAASH,KAAMG,EAASF,QAEnGgQ,EAAkBtS,EAAS,GAAc,IAAT0S,GAAuB,IAATC,EAAaD,EAAOC,GAAO1P,EAAAA,EAAAA,IAAIT,EAASL,IAAKK,EAASJ,QAExG,OACMvK,EAAM,IACPyI,EACHiS,iBACAD,oBAEF,MAAMM,QAAuBnS,EAASoJ,cAAclJ,EAAS1B,UAC7D,OAAIY,IAAU+S,EAAe/S,OAASG,IAAW4S,EAAe5S,OACvD,CACLkP,MAAO,CACLxO,OAAO,IAIN,CAAC,CACV,EAEJ,ECtXMmS,EDrHO,SAAUtS,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL7H,KAAM,OACN6H,UACA,QAAM6M,CAAG9M,GACP,MAAM,MACJI,GACEJ,GACE,SACJM,EAAW,qBACR6N,IACDvN,EAAAA,EAAAA,IAASX,EAASD,GACtB,OAAQM,GACN,IAAK,kBACH,CACE,MAIM4G,EAAUjF,QAJOlC,EAAeC,EAAO,IACxCmO,EACH1N,eAAgB,cAEuBL,EAAM1B,WAC/C,MAAO,CACL0K,KAAM,CACJoJ,uBAAwBtL,EACxBuL,gBAAiBtQ,EAAsB+E,IAG7C,CACF,IAAK,UACH,CACE,MAIMA,EAAUjF,QAJOlC,EAAeC,EAAO,IACxCmO,EACHzN,aAAa,IAE0BN,EAAMzB,UAC/C,MAAO,CACLyK,KAAM,CACJsJ,eAAgBxL,EAChByL,QAASxQ,EAAsB+E,IAGrC,CACF,QAEI,MAAO,CAAC,EAGhB,EAEJ,ECyEMwG,ED9bQzN,IAAW,CACvB7H,KAAM,QACN6H,UACA,QAAM6M,CAAG9M,GACP,MAAM,EACJV,EAAC,EACDG,EAAC,UACDjB,EAAS,MACT4B,EAAK,SACLD,EAAQ,SACRE,EAAQ,eACR4M,GACEjN,GAEE,QACJe,EAAO,QACPJ,EAAU,IACRC,EAAAA,EAAAA,IAASX,EAASD,IAAU,CAAC,EACjC,GAAe,MAAXe,EACF,MAAO,CAAC,EAEV,MAAMF,GAAgBC,EAAAA,EAAAA,IAAiBH,GACjCf,EAAS,CACbN,IACAG,KAEImT,GAAO7T,EAAAA,EAAAA,IAAiBP,GACxB/G,GAASwH,EAAAA,EAAAA,IAAc2T,GACvBC,QAAwB1S,EAASoJ,cAAcxI,GAC/CyQ,EAAmB,MAAToB,EACVE,EAAUtB,EAAU,MAAQ,OAC5BuB,EAAUvB,EAAU,SAAW,QAC/BwB,EAAaxB,EAAU,eAAiB,cACxCyB,EAAU7S,EAAM1B,UAAUjH,GAAU2I,EAAM1B,UAAUkU,GAAQhT,EAAOgT,GAAQxS,EAAMzB,SAASlH,GAC1Fyb,EAAYtT,EAAOgT,GAAQxS,EAAM1B,UAAUkU,GAC3CO,QAAuD,MAA5BhT,EAASqB,qBAA0B,EAASrB,EAASqB,gBAAgBT,IACtG,IAAIqS,EAAaD,EAAoBA,EAAkBH,GAAc,EAGhEI,SAA6C,MAAtBjT,EAASgB,eAAoB,EAAShB,EAASgB,UAAUgS,MACnFC,EAAa/S,EAAS1B,SAASqU,IAAe5S,EAAMzB,SAASlH,IAE/D,MAAM4b,EAAoBJ,EAAU,EAAIC,EAAY,EAI9CI,EAAyBF,EAAa,EAAIP,EAAgBpb,GAAU,EAAI,EACxE8b,GAAa/Q,EAAAA,EAAAA,IAAI3B,EAAciS,GAAUQ,GACzCE,GAAahR,EAAAA,EAAAA,IAAI3B,EAAckS,GAAUO,GAIzCG,EAAQF,EACR5Q,EAAMyQ,EAAaP,EAAgBpb,GAAU+b,EAC7CE,EAASN,EAAa,EAAIP,EAAgBpb,GAAU,EAAI4b,EACxDxG,GAASoD,EAAAA,EAAAA,IAAMwD,EAAOC,EAAQ/Q,GAM9BgR,GAAmB1G,EAAeS,OAAoC,OAA3B7N,EAAAA,EAAAA,IAAarB,IAAsBkV,IAAW7G,GAAUzM,EAAM1B,UAAUjH,GAAU,GAAKic,EAASD,EAAQF,EAAaC,GAAcX,EAAgBpb,GAAU,EAAI,EAC5MkW,EAAkBgG,EAAkBD,EAASD,EAAQC,EAASD,EAAQC,EAAS/Q,EAAM,EAC3F,MAAO,CACL,CAACiQ,GAAOhT,EAAOgT,GAAQjF,EACvBvE,KAAM,CACJ,CAACwJ,GAAO/F,EACR+G,aAAcF,EAAS7G,EAASc,KAC5BgG,GAAmB,CACrBhG,oBAGJiB,MAAO+E,EAEX,IC2XIE,ED9CS,SAAU5T,GAIvB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACL7H,KAAM,SACN6H,UACA,QAAM6M,CAAG9M,GACP,MAAM,UACJxB,EAAS,SACT6B,EAAQ,MACRD,EAAK,SACLD,EAAQ,SACRG,GACEN,GAIE,QACJW,EAAU,EAAC,EACXrB,EAAC,EACDG,IACEmB,EAAAA,EAAAA,IAASX,EAASD,GAChB8T,EAAoB9b,MAAMK,WAAwC,MAA3B8H,EAASsJ,oBAAyB,EAAStJ,EAASsJ,eAAepJ,EAAS3B,aAAgB,IACnIqV,EA5CZ,SAAwB3T,GACtB,MAAM4T,EAAc5T,EAAMjI,QAAQkX,MAAK,CAACvX,EAAGwX,IAAMxX,EAAE2H,EAAI6P,EAAE7P,IACnDwU,EAAS,GACf,IAAIC,EAAW,KACf,IAAK,IAAIhe,EAAI,EAAGA,EAAI8d,EAAYvc,OAAQvB,IAAK,CAC3C,MAAMoL,EAAO0S,EAAY9d,IACpBge,GAAY5S,EAAK7B,EAAIyU,EAASzU,EAAIyU,EAASxU,OAAS,EACvDuU,EAAO3c,KAAK,CAACgK,IAEb2S,EAAOA,EAAOxc,OAAS,GAAGH,KAAKgK,GAEjC4S,EAAW5S,CACb,CACA,OAAO2S,EAAOxR,KAAInB,IAAQL,EAAAA,EAAAA,IAAiBqB,EAAgBhB,KAC7D,CA8B0B6S,CAAeL,GAC7BM,GAAWnT,EAAAA,EAAAA,IAAiBqB,EAAgBwR,IAC5CjT,GAAgBC,EAAAA,EAAAA,IAAiBH,GAsDvC,MAAM0T,QAAmBlU,EAASgJ,gBAAgB,CAChDzK,UAAW,CACTgF,sBAvDJ,WAEE,GAA2B,IAAvBqQ,EAAYtc,QAAgBsc,EAAY,GAAGhS,KAAOgS,EAAY,GAAG/R,OAAc,MAAL1C,GAAkB,MAALG,EAEzF,OAAOsU,EAAYO,MAAKhT,GAAQhC,EAAIgC,EAAKS,KAAOlB,EAAckB,MAAQzC,EAAIgC,EAAKU,MAAQnB,EAAcmB,OAASvC,EAAI6B,EAAKO,IAAMhB,EAAcgB,KAAOpC,EAAI6B,EAAKQ,OAASjB,EAAciB,UAAWsS,EAI/L,GAAIL,EAAYtc,QAAU,EAAG,CAC3B,GAA+B,OAA3BoH,EAAAA,EAAAA,IAAYL,GAAoB,CAClC,MAAM+V,EAAYR,EAAY,GACxBS,EAAWT,EAAYA,EAAYtc,OAAS,GAC5Cgd,EAA+B,SAAvBtV,EAAAA,EAAAA,IAAQX,GAChBqD,EAAM0S,EAAU1S,IAChBC,EAAS0S,EAAS1S,OAClBC,EAAO0S,EAAQF,EAAUxS,KAAOyS,EAASzS,KACzCC,EAAQyS,EAAQF,EAAUvS,MAAQwS,EAASxS,MAGjD,MAAO,CACLH,MACAC,SACAC,OACAC,QACAzC,MAPYyC,EAAQD,EAQpBrC,OAPaoC,EAASD,EAQtBvC,EAAGyC,EACHtC,EAAGoC,EAEP,CACA,MAAM6S,EAAoC,UAAvBvV,EAAAA,EAAAA,IAAQX,GACrBmW,GAAWhS,EAAAA,EAAAA,OAAOoR,EAAYtR,KAAInB,GAAQA,EAAKU,SAC/C4S,GAAUpS,EAAAA,EAAAA,OAAOuR,EAAYtR,KAAInB,GAAQA,EAAKS,QAC9C8S,EAAed,EAAY3c,QAAOkK,GAAQoT,EAAapT,EAAKS,OAAS6S,EAAUtT,EAAKU,QAAU2S,IAC9F9S,EAAMgT,EAAa,GAAGhT,IACtBC,EAAS+S,EAAaA,EAAapd,OAAS,GAAGqK,OAKrD,MAAO,CACLD,MACAC,SACAC,KAPW6S,EAQX5S,MAPY2S,EAQZpV,MARYoV,EADDC,EAUXlV,OAPaoC,EAASD,EAQtBvC,EAXWsV,EAYXnV,EAAGoC,EAEP,CACA,OAAOuS,CACT,GAKEzV,SAAU0B,EAAS1B,SACnB2B,aAEF,OAAIF,EAAM1B,UAAUY,IAAM+U,EAAW3V,UAAUY,GAAKc,EAAM1B,UAAUe,IAAM4U,EAAW3V,UAAUe,GAAKW,EAAM1B,UAAUa,QAAU8U,EAAW3V,UAAUa,OAASa,EAAM1B,UAAUgB,SAAW2U,EAAW3V,UAAUgB,OACnM,CACLkP,MAAO,CACLxO,MAAOiU,IAIN,CAAC,CACV,EAEJ,EC9CMS,EDiNa,SAAU7U,GAI3B,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLA,UACA6M,EAAAA,CAAG9M,GACD,MAAM,EACJV,EAAC,EACDG,EAAC,UACDjB,EAAS,MACT4B,EAAK,eACL6M,GACEjN,GACE,OACJ6M,EAAS,EACTU,SAAUmC,GAAgB,EAC1BlC,UAAWmC,GAAiB,IAC1B/O,EAAAA,EAAAA,IAASX,EAASD,GAChBJ,EAAS,CACbN,IACAG,KAEI+N,GAAY3O,EAAAA,EAAAA,IAAYL,GACxB+O,GAAWsC,EAAAA,EAAAA,IAAgBrC,GACjC,IAAIsC,EAAgBlQ,EAAO2N,GACvBwC,EAAiBnQ,EAAO4N,GAC5B,MAAMuH,GAAYnU,EAAAA,EAAAA,IAASiM,EAAQ7M,GAC7BgV,EAAsC,kBAAdD,EAAyB,CACrDxH,SAAUwH,EACVvH,UAAW,GACT,CACFD,SAAU,EACVC,UAAW,KACRuH,GAEL,GAAIrF,EAAe,CACjB,MAAMuF,EAAmB,MAAb1H,EAAmB,SAAW,QACpC2H,EAAW9U,EAAM1B,UAAU6O,GAAYnN,EAAMzB,SAASsW,GAAOD,EAAezH,SAC5E4H,EAAW/U,EAAM1B,UAAU6O,GAAYnN,EAAM1B,UAAUuW,GAAOD,EAAezH,SAC/EuC,EAAgBoF,EAClBpF,EAAgBoF,EACPpF,EAAgBqF,IACzBrF,EAAgBqF,EAEpB,CACA,GAAIxF,EAAgB,CAClB,IAAI5C,EAAuBqI,EAC3B,MAAMH,EAAmB,MAAb1H,EAAmB,QAAU,SACnC8H,EAAe,CAAC,MAAO,QAAQpc,UAASkG,EAAAA,EAAAA,IAAQX,IAChD0W,EAAW9U,EAAM1B,UAAU8O,GAAapN,EAAMzB,SAASsW,IAAQI,IAAmE,OAAlDtI,EAAwBE,EAAeJ,aAAkB,EAASE,EAAsBS,KAAmB,IAAM6H,EAAe,EAAIL,EAAexH,WACnO2H,EAAW/U,EAAM1B,UAAU8O,GAAapN,EAAM1B,UAAUuW,IAAQI,EAAe,GAAyD,OAAnDD,EAAyBnI,EAAeJ,aAAkB,EAASuI,EAAuB5H,KAAe,IAAM6H,EAAeL,EAAexH,UAAY,GAChPuC,EAAiBmF,EACnBnF,EAAiBmF,EACRnF,EAAiBoF,IAC1BpF,EAAiBoF,EAErB,CACA,MAAO,CACL,CAAC5H,GAAWuC,EACZ,CAACtC,GAAYuC,EAEjB,EAEJ,EC3QMuF,EAAkBA,CAAC5W,EAAWC,EAAUsB,KAI5C,MAAMjF,EAAQ,IAAIua,IACZC,EAAgB,CACpBrV,cACGF,GAECwV,EAAoB,IACrBD,EAAcrV,SACjB0I,GAAI7N,GAEN,MDvnBsB8E,OAAOpB,EAAWC,EAAU+W,KAClD,MAAM,UACJlX,EAAY,SAAQ,SACpB8B,EAAW,WAAU,WACrBqV,EAAa,GAAE,SACfxV,GACEuV,EACEE,EAAkBD,EAAWve,OAAOwC,SACpC6E,QAA+B,MAAlB0B,EAASuJ,WAAgB,EAASvJ,EAASuJ,MAAM/K,IACpE,IAAIyB,QAAcD,EAASgJ,gBAAgB,CACzCzK,YACAC,WACA2B,cAEE,EACFhB,EAAC,EACDG,GACElB,EAA2B6B,EAAO5B,EAAWC,GAC7CoX,EAAoBrX,EACpByO,EAAiB,CAAC,EAClB6I,EAAa,EACjB,IAAK,IAAI5f,EAAI,EAAGA,EAAI0f,EAAgBne,OAAQvB,IAAK,CAC/C,MAAM,KACJkC,EAAI,GACJ0U,GACE8I,EAAgB1f,IAElBoJ,EAAGyW,EACHtW,EAAGuW,EAAK,KACR5M,EAAI,MACJwF,SACQ9B,EAAG,CACXxN,IACAG,IACA4Q,iBAAkB7R,EAClBA,UAAWqX,EACXvV,WACA2M,iBACA7M,QACAD,WACAE,SAAU,CACR3B,YACAC,cAGJW,EAAa,MAATyW,EAAgBA,EAAQzW,EAC5BG,EAAa,MAATuW,EAAgBA,EAAQvW,EAC5BwN,EAAiB,IACZA,EACH,CAAC7U,GAAO,IACH6U,EAAe7U,MACfgR,IAGHwF,GAASkH,GAAc,KACzBA,IACqB,kBAAVlH,IACLA,EAAMpQ,YACRqX,EAAoBjH,EAAMpQ,WAExBoQ,EAAMxO,QACRA,GAAwB,IAAhBwO,EAAMxO,YAAuBD,EAASgJ,gBAAgB,CAC5DzK,YACAC,WACA2B,aACGsO,EAAMxO,SAGXd,IACAG,KACElB,EAA2B6B,EAAOyV,EAAmBpX,KAE3DvI,GAAK,EAET,CACA,MAAO,CACLoJ,IACAG,IACAjB,UAAWqX,EACXvV,WACA2M,iBACD,ECsiBMgJ,CAAkBvX,EAAWC,EAAU,IACzC6W,EACHrV,SAAUsV,GACV,C,iBC5rBJ,SAAStO,EAAY+O,GACnB,OAAIC,EAAOD,IACDA,EAAKE,UAAY,IAAIC,cAKxB,WACT,CACA,SAAStS,EAAUmS,GACjB,IAAII,EACJ,OAAgB,MAARJ,GAA8D,OAA7CI,EAAsBJ,EAAKhQ,oBAAyB,EAASoQ,EAAoBC,cAAgBC,MAC5H,CACA,SAASnV,EAAmB6U,GAC1B,IAAIpa,EACJ,OAA0F,OAAlFA,GAAQqa,EAAOD,GAAQA,EAAKhQ,cAAgBgQ,EAAKO,WAAaD,OAAOC,eAAoB,EAAS3a,EAAKmL,eACjH,CACA,SAASkP,EAAOtf,GACd,OAAOA,aAAiB6f,MAAQ7f,aAAiBkN,EAAUlN,GAAO6f,IACpE,CACA,SAASvV,EAAUtK,GACjB,OAAOA,aAAiB8f,SAAW9f,aAAiBkN,EAAUlN,GAAO8f,OACvE,CACA,SAAS1T,EAAcpM,GACrB,OAAOA,aAAiB+f,aAAe/f,aAAiBkN,EAAUlN,GAAO+f,WAC3E,CACA,SAASC,EAAahgB,GAEpB,MAA0B,qBAAfigB,aAGJjgB,aAAiBigB,YAAcjgB,aAAiBkN,EAAUlN,GAAOigB,WAC1E,CACA,SAAS1P,EAAkBrG,GACzB,MAAM,SACJmB,EAAQ,UACR6U,EAAS,UACTC,EAAS,QACTC,GACEnU,EAAiB/B,GACrB,MAAO,kCAAkCzI,KAAK4J,EAAW8U,EAAYD,KAAe,CAAC,SAAU,YAAY9d,SAASge,EACtH,CACA,SAAStP,EAAe5G,GACtB,MAAO,CAAC,QAAS,KAAM,MAAM9H,SAASkO,EAAYpG,GACpD,CACA,SAAS0G,EAAW1G,GAClB,MAAO,CAAC,gBAAiB,UAAUsB,MAAK6U,IACtC,IACE,OAAOnW,EAAQoW,QAAQD,EACzB,CAAE,MAAO9gB,GACP,OAAO,CACT,IAEJ,CACA,SAASwR,EAAkBwP,GACzB,MAAMC,EAASrT,IACTnB,EAAM1B,EAAUiW,GAAgBtU,EAAiBsU,GAAgBA,EAGvE,MAAyB,SAAlBvU,EAAIyU,WAA4C,SAApBzU,EAAI0U,eAA2B1U,EAAI2U,eAAsC,WAAtB3U,EAAI2U,gBAAwCH,KAAWxU,EAAI4U,gBAAwC,SAAvB5U,EAAI4U,iBAAuCJ,KAAWxU,EAAIzL,QAAwB,SAAfyL,EAAIzL,QAA8B,CAAC,YAAa,cAAe,UAAUiL,MAAKxL,IAAUgM,EAAI6U,YAAc,IAAIze,SAASpC,MAAW,CAAC,QAAS,SAAU,SAAU,WAAWwL,MAAKxL,IAAUgM,EAAI8U,SAAW,IAAI1e,SAASpC,IAC7b,CACA,SAASgR,EAAmB9G,GAC1B,IAAIwH,EAAc3B,EAAc7F,GAChC,KAAOkC,EAAcsF,KAAiB1B,EAAsB0B,IAAc,CACxE,GAAIX,EAAkBW,GACpB,OAAOA,EACF,GAAId,EAAWc,GACpB,OAAO,KAETA,EAAc3B,EAAc2B,EAC9B,CACA,OAAO,IACT,CACA,SAASvE,IACP,QAAmB,qBAAR4T,MAAwBA,IAAIC,WAChCD,IAAIC,SAAS,0BAA2B,OACjD,CACA,SAAShR,EAAsBqP,GAC7B,MAAO,CAAC,OAAQ,OAAQ,aAAajd,SAASkO,EAAY+O,GAC5D,CACA,SAASpT,EAAiB/B,GACxB,OAAOgD,EAAUhD,GAAS+B,iBAAiB/B,EAC7C,CACA,SAASwE,EAAcxE,GACrB,OAAII,EAAUJ,GACL,CACLyE,WAAYzE,EAAQyE,WACpBa,UAAWtF,EAAQsF,WAGhB,CACLb,WAAYzE,EAAQ+W,QACpBzR,UAAWtF,EAAQgX,QAEvB,CACA,SAASnR,EAAcsP,GACrB,GAA0B,SAAtB/O,EAAY+O,GACd,OAAOA,EAET,MAAMhO,EAENgO,EAAK8B,cAEL9B,EAAKvP,YAELkQ,EAAaX,IAASA,EAAK+B,MAE3B5W,EAAmB6U,GACnB,OAAOW,EAAa3O,GAAUA,EAAO+P,KAAO/P,CAC9C,CACA,SAASgQ,EAA2BhC,GAClC,MAAMvP,EAAaC,EAAcsP,GACjC,OAAIrP,EAAsBF,GACjBuP,EAAKhQ,cAAgBgQ,EAAKhQ,cAAcD,KAAOiQ,EAAKjQ,KAEzDhD,EAAc0D,IAAeS,EAAkBT,GAC1CA,EAEFuR,EAA2BvR,EACpC,CACA,SAASwB,EAAqB+N,EAAMiC,EAAMC,GACxC,IAAIC,OACS,IAATF,IACFA,EAAO,SAEe,IAApBC,IACFA,GAAkB,GAEpB,MAAME,EAAqBJ,EAA2BhC,GAChDqC,EAASD,KAAuE,OAA9CD,EAAuBnC,EAAKhQ,oBAAyB,EAASmS,EAAqBpS,MACrHnC,EAAMC,EAAUuU,GACtB,GAAIC,EAAQ,CACV,MAAMC,EAAezT,EAAgBjB,GACrC,OAAOqU,EAAKrP,OAAOhF,EAAKA,EAAIG,gBAAkB,GAAImD,EAAkBkR,GAAsBA,EAAqB,GAAIE,GAAgBJ,EAAkBjQ,EAAqBqQ,GAAgB,GAC5L,CACA,OAAOL,EAAKrP,OAAOwP,EAAoBnQ,EAAqBmQ,EAAoB,GAAIF,GACtF,CACA,SAASrT,EAAgBjB,GACvB,OAAOA,EAAI2U,QAAU9hB,OAAO6C,eAAesK,EAAI2U,QAAU3U,EAAI0U,aAAe,IAC9E,C,yYCtIA,MAAMpW,EAAQ,CAAC,MAAO,QAAS,SAAU,QACnCsW,EAAa,CAAC,QAAS,OACvBzK,EAA0B7L,EAAM6G,QAAO,CAACkG,EAAKjQ,IAASiQ,EAAIrG,OAAO5J,EAAMA,EAAO,IAAMwZ,EAAW,GAAIxZ,EAAO,IAAMwZ,EAAW,KAAK,IAChIlW,EAAMmW,KAAKnW,IACXG,EAAMgW,KAAKhW,IACXU,EAAQsV,KAAKtV,MACbgI,EAAQsN,KAAKtN,MACb5H,EAAe2L,IAAK,CACxB9P,EAAG8P,EACH3P,EAAG2P,IAECwJ,EAAkB,CACtB7W,KAAM,QACNC,MAAO,OACPF,OAAQ,MACRD,IAAK,UAEDgX,EAAuB,CAC3BC,MAAO,MACPC,IAAK,SAEP,SAAS9I,EAAM6I,EAAOjiB,EAAOkiB,GAC3B,OAAOpW,EAAImW,EAAOtW,EAAI3L,EAAOkiB,GAC/B,CACA,SAASnY,EAAS/J,EAAOmiB,GACvB,MAAwB,oBAAVniB,EAAuBA,EAAMmiB,GAASniB,CACtD,CACA,SAASsI,EAAQX,GACf,OAAOA,EAAUya,MAAM,KAAK,EAC9B,CACA,SAASpZ,EAAarB,GACpB,OAAOA,EAAUya,MAAM,KAAK,EAC9B,CACA,SAASpJ,EAAgB+C,GACvB,MAAgB,MAATA,EAAe,IAAM,GAC9B,CACA,SAAS3T,EAAc2T,GACrB,MAAgB,MAATA,EAAe,SAAW,OACnC,CACA,SAAS/T,EAAYL,GACnB,MAAO,CAAC,MAAO,UAAUvF,SAASkG,EAAQX,IAAc,IAAM,GAChE,CACA,SAASO,EAAiBP,GACxB,OAAOqR,EAAgBhR,EAAYL,GACrC,CACA,SAASmQ,EAAkBnQ,EAAW4B,EAAO3B,QAC/B,IAARA,IACFA,GAAM,GAER,MAAM0O,EAAYtN,EAAarB,GACzBM,EAAgBC,EAAiBP,GACjC/G,EAASwH,EAAcH,GAC7B,IAAIoa,EAAsC,MAAlBpa,EAAwBqO,KAAe1O,EAAM,MAAQ,SAAW,QAAU,OAAuB,UAAd0O,EAAwB,SAAW,MAI9I,OAHI/M,EAAM1B,UAAUjH,GAAU2I,EAAMzB,SAASlH,KAC3CyhB,EAAoBrI,EAAqBqI,IAEpC,CAACA,EAAmBrI,EAAqBqI,GAClD,CACA,SAASpI,EAAsBtS,GAC7B,MAAM2a,EAAoBtI,EAAqBrS,GAC/C,MAAO,CAAC6P,EAA8B7P,GAAY2a,EAAmB9K,EAA8B8K,GACrG,CACA,SAAS9K,EAA8B7P,GACrC,OAAOA,EAAU4a,QAAQ,cAAcjM,GAAa0L,EAAqB1L,IAC3E,CAkBA,SAAS6D,EAA0BxS,EAAWkS,EAAepK,EAAW7H,GACtE,MAAM0O,EAAYtN,EAAarB,GAC/B,IAAI2Z,EAnBN,SAAqBjZ,EAAMma,EAAS5a,GAClC,MAAM6a,EAAK,CAAC,OAAQ,SACdC,EAAK,CAAC,QAAS,QACfC,EAAK,CAAC,MAAO,UACbC,EAAK,CAAC,SAAU,OACtB,OAAQva,GACN,IAAK,MACL,IAAK,SACH,OAAIT,EAAY4a,EAAUE,EAAKD,EACxBD,EAAUC,EAAKC,EACxB,IAAK,OACL,IAAK,QACH,OAAOF,EAAUG,EAAKC,EACxB,QACE,MAAO,GAEb,CAGaC,CAAYva,EAAQX,GAA0B,UAAd8H,EAAuB7H,GAOlE,OANI0O,IACFgL,EAAOA,EAAK1V,KAAIvD,GAAQA,EAAO,IAAMiO,IACjCuD,IACFyH,EAAOA,EAAKrP,OAAOqP,EAAK1V,IAAI4L,MAGzB8J,CACT,CACA,SAAStH,EAAqBrS,GAC5B,OAAOA,EAAU4a,QAAQ,0BAA0Bla,GAAQ0Z,EAAgB1Z,IAC7E,CAUA,SAAS4B,EAAiBH,GACxB,MAA0B,kBAAZA,EAVhB,SAA6BA,GAC3B,MAAO,CACLkB,IAAK,EACLG,MAAO,EACPF,OAAQ,EACRC,KAAM,KACHpB,EAEP,CAEuCgZ,CAAoBhZ,GAAW,CAClEkB,IAAKlB,EACLqB,MAAOrB,EACPmB,OAAQnB,EACRoB,KAAMpB,EAEV,CACA,SAASM,EAAiBK,GACxB,MAAM,EACJhC,EAAC,EACDG,EAAC,MACDF,EAAK,OACLG,GACE4B,EACJ,MAAO,CACL/B,QACAG,SACAmC,IAAKpC,EACLsC,KAAMzC,EACN0C,MAAO1C,EAAIC,EACXuC,OAAQrC,EAAIC,EACZJ,IACAG,IAEJ,C,mCCjHO,SAASma,EACdC,GAGA,GAAoB,oBAATA,EACT,MAAM,IAAItjB,UAHZiB,UAAAC,OAAA,QAAA4F,IAAA7F,UAAA,GAAAA,UAAA,GAAe,gDAAgDqiB,EAKjE,CAoDO,IAAMC,EAAiBC,GACrB/hB,MAAMQ,QAAQuhB,GAAQA,EAAO,CAACA,GAUhC,SAASC,EAAgBC,GAC9B,MAAMC,EAAeliB,MAAMQ,QAAQyhB,EAAmB,IAClDA,EAAmB,GACnBA,EAOJ,OA9CK,SACLE,GAEiC,IADjCC,EAAA5iB,UAAAC,OAAA,QAAA4F,IAAA7F,UAAA,GAAAA,UAAA,GAAe,6EAEf,IACG2iB,EAAM3K,OAAOuK,GAA+C,oBAATA,IACpD,CACA,MAAMM,EAAYF,EACf1X,KAAIsX,GACa,oBAATA,EACH,YAAYA,EAAK3hB,MAAQ,qBAClB2hB,IAEZO,KAAK,MACR,MAAM,IAAI/jB,UAAU,GAAG6jB,KAAgBC,KACzC,CACF,CAyBEE,CACEL,EACA,kGAGKA,CACT,CC3FiCtkB,SAInBe,OAAO6C,eAAe,CAAC,GCNrC,IAOMghB,EACe,qBAAZC,QACHA,QATN,MACE3kB,WAAAA,CAAoBe,GAAA,KAAAA,MAAAA,CAAW,CAC/B6jB,KAAAA,GACE,OAAOzgB,KAAKpD,KACd,GAQI8jB,EAAe,EACfC,EAAa,EA0CnB,SAASC,IACP,MAAO,CACL7hB,EAAG2hB,EACHvL,OAAG,EACHzZ,EAAG,KACHmlB,EAAG,KAEP,CAmGO,SAASC,EACdlB,GAEA,IADA5Z,EAAAzI,UAAAC,OAAA,QAAA4F,IAAA7F,UAAA,GAAAA,UAAA,GAAmD,CAAC,EAEhDwjB,EAASH,IACb,MAAM,oBAAEI,GAAwBhb,EAEhC,IAAI3E,EAEA4f,EAAe,EAEnB,SAASjgB,IACP,IAAIkgB,EAAYH,EAChB,MAAM,OAAEvjB,GAAWD,UACnB,IAAK,IAAItB,EAAI,EAAGuC,EAAIhB,EAAQvB,EAAIuC,EAAGvC,IAAK,CACtC,MAAMklB,EAAM5jB,UAAUtB,GACtB,GACiB,oBAARklB,GACS,kBAARA,GAA4B,OAARA,EAC5B,CAEA,IAAIC,EAAcF,EAAUxlB,EACR,OAAhB0lB,IACFF,EAAUxlB,EAAI0lB,EAAc,IAAIC,SAElC,MAAMC,EAAaF,EAAYpT,IAAImT,QAChB,IAAfG,GACFJ,EAAYN,IACZQ,EAAY1S,IAAIyS,EAAKD,IAErBA,EAAYI,CAEhB,KAAO,CAEL,IAAIC,EAAiBL,EAAUL,EACR,OAAnBU,IACFL,EAAUL,EAAIU,EAAiB,IAAIjG,KAErC,MAAMkG,EAAgBD,EAAevT,IAAImT,QACnB,IAAlBK,GACFN,EAAYN,IACZW,EAAe7S,IAAIyS,EAAKD,IAExBA,EAAYM,CAEhB,CACF,CAEA,MAAMC,EAAiBP,EAEvB,IAAIjT,EAEJ,GAAIiT,EAAUniB,IAAM4hB,EAClB1S,EAASiT,EAAU/L,OAMnB,GAHAlH,EAAS2R,EAAKtiB,MAAM,KAAMC,WAC1B0jB,IAEID,EAAqB,CACvB,MAAMU,EAAkBrgB,GAAYof,WAAapf,EAG5B,MAAnBqgB,GACAV,EAAoBU,EAAqCzT,KAEzDA,EAASyT,EAEQ,IAAjBT,GAAsBA,KAOxB5f,EAHqB,kBAAX4M,GAAkC,OAAXA,GACb,oBAAXA,EAEmB,IAAIsS,EAAItS,GAAUA,CAChD,CAMF,OAHAwT,EAAe1iB,EAAI4hB,EAEnBc,EAAetM,EAAIlH,EACZA,CACT,CAaA,OAXAjN,EAAS2gB,WAAa,KACpBZ,EAASH,IACT5f,EAAS4gB,mBAAmB,EAG9B5gB,EAASigB,aAAe,IAAMA,EAE9BjgB,EAAS4gB,kBAAoB,KAC3BX,EAAe,CAAC,EAGXjgB,CACT,CCaO,SAAS6gB,EAUdC,GAOA,QAAAC,EAAAxkB,UAAAC,OANGwkB,EAAA,IAAAjkB,MAAAgkB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,EAAA,GAAA1kB,UAAA0kB,GAQH,MAAMC,EAG0B,oBAArBJ,EACP,CACEK,QAASL,EACTM,eAAgBJ,GAElBF,EAEEO,EAAiB,WAgBlB,QAAAC,EAAA/kB,UAAAC,OAVAwiB,EAAA,IAAAjiB,MAAAukB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAvC,EAAAuC,GAAAhlB,UAAAglB,GAWH,IAEIlhB,EAFAmhB,EAAiB,EACjBC,EAA2B,EAM3BC,EAKA,CAAC,EAGDC,EAAa3C,EAAmB4C,MAUV,kBAAfD,IACTD,EAAwBC,EAExBA,EAAa3C,EAAmB4C,OAGlCjD,EACEgD,EACA,qFAAqFA,MAKvF,MAAME,EAAkB,IACnBX,KACAQ,IAGC,QACJP,EAAA,eACAC,EAAiB,GAAC,YAClBU,EAAchC,EAAA,mBACdiC,EAAqB,GAAC,cACtBC,EAAgB,CAAC,GACfH,EAOEI,EAAsBpD,EAAcuC,GACpCc,EAA0BrD,EAAckD,GACxC9C,EAAeF,EAAgBC,GAE/BmD,EAAqBhB,GAAQ,WAIjC,OAHAK,IAGQG,EAAgDrlB,MACtD,KACAC,UAEJ,MAAM0lB,GAMN,MAAMhG,EAAW6F,GAAY,WAC3BL,IAEA,MAAMW,EHpSL,SACLnD,EACAoD,GAEA,MAAMD,EAAuB,IACvB,OAAE5lB,GAAWyiB,EACnB,IAAK,IAAIhkB,EAAI,EAAGA,EAAIuB,EAAQvB,IAG1BmnB,EAAqB/lB,KAAK4iB,EAAahkB,GAAGqB,MAAM,KAAM+lB,IAExD,OAAOD,CACT,CGwRmCE,CAC3BrD,EACA1iB,WAmCF,OA9BA8D,EAAa8hB,EAAmB7lB,MAAM,KAAM8lB,GA8BrC/hB,CACT,MAAM6hB,GAON,OAAOxmB,OAAO6mB,OAAOtG,EAAU,CAC7B0F,aACAQ,qBACAlD,eACAwC,yBAA0BA,IAAMA,EAChCe,8BAA+BA,KAC7Bf,EAA2B,CAAC,EAE9BphB,WAAYA,IAAMA,EAClBmhB,eAAgBA,IAAMA,EACtBiB,oBAAqBA,KACnBjB,EAAiB,CAAC,EAEpBL,UACAW,eAOJ,EAMA,OAJApmB,OAAO6mB,OAAOlB,EAAgB,CAC5BqB,UAAWA,IAAMrB,IAGZA,CAIT,CAWO,IAAMsB,EACK9B,EAAsBf,GC5E3B8C,EACXlnB,OAAO6mB,QACL,SAKEM,GAQG,IAPHC,EAAAvmB,UAAAC,OAAA,QAAA4F,IAAA7F,UAAA,GAAAA,UAAA,GAGIomB,GJpYH,SACLI,GAGA,GAAsB,kBAAXA,EACT,MAAM,IAAIznB,UAHZiB,UAAAC,OAAA,QAAA4F,IAAA7F,UAAA,GAAAA,UAAA,GAAe,+CAA+CwmB,EAKhE,CIkYMC,CACEH,EACA,gIACkEA,GAEpE,MAAMI,EAAoBvnB,OAAOO,KAAK4mB,GAIhCK,EAAqBJ,EAHNG,EAAkBzb,KACrCpJ,GAAOykB,EAAqBzkB,MAI5B,WAAoC,QAAA+kB,EAAA5mB,UAAAC,OAAhC4lB,EAAA,IAAArlB,MAAAomB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAhB,EAAAgB,GAAA7mB,UAAA6mB,GACF,OAAOhB,EAAqBpU,QAAO,CAACqV,EAAaznB,EAAO2X,KACtD8P,EAAYJ,EAAkB1P,IAAU3X,EACjCynB,IACN,CAAC,EACN,IAEF,OAAOH,CACT,GACA,CAAER,UAAWA,IAAME,G","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-select/dist/useStateManager-7e1e8489.esm.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/react-select/dist/react-select.esm.js","../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../node_modules/reselect/src/utils.ts","../node_modules/reselect/src/autotrackMemoize/proxy.ts","../node_modules/reselect/src/weakMapMemoize.ts","../node_modules/reselect/src/createSelectorCreator.ts","../node_modules/reselect/src/createStructuredSelector.ts"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\nimport _slicedToArray from '@babel/runtime/helpers/esm/slicedToArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { useState, useCallback } from 'react';\n\nvar _excluded = [\"defaultInputValue\", \"defaultMenuIsOpen\", \"defaultValue\", \"inputValue\", \"menuIsOpen\", \"onChange\", \"onInputChange\", \"onMenuClose\", \"onMenuOpen\", \"value\"];\nfunction useStateManager(_ref) {\n  var _ref$defaultInputValu = _ref.defaultInputValue,\n    defaultInputValue = _ref$defaultInputValu === void 0 ? '' : _ref$defaultInputValu,\n    _ref$defaultMenuIsOpe = _ref.defaultMenuIsOpen,\n    defaultMenuIsOpen = _ref$defaultMenuIsOpe === void 0 ? false : _ref$defaultMenuIsOpe,\n    _ref$defaultValue = _ref.defaultValue,\n    defaultValue = _ref$defaultValue === void 0 ? null : _ref$defaultValue,\n    propsInputValue = _ref.inputValue,\n    propsMenuIsOpen = _ref.menuIsOpen,\n    propsOnChange = _ref.onChange,\n    propsOnInputChange = _ref.onInputChange,\n    propsOnMenuClose = _ref.onMenuClose,\n    propsOnMenuOpen = _ref.onMenuOpen,\n    propsValue = _ref.value,\n    restSelectProps = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(propsInputValue !== undefined ? propsInputValue : defaultInputValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    stateInputValue = _useState2[0],\n    setStateInputValue = _useState2[1];\n  var _useState3 = useState(propsMenuIsOpen !== undefined ? propsMenuIsOpen : defaultMenuIsOpen),\n    _useState4 = _slicedToArray(_useState3, 2),\n    stateMenuIsOpen = _useState4[0],\n    setStateMenuIsOpen = _useState4[1];\n  var _useState5 = useState(propsValue !== undefined ? propsValue : defaultValue),\n    _useState6 = _slicedToArray(_useState5, 2),\n    stateValue = _useState6[0],\n    setStateValue = _useState6[1];\n  var onChange = useCallback(function (value, actionMeta) {\n    if (typeof propsOnChange === 'function') {\n      propsOnChange(value, actionMeta);\n    }\n    setStateValue(value);\n  }, [propsOnChange]);\n  var onInputChange = useCallback(function (value, actionMeta) {\n    var newValue;\n    if (typeof propsOnInputChange === 'function') {\n      newValue = propsOnInputChange(value, actionMeta);\n    }\n    setStateInputValue(newValue !== undefined ? newValue : value);\n  }, [propsOnInputChange]);\n  var onMenuOpen = useCallback(function () {\n    if (typeof propsOnMenuOpen === 'function') {\n      propsOnMenuOpen();\n    }\n    setStateMenuIsOpen(true);\n  }, [propsOnMenuOpen]);\n  var onMenuClose = useCallback(function () {\n    if (typeof propsOnMenuClose === 'function') {\n      propsOnMenuClose();\n    }\n    setStateMenuIsOpen(false);\n  }, [propsOnMenuClose]);\n  var inputValue = propsInputValue !== undefined ? propsInputValue : stateInputValue;\n  var menuIsOpen = propsMenuIsOpen !== undefined ? propsMenuIsOpen : stateMenuIsOpen;\n  var value = propsValue !== undefined ? propsValue : stateValue;\n  return _objectSpread(_objectSpread({}, restSelectProps), {}, {\n    inputValue: inputValue,\n    menuIsOpen: menuIsOpen,\n    onChange: onChange,\n    onInputChange: onInputChange,\n    onMenuClose: onMenuClose,\n    onMenuOpen: onMenuOpen,\n    value: value\n  });\n}\n\nexport { useStateManager as u };\n","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nfunction _createSuper(t) {\n  var r = isNativeReflectConstruct();\n  return function () {\n    var e,\n      o = getPrototypeOf(t);\n    if (r) {\n      var s = getPrototypeOf(this).constructor;\n      e = Reflect.construct(o, arguments, s);\n    } else e = o.apply(this, arguments);\n    return possibleConstructorReturn(this, e);\n  };\n}\nexport { _createSuper as default };","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nexport { _possibleConstructorReturn as default };","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","function _taggedTemplateLiteral(e, t) {\n  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(t)\n    }\n  }));\n}\nexport { _taggedTemplateLiteral as default };","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nexport { _inherits as default };","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","import { u as useStateManager } from './useStateManager-7e1e8489.esm.js';\nexport { u as useStateManager } from './useStateManager-7e1e8489.esm.js';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef, useMemo } from 'react';\nimport { S as Select } from './Select-49a62830.esm.js';\nexport { c as createFilter, d as defaultTheme, m as mergeStyles } from './Select-49a62830.esm.js';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nexport { c as components } from './index-a301f526.esm.js';\nimport '@babel/runtime/helpers/objectSpread2';\nimport '@babel/runtime/helpers/slicedToArray';\nimport '@babel/runtime/helpers/objectWithoutProperties';\nimport '@babel/runtime/helpers/classCallCheck';\nimport '@babel/runtime/helpers/createClass';\nimport '@babel/runtime/helpers/inherits';\nimport '@babel/runtime/helpers/createSuper';\nimport '@babel/runtime/helpers/toConsumableArray';\nimport 'memoize-one';\nimport '@babel/runtime/helpers/typeof';\nimport '@babel/runtime/helpers/taggedTemplateLiteral';\nimport '@babel/runtime/helpers/defineProperty';\nimport 'react-dom';\nimport '@floating-ui/dom';\nimport 'use-isomorphic-layout-effect';\n\nvar StateManagedSelect = /*#__PURE__*/forwardRef(function (props, ref) {\n  var baseSelectProps = useStateManager(props);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    ref: ref\n  }, baseSelectProps));\n});\nvar StateManagedSelect$1 = StateManagedSelect;\n\nvar NonceProvider = (function (_ref) {\n  var nonce = _ref.nonce,\n    children = _ref.children,\n    cacheKey = _ref.cacheKey;\n  var emotionCache = useMemo(function () {\n    return createCache({\n      key: cacheKey,\n      nonce: nonce\n    });\n  }, [cacheKey, nonce]);\n  return /*#__PURE__*/React.createElement(CacheProvider, {\n    value: emotionCache\n  }, children);\n});\n\nexport { NonceProvider, StateManagedSelect$1 as default };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","a","n","Array","_unsupportedIterableToArray","toString","slice","name","from","test","_slicedToArray","isArray","l","u","f","next","done","_objectWithoutProperties","objectWithoutPropertiesLoose","s","includes","propertyIsEnumerable","_excluded","_defineProperties","key","_getPrototypeOf","setPrototypeOf","getPrototypeOf","bind","__proto__","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_createSuper","this","assertThisInitialized","_toConsumableArray","useLayoutEffect","freeze","raw","safeIsNaN","isNaN","areInputsEqual","newInputs","lastInputs","first","second","resultFn","isEqual","cache","memoized","newArgs","_i","lastThis","lastArgs","lastResult","clear","create","StateManagedSelect","forwardRef","props","ref","baseSelectProps","_ref","_ref$defaultInputValu","defaultInputValue","_ref$defaultMenuIsOpe","defaultMenuIsOpen","_ref$defaultValue","defaultValue","propsInputValue","inputValue","propsMenuIsOpen","menuIsOpen","propsOnChange","onChange","propsOnInputChange","onInputChange","propsOnMenuClose","onMenuClose","propsOnMenuOpen","onMenuOpen","propsValue","restSelectProps","_useState2","useState","undefined","stateInputValue","setStateInputValue","_useState4","stateMenuIsOpen","setStateMenuIsOpen","_useState6","stateValue","setStateValue","useCallback","actionMeta","newValue","_objectSpread","useStateManager","React","Select","_extends","StateManagedSelect$1","computeCoordsFromPlacement","placement","rtl","reference","floating","sideAxis","getSideAxis","alignmentAxis","getAlignmentAxis","alignLength","getAxisLength","side","getSide","isVertical","commonX","x","width","commonY","y","height","commonAlign","coords","getAlignment","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","padding","evaluate","paddingObject","getPaddingObject","element","clippingClientRect","rectToClientRect","getClippingRect","isElement","contextElement","getDocumentElement","rect","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","top","bottom","left","right","getSideOffsets","overflow","isAnySideFullyClipped","sides","some","getBoundingRect","minX","min","map","minY","max","getCssDimensions","css","getComputedStyle","parseFloat","hasOffset","isHTMLElement","offsetWidth","offsetHeight","shouldFallback","round","$","unwrapElement","domElement","createCoords","getBoundingClientRect","isFinite","noOffsets","getVisualOffsets","win","getWindow","isWebKit","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","getFrameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getNodeScroll","scrollLeft","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","body","ownerDocument","scrollWidth","scrollHeight","scrollTop","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","getParentNode","isLastTraversableNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","documentElement","offsets","getNodeName","isOverflowElement","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","isTopLayer","svgOffsetParent","isTableElement","isContainingBlock","getContainingBlock","topLayer","clippingAncestors","cachedResult","get","result","getOverflowAncestors","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","_c","concat","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","floor","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","detectOverflow$1","offset","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","alignment","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","allowedPlacements","placements","autoAlignment","detectOverflowOptions","placements$1","getOppositeAlignmentPlacement","getPlacementList","currentIndex","index","currentPlacement","alignmentSides","getAlignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","d","acc","v","sort","b","resetPlacement","every","shift","checkMainAxis","checkCrossAxis","limiter","getOppositeAxis","mainAxisCoord","crossAxisCoord","maxSide","clamp","limitedCoords","flip","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","getOppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","getOppositeAxisPlacements","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$filter2","currentSideAxis","size","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","hide","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","axis","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","inline","nativeClientRects","clientRects","sortedRects","groups","prevRect","getRectsByLine","fallback","resetRects","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","statefulPlacement","resetCount","nextX","nextY","computePosition$1","node","isNode","nodeName","toLowerCase","_node$ownerDocument","defaultView","window","document","Node","Element","HTMLElement","isShadowRoot","ShadowRoot","overflowX","overflowY","display","selector","matches","elementOrCss","webkit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","scrollX","scrollY","assignedSlot","host","getNearestOverflowAncestor","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","frameElement","parent","alignments","Math","oppositeSideMap","oppositeAlignmentMap","start","end","param","split","mainAlignmentSide","oppositePlacement","replace","isStart","lr","rl","tb","bt","getSideList","expandPaddingObject","assertIsFunction","func","ensureIsArray","item","getDependencies","createSelectorArgs","dependencies","array","errorMessage","itemTypes","join","assertIsArrayOfFunctions","Ref","WeakRef","deref","UNTERMINATED","TERMINATED","createCacheNode","p","weakMapMemoize","fnNode","resultEqualityCheck","resultsCount","cacheNode","arg","objectCache","WeakMap","objectNode","primitiveCache","primitiveNode","terminatedNode","lastResultValue","clearCache","resetResultsCount","createSelectorCreator","memoizeOrOptions","_len","memoizeOptionsFromArgs","_key2","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","_len2","_key3","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","pop","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","structuredSelector","_len3","_key4","composition"],"sourceRoot":""}