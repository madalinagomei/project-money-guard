{"version":3,"file":"static/js/58.56babe33.chunk.js","mappings":"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","sources":["../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","arguments","length","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","next","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getPixelForValue","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineCap","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","previous","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","borderCapStyle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Doughnut"],"sourceRoot":""}