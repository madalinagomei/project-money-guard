{"version":3,"file":"static/js/809.bf7e9f8a.chunk.js","mappings":"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","sources":["components/StatisticsDashboard/StatisticsDashboard.styled.js","components/Chart/Chart.styled.js","components/Chart/Chart.jsx","components/StatisticsDashboard/StatisticsDashboard.jsx","components/StatisticsTable/StatisticsTable.styled.js","components/StatisticsTable/StatisticsTable.jsx","pages/StatisticsTab/StatisticsTab.styled.js","pages/StatisticsTab/StatisticsTab.jsx","redux/transactions/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSelectMainDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 16px 0;\n  min-width: 280px;\n  max-width: 280px;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 16px;\n    padding: 20px 0 0 0;\n    min-width: 192px;\n    max-width: 192px;\n    margin: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    margin-top: 60px;\n    min-width: 213px;\n    max-width: 213px;\n    gap: 32px;\n  }\n`;\nexport const styles = {\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    minWidth: 280,\n    maxWidth: 280,\n    minHeight: 50,\n    borderRadius: '8px',\n    background: ' rgba(133, 93, 175, 0.13) ',\n    cursor: 'pointer',\n    '@media only screen and (min-width:768px)': {\n      ...styles['@media only screen and (min-width: 768px)'],\n      minWidth: 160,\n      maxWidth: 160,\n    },\n    '@media only screen and (min-width:1280px)': {\n      ...styles['@media only screen and (min-width: 1280px)'],\n      minWidth: 181,\n      maxWidth: 181,\n    },\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: state.isSelected ? 'rgba(255, 255, 255, 0.10)' : '',\n    color: state.isSelected ? '#FF868D' : '',\n    ':hover': {\n      background: 'rgba(255, 255, 255, 0.10)',\n      color: '#FF868D',\n      cursor: 'pointer',\n    },\n  }),\n  menu: baseStyles => ({\n    ...baseStyles,\n    background:\n      'linear-gradient(0deg, rgba(87, 38, 146, 0.813) 0%, rgba(80, 48, 154, 0.9) 43.14%, rgba(99, 63, 159, 0.9) 73.27%, rgba(76, 46, 109, 0.8) 120.03%) ',\n    border: 'none ',\n    borderRadius: '8px ',\n  }),\n  menuList: base => ({\n    ...base,\n\n    '::-webkit-scrollbar': {\n      width: '4px',\n      height: '0px',\n    },\n    '::-webkit-scrollbar-track': {\n      background: '#9065d1',\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: '#6b438c',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: '#330a65',\n    },\n  }),\n};\n","import styled from 'styled-components';\nexport const StyledChartP = styled.p`\n  position: absolute;\n  left: 50%;\n  top: 53%;\n  transform: translate(-50%, -50%);\n  color: var(--white, #fbfbfb);\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n  letter-spacing: 2px;\n`;\nexport const StyledChartDiv = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin-top: 8px;\n  padding: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    height: 336px;\n    margin-top: 20px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport pngwing from '../../images/pngwing.webp';\nimport { StyledChartP, StyledChartDiv } from './Chart.styled';\nimport { selectPeriodTotal } from '../../redux/transactions/selectors';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nChartJS.register(ArcElement, Tooltip, Legend);\nconst Chart = ({ dataDoughnut, categories }) => {\n  const periodTotal = useSelector(selectPeriodTotal);\n  return (\n    <StyledChartDiv>\n      {categories.length > 1 ? (\n        <div>\n          <Doughnut data={dataDoughnut} />\n          <StyledChartP>₴ {periodTotal}</StyledChartP>\n        </div>\n      ) : (\n        <img src={pngwing} alt=\"fff\" />\n      )}\n    </StyledChartDiv>\n  );\n};\n\nexport default Chart;\n\nChart.propTypes = {\n  dataDoughnut: PropTypes.objectOf(PropTypes.array),\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      type: PropTypes.string,\n      total: PropTypes.number,\n    })\n  ),\n};\n","import React, { useState, useEffect } from 'react';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactionsSummary } from '../../redux/transactions/operations';\nimport { StyledSelectMainDiv } from './StatisticsDashboard.styled';\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst StatisticsDashboard = () => {\n  const dispatch = useDispatch();\n\n  //  luna și anul curent\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n\n  const [isMonthDropdownOpen, setIsMonthDropdownOpen] = useState(false);\n  const [isYearDropdownOpen, setIsYearDropdownOpen] = useState(false);\n\n  useEffect(() => {\n    dispatch(\n      fetchTransactionsSummary({ month: selectedMonth, year: selectedYear })\n    );\n  }, [dispatch, selectedMonth, selectedYear]);\n\n  const handleMonthChange = month => {\n    setSelectedMonth(months.indexOf(month) + 1);\n    setIsMonthDropdownOpen(false);\n  };\n\n  const handleYearChange = year => {\n    setSelectedYear(parseInt(year));\n    setIsYearDropdownOpen(false);\n  };\n\n  const toggleMonthDropdown = () => {\n    setIsMonthDropdownOpen(!isMonthDropdownOpen);\n    setIsYearDropdownOpen(false);\n  };\n\n  const toggleYearDropdown = () => {\n    setIsYearDropdownOpen(!isYearDropdownOpen);\n    setIsMonthDropdownOpen(false);\n  };\n\n  const yearOptions = Array.from(\n    { length: 10 },\n    (_, index) => new Date().getFullYear() - index\n  );\n\n  return (\n    <StyledSelectMainDiv>\n      <div>\n        {/* Selectare lună */}\n        <div onClick={toggleMonthDropdown}>\n          {months[selectedMonth - 1]}\n          <IoIosArrowDown />\n        </div>\n        {isMonthDropdownOpen && (\n          <div>\n            {months.map((month, index) => (\n              <div key={index} onClick={() => handleMonthChange(month)}>\n                {month}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <div>\n        {/* Selectare an */}\n        <div onClick={toggleYearDropdown}>\n          {selectedYear}\n          <IoIosArrowDown />\n        </div>\n        {isYearDropdownOpen && (\n          <div>\n            {yearOptions.map((year, index) => (\n              <div key={index} onClick={() => handleYearChange(year)}>\n                {year}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </StyledSelectMainDiv>\n  );\n};\n\nexport default StatisticsDashboard;\n","import styled from 'styled-components';\nexport const StyledTableDiv = styled.div`\n  width: 280px;\n  margin: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    padding: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const StyledTableTd = styled.td`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  font-size: 14px;\n  align-items: center;\n`;\nexport const StyledTableTr = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.41);\n  padding: 16px;\n`;\nexport const StyledTableTrHead = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.41);\n  padding: 16px;\n  margin-top: 20px;\n\n  font-family: Poppins;\n  font-size: 16px;\n  font-weight: 600;\n  width: 280px;\n  max-height: 56px;\n  border-radius: 8px;\n  background: rgba(82, 59, 126, 0.6);\n\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const StyledTableTh = styled.th`\n  display: inline-block;\n`;\nexport const StyledTableH3 = styled.h3`\n  margin: 30px auto;\n  font-size: 20px;\n  text-align: center;\n  font-weight: 400;\n  max-width: 320px;\n  line-height: 1.5;\n\n  padding: 15px 0;\n  border-top: 1px solid white;\n  border-bottom: 2px solid white;\n  @media only screen and (min-width: 768px) {\n    margin: 200px 50px 50px 50px;\n  }\n`;\nexport const StyledTableBody = styled.tbody`\n  display: flex;\n  flex-direction: column;\n\n  max-width: 280px;\n  overflow-y: scroll;\n  @media only screen and (min-width: 768px) {\n    max-width: 336px;\n    height: 450px;\n  }\n  @media only screen and (min-width: 1280px) {\n    max-width: 395px;\n    height: calc(100vh - 400px);\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(82, 59, 126, 0.3);\n  }\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n  &::-webkit-scrollbar {\n    width: 0.5em;\n  }\n`;\n","import React from 'react';\nimport {\n  StyledTableTr,\n  StyledTableTd,\n  StyledTableTh,\n  StyledTableTrHead,\n  StyledTableBody,\n  StyledTableH3,\n  StyledTableDiv,\n} from './StatisticsTable.styled';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectExpenseSummary,\n  selectIncomeSummary,\n} from '../../redux/transactions/selectors';\nimport PropTypes from 'prop-types';\n\nconst StatisticsTable = ({ categories, dataDoughnut }) => {\n  const income = useSelector(selectIncomeSummary);\n  const expense = useSelector(selectExpenseSummary);\n  return (\n    <StyledTableDiv>\n      {categories.length > 1 ? (\n        <table>\n          <thead>\n            <StyledTableTrHead>\n              <StyledTableTh>Category</StyledTableTh>\n              <StyledTableTh>Sum</StyledTableTh>\n            </StyledTableTrHead>\n          </thead>\n\n          <StyledTableBody>\n            {categories.map(({ name, total, type }, index) => {\n              if (type !== 'INCOME') {\n                return (\n                  <StyledTableTr key={name}>\n                    <StyledTableTd>\n                      <div\n                        style={{\n                          backgroundColor: `${dataDoughnut.datasets[0].backgroundColor[index]}`,\n                          width: '24px',\n                          height: '24px',\n                        }}\n                      ></div>\n                      {name}\n                    </StyledTableTd>\n                    <td\n                      style={{\n                        fontSize: '14px',\n                      }}\n                    >\n                      {total < 0 ? -total : total}\n                    </td>\n                  </StyledTableTr>\n                );\n              }\n              return '';\n            })}\n          </StyledTableBody>\n          <tfoot>\n            <StyledTableTr\n              style={{\n                border: 'none',\n              }}\n            >\n              <td>Expenses:</td>\n              <td\n                style={{\n                  color: '#FF868D',\n                }}\n              >\n                {-expense}\n              </td>\n            </StyledTableTr>\n            <StyledTableTr\n              style={{\n                border: 'none',\n              }}\n            >\n              <td>Income:</td>\n              <td\n                style={{\n                  color: '#FF868D',\n                }}\n              >\n                {income}\n              </td>\n            </StyledTableTr>\n          </tfoot>\n        </table>\n      ) : (\n        <StyledTableH3>\n          It looks like you have not made any monetary transactions during this\n          time period\n        </StyledTableH3>\n      )}\n    </StyledTableDiv>\n  );\n};\n\nexport default StatisticsTable;\n\nStatisticsTable.propTypes = {\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      type: PropTypes.string,\n      total: PropTypes.number,\n    })\n  ),\n  dataDoughnut: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { StyledContainer } from 'styles/GlobalStyles';\n\nexport const StyledStatisticDivMain = styled(StyledContainer)`\n  color: white;\n  display: block;\n  position: relative;\n\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    margin: 0;\n    justify-content: space-between;\n\n    max-width: 100%;\n    height: 720px;\n  }\n  @media only screen and (min-width: 1280px) {\n    max-width: 803px;\n    height: calc(100vh - 70px);\n\n    padding: 20px 20px 0 0;\n  }\n`;\nexport const StyledStatisticDivChart = styled.div`\n  position: relative;\n  width: 280px;\n  padding: 16px 0;\n  margin: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    padding: 0;\n    margin: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\nexport const StyledStatisticTitle = styled.h2`\n  color: ${({ theme }) => theme.colors.mainWhite};\n  text-align: left;\n  font-size: 30px;\n  font-weight: 400;\n  max-width: 280px;\n`;\n","import Chart from 'components/Chart/Chart';\nimport StatisticsDashboard from 'components/StatisticsDashboard/StatisticsDashboard';\nimport StatisticsTable from 'components/StatisticsTable/StatisticsTable';\n\nimport { selectCategoriesSummary } from '../../redux/transactions/selectors';\n\nimport { useSelector } from 'react-redux';\nimport React from 'react';\n\nimport {\n  StyledStatisticDivChart,\n  StyledStatisticDivMain,\n  StyledStatisticTitle,\n} from './StatisticsTab.styled';\n\nconst StatisticsTab = () => {\n  const categories = useSelector(selectCategoriesSummary);\n  const categoriesValue = categories.map(({ total, type }) => {\n    if (type !== 'INCOME') {\n      if (total < 0) {\n        return -total;\n      }\n      return total;\n    }\n    return '';\n  });\n  const dataDoughnut = {\n    labels: [],\n    datasets: [\n      {\n        data: [...categoriesValue],\n        backgroundColor: [\n          '#00ff3c',\n          '#FED057',\n          '#006825',\n\n          '#FFD8D0',\n          '#4A56E2',\n          '#ffff00',\n          '#6E78E8',\n          '#81E1FF',\n          '#C5BAFF',\n\n          '#e0661b',\n\n          '#FD9498',\n        ],\n        borderColor: [\n          '#018f6e93',\n          '#c5a04478',\n          '#198d7389',\n\n          '#b79993a2',\n          '#333c9c8d',\n          '#18876f94',\n          '#4d54a39c',\n          '#5695a98f',\n          '#877fb09d',\n\n          '#40a8929e',\n\n          '#b7696ca4',\n        ],\n        borderWidth: 1,\n        cutout: '70%',\n      },\n    ],\n  };\n\n  return (\n    <StyledStatisticDivMain>\n      <StyledStatisticDivChart\n        style={{\n          zIndex: '2',\n        }}\n      >\n        <StyledStatisticTitle>Statistics</StyledStatisticTitle>\n        <Chart dataDoughnut={dataDoughnut} categories={categories} />\n      </StyledStatisticDivChart>\n      <div\n        style={{\n          zIndex: '2',\n        }}\n      >\n        <StatisticsDashboard />\n        <StatisticsTable categories={categories} dataDoughnut={dataDoughnut} />\n      </div>\n    </StyledStatisticDivMain>\n  );\n};\n\nexport default StatisticsTab;\n","import { createSelector } from 'reselect';\n// transactions\n\nexport const selectTransactions = state =>\n  state.transactions.transactions.items;\nexport const selectLoading = state => state.transactions.transactions.isLoading;\nexport const selectError = state => state.transactions.transactions.error;\nexport const selectCategories = state =>\n  state.transactions.transactions.categories;\n\nexport const selectAllCategories = createSelector(\n  [selectCategories],\n  categories => {\n    return categories;\n  }\n);\n\n// sort transactions\nexport const selectFIltered = (state, sortCriteria) => {\n  const transactions = selectTransactions(state);\n  const categories = selectCategories(state);\n\n  const sortedTransactions = [...transactions];\n  switch (sortCriteria.value) {\n    case 'date':\n      sortedTransactions.sort((a, b) => {\n        const dateA = new Date(a.transactionDate);\n        const dateB = new Date(b.transactionDate);\n        return sortCriteria.isReverse ? dateA - dateB : dateB - dateA;\n      });\n      break;\n    case 'amount':\n      sortedTransactions.sort((a, b) => {\n        return sortCriteria.isReverse\n          ? b.amount - a.amount\n          : a.amount - b.amount;\n      });\n      break;\n    case 'category':\n      sortedTransactions.sort((a, b) => {\n        const categoryA =\n          categories.find(cat => cat.id === a.categoryId)?.name || '';\n        const categoryB =\n          categories.find(cat => cat.id === b.categoryId)?.name || '';\n        return sortCriteria.isReverse\n          ? categoryB.localeCompare(categoryA)\n          : categoryA.localeCompare(categoryB);\n      });\n      break;\n    default:\n      return sortedTransactions.sort(\n        (a, b) => new Date(b.transactionDate) - new Date(a.transactionDate)\n      );\n  }\n  return sortedTransactions;\n};\n\n// summary\nexport const selectCategoriesSummary = state =>\n  state.transactions.summary.categoriesSummary;\nexport const selectIncomeSummary = state =>\n  state.transactions.summary.incomeSummary;\nexport const selectExpenseSummary = state =>\n  state.transactions.summary.expenseSummary;\nexport const selectPeriodTotal = state =>\n  state.transactions.summary.periodTotal;\nexport const selectYear = state => state.transactions.summary.year;\nexport const selectMonth = state => state.transactions.summary.month;\n"],"names":["StyledSelectMainDiv","styled","div","styles","control","baseStyles","state","minWidth","maxWidth","minHeight","borderRadius","background","cursor","option","backgroundColor","isSelected","color","menu","border","menuList","base","width","height","StyledChartP","p","StyledChartDiv","ChartJS","register","ArcElement","Tooltip","Legend","_ref","dataDoughnut","categories","periodTotal","useSelector","selectPeriodTotal","_jsx","children","length","_jsxs","Doughnut","data","src","pngwing","alt","months","StatisticsDashboard","dispatch","useDispatch","selectedMonth","setSelectedMonth","useState","Date","getMonth","selectedYear","setSelectedYear","getFullYear","isMonthDropdownOpen","setIsMonthDropdownOpen","isYearDropdownOpen","setIsYearDropdownOpen","useEffect","fetchTransactionsSummary","month","year","yearOptions","Array","from","_","index","onClick","toggleMonthDropdown","IoIosArrowDown","map","indexOf","handleMonthChange","toggleYearDropdown","parseInt","handleYearChange","StyledTableDiv","StyledTableTd","td","StyledTableTr","tr","StyledTableTrHead","StyledTableTh","th","StyledTableH3","h3","StyledTableBody","tbody","income","selectIncomeSummary","expense","selectExpenseSummary","_ref2","name","total","type","style","datasets","fontSize","StyledStatisticDivMain","StyledContainer","StyledStatisticDivChart","StyledStatisticTitle","h2","theme","colors","mainWhite","StatisticsTab","selectCategoriesSummary","labels","borderColor","borderWidth","cutout","zIndex","Chart","StatisticsTable","selectTransactions","transactions","items","selectLoading","isLoading","selectError","error","selectCategories","selectAllCategories","createSelector","selectFIltered","sortCriteria","sortedTransactions","value","sort","a","b","dateA","transactionDate","dateB","isReverse","amount","_categories$find","_categories$find2","categoryA","find","cat","id","categoryId","categoryB","localeCompare","summary","categoriesSummary","incomeSummary","expenseSummary"],"sourceRoot":""}