{"version":3,"file":"static/js/809.2c46aa25.chunk.js","mappings":"kJAEO,MAAMA,E,QAAsBC,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;;;;;EAwBhCC,EAAS,CACpBC,QAASA,CAACC,EAAYC,KAAK,IACtBD,EACHE,SAAU,IACVC,SAAU,IACVC,UAAW,GACXC,aAAc,MACdC,WAAY,6BACZ,2CAA4C,IACvCR,EAAO,6CACVI,SAAU,IACVC,SAAU,KAEZ,4CAA6C,IACxCL,EAAO,8CACVI,SAAU,IACVC,SAAU,OAGdI,OAAQA,CAACT,EAAQG,KAAK,IACjBH,EACHU,gBAAiBP,EAAMQ,WAAa,4BAA8B,GAClEC,MAAOT,EAAMQ,WAAa,UAAY,GACtC,SAAU,CACRH,WAAY,4BACZI,MAAO,aAGXC,KAAMX,IAAU,IACXA,EACHM,WACE,oJACFM,OAAQ,QACRP,aAAc,SAEhBQ,SAAUC,IAAI,IACTA,EAEH,sBAAuB,CACrBC,MAAO,MACPC,OAAQ,OAEV,4BAA6B,CAC3BV,WAAY,WAEd,4BAA6B,CAC3BA,WAAY,WAEd,kCAAmC,CACjCA,WAAY,a,2JC1EX,MAAMW,EAAerB,EAAAA,GAAOsB,CAAC;;;;;;;;;;EAWvBC,EAAiBvB,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;mCCHxCuB,EAAAA,GAAQC,SAASC,EAAAA,GAAYC,EAAAA,GAASC,EAAAA,IACtC,MAgBA,EAhBcC,IAAmC,IAAlC,aAAEC,EAAY,WAAEC,GAAYF,EACzC,MAAMG,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAChC,OACEC,EAAAA,EAAAA,KAACZ,EAAc,CAAAa,SACZL,EAAWM,OAAS,GACnBC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAACI,EAAAA,GAAQ,CAACC,KAAMV,KAChBQ,EAAAA,EAAAA,MAACjB,EAAY,CAAAe,SAAA,CAAC,UAAGJ,SAGnBG,EAAAA,EAAAA,KAAA,OAAKM,IAAKC,EAASC,IAAI,SAEV,E,kCCfrB,MAmFA,EAnF4BC,KAC1B,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CACjDC,MAAO,GACPC,MAAO,aAEFC,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,CAC/CC,MAAO,KACPC,MAAO,SAwCT,OAPAG,EAAAA,EAAAA,YAAU,KACR,MAAMd,EAAO,CACXe,MAAOR,EAAcG,MACrBM,KAAMJ,EAAaF,OAErBL,GAASY,EAAAA,EAAAA,IAAyBjB,GAAM,GACvC,CAACK,EAAUE,EAAeK,KAE3Bd,EAAAA,EAAAA,MAACvC,EAAAA,EAAmB,CAAAqC,SAAA,EAClBD,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CACLxD,OAAQA,EAAAA,EACRgD,MAAOH,EACPY,SAAUT,IAzCdF,EAyCqCE,EAAO,EACxCU,QA5Be,CACnB,CAAEV,MAAO,EAAGC,MAAO,WACnB,CAAED,MAAO,EAAGC,MAAO,YACnB,CAAED,MAAO,EAAGC,MAAO,SACnB,CAAED,MAAO,EAAGC,MAAO,SACnB,CAAED,MAAO,EAAGC,MAAO,OACnB,CAAED,MAAO,EAAGC,MAAO,QACnB,CAAED,MAAO,EAAGC,MAAO,QACnB,CAAED,MAAO,EAAGC,MAAO,UACnB,CAAED,MAAO,EAAGC,MAAO,aACnB,CAAED,MAAO,GAAIC,MAAO,WACpB,CAAED,MAAO,GAAIC,MAAO,YACpB,CAAED,MAAO,GAAIC,MAAO,aAiBhBU,YAAad,EAAcI,MAC3BW,MAAOA,IAAK,IACPA,EACHC,OAAQ,CACNC,UAAW,aAKjB7B,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CACLxD,OAAQA,EAAAA,EACRgD,MAAOE,EACPO,SAAUT,IArDhBG,EAqDqCH,EAAO,EACtCU,QAnDa,CACnB,CAAEV,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,KAAMC,MAAO,SA8ChBU,YAAaT,EAAaD,MAC1BW,MAAOA,IAAK,IACPA,EACHC,OAAQ,CACNC,UAAW,gBAKC,ECrFbC,EAAiBjE,EAAAA,GAAOC,GAAG;;;;;;;;;;EAW3BiE,EAAgBlE,EAAAA,GAAOmE,EAAE;;;;;;EAOzBC,EAAgBpE,EAAAA,GAAOqE,EAAE;;;;;;EAOzBC,EAAoBtE,EAAAA,GAAOqE,EAAE;;;;;;;;;;;;;;;;;;;;;;;;EAyB7BE,EAAgBvE,EAAAA,GAAOwE,EAAE;;EAGzBC,EAAgBzE,EAAAA,GAAO0E,EAAE;;;;;;;;;;;;;;EAezBC,EAAkB3E,EAAAA,GAAO4E,KAAK;;;;;;;;;;;;;;;;;;;;;;;ECgC3C,EAnFwB/C,IAAmC,IAAlC,WAAEE,EAAU,aAAED,GAAcD,EACnD,MAAMgD,GAAS5C,EAAAA,EAAAA,IAAY6C,EAAAA,IACrBC,GAAU9C,EAAAA,EAAAA,IAAY+C,EAAAA,IAC5B,OACE7C,EAAAA,EAAAA,KAAC8B,EAAc,CAAA7B,SACZL,EAAWM,OAAS,GACnBC,EAAAA,EAAAA,MAAA,SAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SAAAC,UACEE,EAAAA,EAAAA,MAACgC,EAAiB,CAAAlC,SAAA,EAChBD,EAAAA,EAAAA,KAACoC,EAAa,CAAAnC,SAAC,cACfD,EAAAA,EAAAA,KAACoC,EAAa,CAAAnC,SAAC,cAInBD,EAAAA,EAAAA,KAACwC,EAAe,CAAAvC,SACbL,EAAWkD,KAAI,CAAAC,EAAwBC,KAAW,IAAlC,KAAEC,EAAI,MAAEC,EAAK,KAAEC,GAAMJ,EACpC,MAAa,WAATI,GAEAhD,EAAAA,EAAAA,MAAC8B,EAAa,CAAAhC,SAAA,EACZE,EAAAA,EAAAA,MAAC4B,EAAa,CAAA9B,SAAA,EACZD,EAAAA,EAAAA,KAAA,OACEoD,MAAO,CACL3E,gBAAiB,GAAGkB,EAAa0D,SAAS,GAAG5E,gBAAgBuE,KAC7DhE,MAAO,OACPC,OAAQ,UAGXgE,MAEHjD,EAAAA,EAAAA,KAAA,MACEoD,MAAO,CACLE,SAAU,QACVrD,SAEDiD,EAAQ,GAAKA,EAAQA,MAhBND,GAqBjB,EAAE,OAGb9C,EAAAA,EAAAA,MAAA,SAAAF,SAAA,EACEE,EAAAA,EAAAA,MAAC8B,EAAa,CACZmB,MAAO,CACLvE,OAAQ,QACRoB,SAAA,EAEFD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eACJD,EAAAA,EAAAA,KAAA,MACEoD,MAAO,CACLzE,MAAO,WACPsB,UAEA2C,QAGNzC,EAAAA,EAAAA,MAAC8B,EAAa,CACZmB,MAAO,CACLvE,OAAQ,QACRoB,SAAA,EAEFD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAAA,MACEoD,MAAO,CACLzE,MAAO,WACPsB,SAEDyC,cAMT1C,EAAAA,EAAAA,KAACsC,EAAa,CAAArC,SAAC,uFAKF,E,cC9Fd,MAAMsD,GAAyB1F,EAAAA,EAAAA,IAAO2F,EAAAA,EAAgB;;;;;;;;;;;;;;;;;;;EAoBhDC,EAA0B5F,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;EAcpC4F,EAAuB7F,EAAAA,GAAO8F,EAAE;WAClCjE,IAAA,IAAC,MAAEiC,GAAOjC,EAAA,OAAKiC,EAAMC,OAAOgC,SAAS;;;;;ECqDhD,EA5EsBC,KACpB,MAAMjE,GAAaE,EAAAA,EAAAA,IAAYgE,EAAAA,IAUzBnE,EAAe,CACnBoE,OAAQ,GACRV,SAAU,CACR,CACEhD,KAAM,IAbYT,EAAWkD,KAAIpD,IAAsB,IAArB,MAAEwD,EAAK,KAAEC,GAAMzD,EACrD,MAAa,WAATyD,EACED,EAAQ,GACFA,EAEHA,EAEF,EAAE,KAOLzE,gBAAiB,CACf,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UAEA,UAEA,WAEFuF,YAAa,CACX,YACA,YACA,YAEA,YACA,YACA,YACA,YACA,YACA,YAEA,YAEA,aAEFC,YAAa,EACbC,OAAQ,SAKd,OACE/D,EAAAA,EAAAA,MAACoD,EAAsB,CAAAtD,SAAA,EACrBE,EAAAA,EAAAA,MAACsD,EAAuB,CACtBL,MAAO,CACLe,OAAQ,KACRlE,SAAA,EAEFD,EAAAA,EAAAA,KAAC0D,EAAoB,CAAAzD,SAAC,gBACtBD,EAAAA,EAAAA,KAACoE,EAAK,CAACzE,aAAcA,EAAcC,WAAYA,QAEjDO,EAAAA,EAAAA,MAAA,OACEiD,MAAO,CACLe,OAAQ,KACRlE,SAAA,EAEFD,EAAAA,EAAAA,KAACS,EAAmB,KACpBT,EAAAA,EAAAA,KAACqE,EAAe,CAACzE,WAAYA,EAAYD,aAAcA,SAElC,C,yHCpFtB,MAAM2E,EAAqBpG,GAChCA,EAAMqG,aAAaA,aAAaC,MACrBC,EAAgBvG,GAASA,EAAMqG,aAAaA,aAAaG,UACzDC,EAAczG,GAASA,EAAMqG,aAAaA,aAAaK,MACvDC,EAAmB3G,GAC9BA,EAAMqG,aAAaA,aAAa3E,WAErBkF,GAAsBC,EAAAA,EAAAA,IACjC,CAACF,IACDjF,GACSA,IAKEoF,EAAiBA,CAAC9G,EAAO+G,KACpC,MAAMV,EAAeD,EAAmBpG,GAClC0B,EAAaiF,EAAiB3G,GAE9BgH,EAAqB,IAAIX,GAC/B,OAAQU,EAAalE,OACnB,IAAK,OACHmE,EAAmBC,MAAK,CAACC,EAAGC,KAC1B,MAAMC,EAAQ,IAAIC,KAAKH,EAAEI,iBACnBC,EAAQ,IAAIF,KAAKF,EAAEG,iBACzB,OAAOP,EAAaS,UAAYJ,EAAQG,EAAQA,EAAQH,CAAK,IAE/D,MACF,IAAK,SACHJ,EAAmBC,MAAK,CAACC,EAAGC,IACnBJ,EAAaS,UAChBL,EAAEM,OAASP,EAAEO,OACbP,EAAEO,OAASN,EAAEM,SAEnB,MACF,IAAK,WACHT,EAAmBC,MAAK,CAACC,EAAGC,KAAO,IAADO,EAAAC,EAChC,MAAMC,GAC2C,QAA/CF,EAAAhG,EAAWmG,MAAKC,GAAOA,EAAIC,KAAOb,EAAEc,oBAAW,IAAAN,OAAA,EAA/CA,EAAiD3C,OAAQ,GACrDkD,GAC2C,QAA/CN,EAAAjG,EAAWmG,MAAKC,GAAOA,EAAIC,KAAOZ,EAAEa,oBAAW,IAAAL,OAAA,EAA/CA,EAAiD5C,OAAQ,GAC3D,OAAOgC,EAAaS,UAChBS,EAAUC,cAAcN,GACxBA,EAAUM,cAAcD,EAAU,IAExC,MACF,QACE,OAAOjB,EAAmBC,MACxB,CAACC,EAAGC,IAAM,IAAIE,KAAKF,EAAEG,iBAAmB,IAAID,KAAKH,EAAEI,mBAGzD,OAAON,CAAkB,EAIdpB,EAA0B5F,GACrCA,EAAMqG,aAAa8B,QAAQC,kBAChB3D,EAAsBzE,GACjCA,EAAMqG,aAAa8B,QAAQE,cAChB1D,EAAuB3E,GAClCA,EAAMqG,aAAa8B,QAAQG,eAChBzG,EAAoB7B,GAC/BA,EAAMqG,aAAa8B,QAAQxG,W","sources":["components/StatisticsDashboard/StatisticsDashboard.styled.js","components/Chart/Chart.styled.js","components/Chart/Chart.jsx","components/StatisticsDashboard/StatisticsDashboard.jsx","components/StatisticsTable/StatisticsTable.styled.js","components/StatisticsTable/StatisticsTable.jsx","pages/StatisticsTab/StatisticsTab.styled.js","pages/StatisticsTab/StatisticsTab.jsx","redux/transactions/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSelectMainDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 16px 0;\n  min-width: 280px;\n  max-width: 280px;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 16px;\n    padding: 20px 0 0 0;\n    min-width: 192px;\n    max-width: 192px;\n    margin: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    margin-top: 60px;\n    min-width: 213px;\n    max-width: 213px;\n    gap: 32px;\n  }\n`;\nexport const styles = {\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    minWidth: 280,\n    maxWidth: 280,\n    minHeight: 50,\n    borderRadius: '8px',\n    background: ' rgba(133, 93, 175, 0.13) ',\n    '@media only screen and (min-width:768px)': {\n      ...styles['@media only screen and (min-width: 768px)'],\n      minWidth: 160,\n      maxWidth: 160,\n    },\n    '@media only screen and (min-width:1280px)': {\n      ...styles['@media only screen and (min-width: 1280px)'],\n      minWidth: 181,\n      maxWidth: 181,\n    },\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: state.isSelected ? 'rgba(255, 255, 255, 0.10)' : '',\n    color: state.isSelected ? '#FF868D' : '',\n    ':hover': {\n      background: 'rgba(255, 255, 255, 0.10)',\n      color: '#FF868D',\n    },\n  }),\n  menu: baseStyles => ({\n    ...baseStyles,\n    background:\n      'linear-gradient(0deg, rgba(87, 38, 146, 0.813) 0%, rgba(80, 48, 154, 0.9) 43.14%, rgba(99, 63, 159, 0.9) 73.27%, rgba(76, 46, 109, 0.8) 120.03%) ',\n    border: 'none ',\n    borderRadius: '8px ',\n  }),\n  menuList: base => ({\n    ...base,\n\n    '::-webkit-scrollbar': {\n      width: '4px',\n      height: '0px',\n    },\n    '::-webkit-scrollbar-track': {\n      background: '#9065d1',\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: '#6b438c',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: '#330a65',\n    },\n  }),\n};\n","import styled from 'styled-components';\nexport const StyledChartP = styled.p`\n  position: absolute;\n  left: 50%;\n  top: 53%;\n  transform: translate(-50%, -50%);\n  color: var(--white, #fbfbfb);\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n  letter-spacing: 2px;\n`;\nexport const StyledChartDiv = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin-top: 8px;\n  padding: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    height: 336px;\n    margin-top: 20px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport pngwing from '../../images/pngwing.webp';\nimport { StyledChartP, StyledChartDiv } from './Chart.styled';\nimport { selectPeriodTotal } from '../../redux/transactions/selectors';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nChartJS.register(ArcElement, Tooltip, Legend);\nconst Chart = ({ dataDoughnut, categories }) => {\n  const periodTotal = useSelector(selectPeriodTotal);\n  return (\n    <StyledChartDiv>\n      {categories.length > 1 ? (\n        <div>\n          <Doughnut data={dataDoughnut} />\n          <StyledChartP>â‚´ {periodTotal}</StyledChartP>\n        </div>\n      ) : (\n        <img src={pngwing} alt=\"fff\" />\n      )}\n    </StyledChartDiv>\n  );\n};\n\nexport default Chart;\n\nChart.propTypes = {\n  dataDoughnut: PropTypes.objectOf(PropTypes.array),\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      type: PropTypes.string,\n      total: PropTypes.number,\n    })\n  ),\n};\n","import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { StyledSelectMainDiv, styles } from './StatisticsDashboard.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactionsSummary } from '../../redux/transactions/operations';\n\nconst StatisticsDashboard = () => {\n  const dispatch = useDispatch();\n  const [selectedMonth, setSelectedMonth] = useState({\n    value: 10,\n    label: 'October',\n  });\n  const [selectedYear, setSelectedYear] = useState({\n    value: 2023,\n    label: '2023',\n  });\n\n  const onMonthChange = month => {\n    setSelectedMonth(month);\n  };\n  const onYearClick = year => {\n    setSelectedYear(year);\n  };\n\n  const optionsYears = [\n    { value: 2023, label: '2023' },\n    { value: 2022, label: '2022' },\n    { value: 2021, label: '2021' },\n    { value: 2019, label: '2019' },\n    { value: 2018, label: '2018' },\n    { value: 2017, label: '2017' },\n  ];\n  const optionsMonth = [\n    { value: 1, label: 'January' },\n    { value: 2, label: 'February' },\n    { value: 3, label: 'March' },\n    { value: 4, label: 'April' },\n    { value: 5, label: 'May' },\n    { value: 6, label: 'June' },\n    { value: 7, label: 'July' },\n    { value: 8, label: 'August' },\n    { value: 9, label: 'September' },\n    { value: 10, label: 'October' },\n    { value: 11, label: 'November' },\n    { value: 12, label: 'December' },\n  ];\n\n  useEffect(() => {\n    const data = {\n      month: selectedMonth.value,\n      year: selectedYear.value,\n    };\n    dispatch(fetchTransactionsSummary(data));\n  }, [dispatch, selectedMonth, selectedYear]);\n  return (\n    <StyledSelectMainDiv>\n      <Select\n        styles={styles}\n        value={selectedMonth}\n        onChange={value => onMonthChange(value)}\n        options={optionsMonth}\n        placeholder={selectedMonth.label}\n        theme={theme => ({\n          ...theme,\n          colors: {\n            neutral50: '#fff',\n          },\n        })}\n      />\n\n      <div>\n        <Select\n          styles={styles}\n          value={selectedYear}\n          onChange={value => onYearClick(value)}\n          options={optionsYears}\n          placeholder={selectedYear.label}\n          theme={theme => ({\n            ...theme,\n            colors: {\n              neutral50: '#fff',\n            },\n          })}\n        />\n      </div>\n    </StyledSelectMainDiv>\n  );\n};\n\nexport default StatisticsDashboard;\n","import styled from 'styled-components';\nexport const StyledTableDiv = styled.div`\n  width: 280px;\n  margin: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    padding: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const StyledTableTd = styled.td`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  font-size: 14px;\n  align-items: center;\n`;\nexport const StyledTableTr = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.41);\n  padding: 16px;\n`;\nexport const StyledTableTrHead = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.41);\n  padding: 16px;\n  margin-top: 20px;\n\n  font-family: Poppins;\n  font-size: 16px;\n  font-weight: 600;\n  width: 280px;\n  max-height: 56px;\n  border-radius: 8px;\n  background: rgba(82, 59, 126, 0.6);\n\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const StyledTableTh = styled.th`\n  display: inline-block;\n`;\nexport const StyledTableH3 = styled.h3`\n  margin: 30px auto;\n  font-size: 20px;\n  text-align: center;\n  font-weight: 400;\n  max-width: 320px;\n  line-height: 1.5;\n\n  padding: 15px 0;\n  border-top: 1px solid white;\n  border-bottom: 2px solid white;\n  @media only screen and (min-width: 768px) {\n    margin: 200px 50px 50px 50px;\n  }\n`;\nexport const StyledTableBody = styled.tbody`\n  display: flex;\n  flex-direction: column;\n\n  max-width: 280px;\n  overflow-y: scroll;\n  @media only screen and (min-width: 768px) {\n    max-width: 336px;\n    height: 450px;\n  }\n  @media only screen and (min-width: 1280px) {\n    max-width: 395px;\n    height: calc(100vh - 400px);\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(82, 59, 126, 0.3);\n  }\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n  &::-webkit-scrollbar {\n    width: 0.5em;\n  }\n`;\n","import React from 'react';\nimport {\n  StyledTableTr,\n  StyledTableTd,\n  StyledTableTh,\n  StyledTableTrHead,\n  StyledTableBody,\n  StyledTableH3,\n  StyledTableDiv,\n} from './StatisticsTable.styled';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectExpenseSummary,\n  selectIncomeSummary,\n} from '../../redux/transactions/selectors';\nimport PropTypes from 'prop-types';\n\nconst StatisticsTable = ({ categories, dataDoughnut }) => {\n  const income = useSelector(selectIncomeSummary);\n  const expense = useSelector(selectExpenseSummary);\n  return (\n    <StyledTableDiv>\n      {categories.length > 1 ? (\n        <table>\n          <thead>\n            <StyledTableTrHead>\n              <StyledTableTh>Category</StyledTableTh>\n              <StyledTableTh>Sum</StyledTableTh>\n            </StyledTableTrHead>\n          </thead>\n\n          <StyledTableBody>\n            {categories.map(({ name, total, type }, index) => {\n              if (type !== 'INCOME') {\n                return (\n                  <StyledTableTr key={name}>\n                    <StyledTableTd>\n                      <div\n                        style={{\n                          backgroundColor: `${dataDoughnut.datasets[0].backgroundColor[index]}`,\n                          width: '24px',\n                          height: '24px',\n                        }}\n                      ></div>\n                      {name}\n                    </StyledTableTd>\n                    <td\n                      style={{\n                        fontSize: '14px',\n                      }}\n                    >\n                      {total < 0 ? -total : total}\n                    </td>\n                  </StyledTableTr>\n                );\n              }\n              return '';\n            })}\n          </StyledTableBody>\n          <tfoot>\n            <StyledTableTr\n              style={{\n                border: 'none',\n              }}\n            >\n              <td>Expenses:</td>\n              <td\n                style={{\n                  color: '#FF868D',\n                }}\n              >\n                {-expense}\n              </td>\n            </StyledTableTr>\n            <StyledTableTr\n              style={{\n                border: 'none',\n              }}\n            >\n              <td>Income:</td>\n              <td\n                style={{\n                  color: '#FF868D',\n                }}\n              >\n                {income}\n              </td>\n            </StyledTableTr>\n          </tfoot>\n        </table>\n      ) : (\n        <StyledTableH3>\n          It looks like you have not made any monetary transactions during this\n          time period\n        </StyledTableH3>\n      )}\n    </StyledTableDiv>\n  );\n};\n\nexport default StatisticsTable;\n\nStatisticsTable.propTypes = {\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      type: PropTypes.string,\n      total: PropTypes.number,\n    })\n  ),\n  dataDoughnut: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { StyledContainer } from 'styles/GlobalStyles';\n\nexport const StyledStatisticDivMain = styled(StyledContainer)`\n  color: white;\n  display: block;\n  position: relative;\n\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    margin: 0;\n    justify-content: space-between;\n\n    max-width: 100%;\n    height: 720px;\n  }\n  @media only screen and (min-width: 1280px) {\n    max-width: 803px;\n    height: calc(100vh - 70px);\n\n    padding: 20px 20px 0 0;\n  }\n`;\nexport const StyledStatisticDivChart = styled.div`\n  position: relative;\n  width: 280px;\n  padding: 16px 0;\n  margin: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    padding: 0;\n    margin: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\nexport const StyledStatisticTitle = styled.h2`\n  color: ${({ theme }) => theme.colors.mainWhite};\n  text-align: left;\n  font-size: 30px;\n  font-weight: 400;\n  max-width: 280px;\n`;\n","import Chart from 'components/Chart/Chart';\nimport StatisticsDashboard from 'components/StatisticsDashboard/StatisticsDashboard';\nimport StatisticsTable from 'components/StatisticsTable/StatisticsTable';\n\nimport { selectCategoriesSummary } from '../../redux/transactions/selectors';\n\nimport { useSelector } from 'react-redux';\nimport React from 'react';\n\nimport {\n  StyledStatisticDivChart,\n  StyledStatisticDivMain,\n  StyledStatisticTitle,\n} from './StatisticsTab.styled';\n\nconst StatisticsTab = () => {\n  const categories = useSelector(selectCategoriesSummary);\n  const categoriesValue = categories.map(({ total, type }) => {\n    if (type !== 'INCOME') {\n      if (total < 0) {\n        return -total;\n      }\n      return total;\n    }\n    return '';\n  });\n  const dataDoughnut = {\n    labels: [],\n    datasets: [\n      {\n        data: [...categoriesValue],\n        backgroundColor: [\n          '#00ff3c',\n          '#FED057',\n          '#006825',\n\n          '#FFD8D0',\n          '#4A56E2',\n          '#ffff00',\n          '#6E78E8',\n          '#81E1FF',\n          '#C5BAFF',\n\n          '#e0661b',\n\n          '#FD9498',\n        ],\n        borderColor: [\n          '#018f6e93',\n          '#c5a04478',\n          '#198d7389',\n\n          '#b79993a2',\n          '#333c9c8d',\n          '#18876f94',\n          '#4d54a39c',\n          '#5695a98f',\n          '#877fb09d',\n\n          '#40a8929e',\n\n          '#b7696ca4',\n        ],\n        borderWidth: 1,\n        cutout: '70%',\n      },\n    ],\n  };\n\n  return (\n    <StyledStatisticDivMain>\n      <StyledStatisticDivChart\n        style={{\n          zIndex: '2',\n        }}\n      >\n        <StyledStatisticTitle>Statistics</StyledStatisticTitle>\n        <Chart dataDoughnut={dataDoughnut} categories={categories} />\n      </StyledStatisticDivChart>\n      <div\n        style={{\n          zIndex: '2',\n        }}\n      >\n        <StatisticsDashboard />\n        <StatisticsTable categories={categories} dataDoughnut={dataDoughnut} />\n      </div>\n    </StyledStatisticDivMain>\n  );\n};\n\nexport default StatisticsTab;\n","import { createSelector } from 'reselect';\n// transactions\n\nexport const selectTransactions = state =>\n  state.transactions.transactions.items;\nexport const selectLoading = state => state.transactions.transactions.isLoading;\nexport const selectError = state => state.transactions.transactions.error;\nexport const selectCategories = state =>\n  state.transactions.transactions.categories;\n\nexport const selectAllCategories = createSelector(\n  [selectCategories],\n  categories => {\n    return categories;\n  }\n);\n\n// sort transactions\nexport const selectFIltered = (state, sortCriteria) => {\n  const transactions = selectTransactions(state);\n  const categories = selectCategories(state);\n\n  const sortedTransactions = [...transactions];\n  switch (sortCriteria.value) {\n    case 'date':\n      sortedTransactions.sort((a, b) => {\n        const dateA = new Date(a.transactionDate);\n        const dateB = new Date(b.transactionDate);\n        return sortCriteria.isReverse ? dateA - dateB : dateB - dateA;\n      });\n      break;\n    case 'amount':\n      sortedTransactions.sort((a, b) => {\n        return sortCriteria.isReverse\n          ? b.amount - a.amount\n          : a.amount - b.amount;\n      });\n      break;\n    case 'category':\n      sortedTransactions.sort((a, b) => {\n        const categoryA =\n          categories.find(cat => cat.id === a.categoryId)?.name || '';\n        const categoryB =\n          categories.find(cat => cat.id === b.categoryId)?.name || '';\n        return sortCriteria.isReverse\n          ? categoryB.localeCompare(categoryA)\n          : categoryA.localeCompare(categoryB);\n      });\n      break;\n    default:\n      return sortedTransactions.sort(\n        (a, b) => new Date(b.transactionDate) - new Date(a.transactionDate)\n      );\n  }\n  return sortedTransactions;\n};\n\n// summary\nexport const selectCategoriesSummary = state =>\n  state.transactions.summary.categoriesSummary;\nexport const selectIncomeSummary = state =>\n  state.transactions.summary.incomeSummary;\nexport const selectExpenseSummary = state =>\n  state.transactions.summary.expenseSummary;\nexport const selectPeriodTotal = state =>\n  state.transactions.summary.periodTotal;\nexport const selectYear = state => state.transactions.summary.year;\nexport const selectMonth = state => state.transactions.summary.month;\n"],"names":["StyledSelectMainDiv","styled","div","styles","control","baseStyles","state","minWidth","maxWidth","minHeight","borderRadius","background","option","backgroundColor","isSelected","color","menu","border","menuList","base","width","height","StyledChartP","p","StyledChartDiv","ChartJS","register","ArcElement","Tooltip","Legend","_ref","dataDoughnut","categories","periodTotal","useSelector","selectPeriodTotal","_jsx","children","length","_jsxs","Doughnut","data","src","pngwing","alt","StatisticsDashboard","dispatch","useDispatch","selectedMonth","setSelectedMonth","useState","value","label","selectedYear","setSelectedYear","useEffect","month","year","fetchTransactionsSummary","Select","onChange","options","placeholder","theme","colors","neutral50","StyledTableDiv","StyledTableTd","td","StyledTableTr","tr","StyledTableTrHead","StyledTableTh","th","StyledTableH3","h3","StyledTableBody","tbody","income","selectIncomeSummary","expense","selectExpenseSummary","map","_ref2","index","name","total","type","style","datasets","fontSize","StyledStatisticDivMain","StyledContainer","StyledStatisticDivChart","StyledStatisticTitle","h2","mainWhite","StatisticsTab","selectCategoriesSummary","labels","borderColor","borderWidth","cutout","zIndex","Chart","StatisticsTable","selectTransactions","transactions","items","selectLoading","isLoading","selectError","error","selectCategories","selectAllCategories","createSelector","selectFIltered","sortCriteria","sortedTransactions","sort","a","b","dateA","Date","transactionDate","dateB","isReverse","amount","_categories$find","_categories$find2","categoryA","find","cat","id","categoryId","categoryB","localeCompare","summary","categoriesSummary","incomeSummary","expenseSummary"],"sourceRoot":""}