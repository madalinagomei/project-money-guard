{"version":3,"file":"static/js/564.9d2acde3.chunk.js","mappings":"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","sources":["images/sprite.svg","components/StatisticsDashboard/StatisticsDashboard.styled.js","components/ButtonAddTransactions/ButtonAddTransactions.styled.js","hooks/useModal.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/AddTransactionForm/AddTransactionForm.styled.js","components/EditTransactionForm/EditTransactionForm.styled.js","components/AddTransactionForm/AddTransactionForm.jsx","components/ButtonAddTransactions/ButtonAddTransactions.jsx","components/TransactionsItem/TransactionsItem.styled.js","components/EditTransactionForm/EditTransactionForm.jsx","components/TransactionsItem/TransactionsItem.jsx","components/TransactionsList/TransactionsList.styled.js","components/SortTransaction/SortTransaction.styled.js","components/SortTransaction/SortTransaction.jsx","components/TransactionsList/MobileList.jsx","components/TransactionsList/TransactionsList.jsx","pages/HomeTab/HomeTab.styled.js","pages/HomeTab/HomeTab.jsx","redux/transactions/selectors.js"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _symbol5;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    strokeWidth: 3.2,\n    d: \"M16 0v32M0 16h32\",\n    style: {\n      stroke: \"var(--color1, #fff)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"exit\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M20.051 23.237h2.499v4.997a3.752 3.752 0 0 1-3.748 3.748H3.748A3.752 3.752 0 0 1 0 28.234V3.748A3.752 3.752 0 0 1 3.748 0h15.054a3.752 3.752 0 0 1 3.748 3.748v4.997h-2.499V3.748a1.25 1.25 0 0 0-1.249-1.249H3.748a1.25 1.25 0 0 0-1.249 1.249v24.486a1.25 1.25 0 0 0 1.249 1.249h15.054a1.25 1.25 0 0 0 1.249-1.249v-4.997zm6.06-13.135-1.767 1.767 2.873 2.874H11.056v2.499h16.161l-2.873 2.873 1.767 1.767L32 15.993l-5.889-5.89z\",\n    opacity: 0.6,\n    style: {\n      fill: \"var(--color1, #fff)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"user\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M16 20c-4.227 0-7.986 2.041-10.379 5.208-.515.682-.773 1.022-.764 1.483.006.356.23.805.51 1.025.362.284.865.284 1.869.284h17.527c1.005 0 1.507 0 1.869-.284.28-.22.503-.669.51-1.025.008-.461-.249-.801-.764-1.483C23.985 22.041 20.226 20 15.999 20zM16 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\",\n    opacity: 0.4,\n    style: {\n      fill: \"var(--color1, #fff)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"lock\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M25.143 10.667h-1.524V7.619C23.619 3.413 20.206 0 16 0S8.381 3.413 8.381 7.619v3.048H6.857a3.057 3.057 0 0 0-3.048 3.048v15.238a3.057 3.057 0 0 0 3.048 3.048h18.286a3.057 3.057 0 0 0 3.048-3.048V13.715a3.057 3.057 0 0 0-3.048-3.048zM16 24.381c-1.676 0-3.048-1.371-3.048-3.048s1.371-3.048 3.048-3.048c1.676 0 3.048 1.371 3.048 3.048S17.677 24.381 16 24.381zm4.724-13.714h-9.448V7.619c0-2.606 2.118-4.724 4.724-4.724s4.724 2.118 4.724 4.724v3.048z\",\n    opacity: 0.4,\n    style: {\n      fill: \"var(--color1, #fff)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"email\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M28.8 3.2H3.2C1.44 3.2.016 4.64.016 6.4L0 25.6c0 1.76 1.44 3.2 3.2 3.2h25.6c1.76 0 3.2-1.44 3.2-3.2V6.4c0-1.76-1.44-3.2-3.2-3.2zm0 6.4-12.8 8-12.8-8V6.4l12.8 8 12.8-8v3.2z\",\n    opacity: 0.4,\n    style: {\n      fill: \"var(--color1, #fff)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"logo_money_guard\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffc727\",\n    d: \"M21.825 4.308c-2.219-.555-4.438-1.664-6.102-3.328-1.664 1.664-3.883 2.774-6.102 3.328.555 4.993 2.219 8.321 6.102 11.095 3.883-2.774 6.102-6.102 6.102-11.095z\",\n    style: {\n      fill: \"var(--color2, #ffc727)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    d: \"M19.606 24.963 4.073 6.656v8.876l12.204 13.869 3.328-4.438zM21.27 23.299l6.657-7.766V7.212l-10.54 12.204 3.883 3.883zM21.825 26.073v4.993l6.102-7.212v-4.993l-6.102 7.212zM10.175 26.073l-6.102-7.212v4.993l6.102 7.212v-4.993z\",\n    style: {\n      fill: \"var(--color3, #fbfbfb)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"close_icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fbfbfb\",\n    strokeWidth: 1.778,\n    d: \"m1.778 1.778 28.444 28.444M1.778 30.222 30.222 1.778\",\n    style: {\n      stroke: \"var(--color3, #fbfbfb)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"straight_line\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    strokeWidth: 1.067,\n    d: \"M16 0v32\",\n    style: {\n      stroke: \"var(--color1, #fff)\"\n    }\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"arrow_up\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fbfbfb\",\n    strokeWidth: 1.6,\n    d: \"M30.4 23.2 16 8.8 1.6 23.2\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"minus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    strokeWidth: 3.2,\n    d: \"M0 16h32\",\n    style: {\n      stroke: \"var(--color1, #fff)\"\n    }\n  })), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"arrow_down\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fbfbfb\",\n    strokeWidth: 1.6,\n    d: \"M1.6 8.8 16 23.2 30.4 8.8\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"slash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    strokeWidth: 2.909,\n    d: \"M21.529 1.597 10.471 30.403\",\n    style: {\n      stroke: \"var(--color1, #fff)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"calendar\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#734aef\",\n    d: \"M11.2 14.4H8v3.2h3.2v-3.2zm6.4 0h-3.2v3.2h3.2v-3.2zm6.4 0h-3.2v3.2H24v-3.2zm3.2-11.2h-1.6V0h-3.2v3.2H9.6V0H6.4v3.2H4.8a3.185 3.185 0 0 0-3.184 3.2L1.6 28.8A3.2 3.2 0 0 0 4.8 32h22.4c1.76 0 3.2-1.44 3.2-3.2V6.4c0-1.76-1.44-3.2-3.2-3.2zm0 25.6H4.8V11.2h22.4v17.6z\",\n    style: {\n      fill: \"var(--color4, #734aef)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"edit\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"black\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.743,\n    d: \"m24 13.334-5.333-5.333M3.333 28.667l4.513-.502c.551-.061.827-.092 1.085-.175.229-.074.446-.178.647-.311.226-.149.422-.345.814-.737L28 9.334a3.77 3.77 0 1 0-5.333-5.333L5.059 21.609c-.392.392-.588.588-.737.814a2.68 2.68 0 0 0-.311.647c-.083.258-.114.533-.175 1.085l-.501 4.513z\",\n    style: {\n      stroke: \"var(--color1, rgba(255, 255, 255, 0.6) )\"\n    }\n  })), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"dollar\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.053 0A5.053 5.053 0 0 0 0 5.053v21.895a5.053 5.053 0 0 0 5.053 5.053h21.895a5.053 5.053 0 0 0 5.053-5.053V5.053A5.053 5.053 0 0 0 26.948 0H5.053zm8.212 13.136c0 .995.765 1.635 3.144 2.253s4.925 1.635 4.925 4.61c0 2.148-1.624 3.332-3.667 3.72v2.253h-3.143v-2.274c-2.012-.43-3.73-1.718-3.856-4.013h2.305c.115 1.236.964 2.2 3.123 2.2 2.316 0 2.829-1.153 2.829-1.876 0-.974-.524-1.896-3.143-2.525-2.923-.702-4.925-1.907-4.925-4.327 0-2.022 1.635-3.342 3.667-3.783V7.111h3.143v2.295c2.19.534 3.29 2.19 3.363 3.992h-2.316c-.063-1.31-.754-2.2-2.619-2.2-1.771 0-2.829.796-2.829 1.938z\",\n    opacity: 0.4\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"statistics\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.053 0h21.895a5.053 5.053 0 0 1 5.053 5.053v21.895a5.053 5.053 0 0 1-5.053 5.053H5.053A5.053 5.053 0 0 1 0 26.948V5.053A5.053 5.053 0 0 1 5.053 0zm19.789 13.941c1.081 0 1.965-.926 1.965-2.058s-.884-2.059-1.965-2.059-1.965.926-1.965 2.059c0 .185.02.36.069.525l-3.488 3.664c-.157-.051-.334-.072-.511-.072s-.354.021-.511.072l-2.505-2.624c.049-.165.069-.35.069-.535 0-1.132-.884-2.058-1.965-2.058s-1.965.926-1.965 2.058c0 .185.02.371.069.535l-4.48 4.683a1.61 1.61 0 0 0-.501-.072c-1.081 0-1.965.926-1.965 2.059s.884 2.058 1.965 2.058 1.965-.926 1.965-2.058c0-.185-.02-.36-.069-.525l4.47-4.693c.157.051.334.072.511.072s.354-.021.511-.072l2.505 2.625c-.049.165-.069.35-.069.535 0 1.132.884 2.059 1.965 2.059s1.965-.926 1.965-2.059a1.9 1.9 0 0 0-.069-.535l3.498-3.654c.157.051.324.072.501.072z\",\n    opacity: 0.4\n  }))), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"homepage\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.053 0A5.053 5.053 0 0 0 0 5.053v21.895a5.053 5.053 0 0 0 5.053 5.053h21.895a5.053 5.053 0 0 0 5.053-5.053V5.053A5.053 5.053 0 0 0 26.948 0H5.053zm8.365 17.987v6.902H7.664v-9.203H4.211L15.72 5.333l11.509 10.353h-3.453v9.203h-5.754v-6.902h-4.604z\",\n    opacity: 0.4\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.d34226730588e01b4b6a1ba69b82af33.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const StyledSelectMainDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 16px 0;\n  min-width: 280px;\n  max-width: 280px;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 16px;\n    padding: 20px 0 0 0;\n    min-width: 192px;\n    max-width: 192px;\n    margin: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    margin-top: 60px;\n    min-width: 213px;\n    max-width: 213px;\n    gap: 32px;\n  }\n`;\nexport const styles = {\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    minWidth: 280,\n    maxWidth: 280,\n    minHeight: 50,\n    borderRadius: '8px',\n    background: ' rgba(133, 93, 175, 0.13) ',\n    '@media only screen and (min-width:768px)': {\n      ...styles['@media only screen and (min-width: 768px)'],\n      minWidth: 160,\n      maxWidth: 160,\n    },\n    '@media only screen and (min-width:1280px)': {\n      ...styles['@media only screen and (min-width: 1280px)'],\n      minWidth: 181,\n      maxWidth: 181,\n    },\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: state.isSelected ? 'rgba(255, 255, 255, 0.10)' : '',\n    color: state.isSelected ? '#FF868D' : '',\n    ':hover': {\n      background: 'rgba(255, 255, 255, 0.10)',\n      color: '#FF868D',\n    },\n  }),\n  menu: baseStyles => ({\n    ...baseStyles,\n    background:\n      'linear-gradient(0deg, rgba(87, 38, 146, 0.813) 0%, rgba(80, 48, 154, 0.9) 43.14%, rgba(99, 63, 159, 0.9) 73.27%, rgba(76, 46, 109, 0.8) 120.03%) ',\n    border: 'none ',\n    borderRadius: '8px ',\n  }),\n  menuList: base => ({\n    ...base,\n\n    '::-webkit-scrollbar': {\n      width: '4px',\n      height: '0px',\n    },\n    '::-webkit-scrollbar-track': {\n      background: '#9065d1',\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: '#6b438c',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: '#330a65',\n    },\n  }),\n};\n","import styled from 'styled-components';\n\nexport const AddBtnCircle = styled.button`\n  width: 44px;\n  height: 44px;\n  background: ${({ theme }) => theme.backgrounds.btnGradient};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  position: fixed;\n  bottom: 3vh;\n  right: 5vw;\n  z-index: 1000;\n\n &:hover {\n    background: ${({ theme }) => theme.colors.incomeColor};\n    box-shadow: 0px 6px 15px 0px rgba(255, 199, 39, 0.5);\n  }\n  @media only screen and (min-width: 768px) {\n    bottom: 4vh;\n    right: 4vw;\n  }\n  @media only screen and (min-width: 1280px) {\n    bottom: 3vh;\n    right: 3vw;\n  }\n`;\n","import { useEffect, useState } from 'react';\n\nconst useModal = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [data, SetData] = useState(null);\n  const close = () => {\n    setIsOpen(false);\n  };\n  const toggle = () => setIsOpen(prev => !prev);\n  const open = content => {\n    setIsOpen(true);\n    if (content !== null) {\n      SetData(content);\n    }\n  };\n  useEffect(() => {\n    isOpen\n      ? (document.body.style.overflow = 'hidden')\n      : (document.body.style.overflow = 'auto');\n  }, [isOpen]);\n  return { isOpen, close, open, toggle, data };\n};\n\nexport default useModal;\n","import styled from 'styled-components';\n\nexport const OverlayStyle = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1200;\n  background: rgba(34, 13, 91, 0.23);\n  backdrop-filter: blur(3.5px);\n  transition: opacity 500ms ease-in-out, visibility 500ms ease-in-out;\n  opacity: 1;\n  visibility: visible;\n\n  @media screen and (min-width: 768px) {\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 60px 0px;\n  }\n`;\n\nexport const ModalWindowStyle = styled.div`\n  width: 320px;\n  min-height: 600px;\n  @media only screen and (max-width: 767px) {\n    min-height: 700px;\n  }\n  padding: 41px 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: radial-gradient(#3f2e96, #5f478c);\n  border-radius: 8px;\n  position: relative;\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    height: 100%;\n    border-radius: 0;\n    padding: calc(20 * (100vw / 480));\n    min-width: 300px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 540px;\n    max-height: 511px;\n    border-radius: 8px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    border-radius: 8px;\n    padding: calc(20 * (100vw / 480));\n    min-width: 300px;\n  }\n`;\n\nexport const ButtonCloseStyle = styled.button`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background-color: transparent;\n  padding: 0;\n  line-height: 0;\n  border: none;\n  cursor: pointer;\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: block;\n  }\n\n  &:hover {\n    transform: scale(1.4);\n    transition: transform 0.3s ease-in-out;\n  }\n  &:not(:hover) {\n    transform: scale(1);\n    transition: transform 0.3s ease-in-out;\n  }\n`;\n\nexport const CancelBtnStyle = styled.button`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 280px;\n  height: 50px;\n  padding: 13px 68px;\n  background-color: rgba(251, 251, 251, 1);\n  border-radius: 20px;\n  border: none;\n  line-height: 1.5;\n  font-size: 18px;\n  letter-spacing: 1.8px;\n  color: rgba(98, 63, 139, 1);\n  font-weight: 400;\n  text-transform: uppercase;\n  cursor: pointer;\n\n  opacity: 1;\n  transform: translateY(0);\n  transition: opacity 0.3s ease, transform 0.3s ease;\n\n  &:hover {\n    opacity: 0.8;\n    transform: translateY(-1px);\n  }\n`;\n","import { useEffect } from 'react';\n\nimport {\n  ModalWindowStyle,\n  OverlayStyle,\n  ButtonCloseStyle,\n  CancelBtnStyle,\n} from './Modal.styled';\nimport PropTypes from 'prop-types';\n\nexport default function Modal({ children, showCloseIcon = true, close }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Escape') {\n        close();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [close]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      close();\n    }\n  };\n\n  const closeClick = e => {\n    if (e.target.name === 'cancel' || e.currentTarget.name === 'closeSvg') {\n      close();\n    }\n  };\n\n  return (\n    <OverlayStyle onClick={e => handleBackdropClick(e)}>\n      <ModalWindowStyle>\n        {showCloseIcon && (\n          <ButtonCloseStyle type=\"button\" name=\"closeSvg\" onClick={closeClick}>\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 18 18\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M1 1L17 17\" stroke=\"#FBFBFB\" />\n              <path d=\"M1 17L17 0.999999\" stroke=\"#FBFBFB\" />\n            </svg>\n          </ButtonCloseStyle>\n        )}\n        {children}\n        <CancelBtnStyle type=\"button\" name=\"cancel\" onClick={closeClick}>\n          Cancel\n        </CancelBtnStyle>\n      </ModalWindowStyle>\n    </OverlayStyle>\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  showCloseIcon: PropTypes.bool,\n  close: PropTypes.func,\n};\n","import { styled } from 'styled-components';\nimport { Form, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\n\nexport const StyledContainer = styled.div`\n  padding: 20px 0;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 280px;\n\n  @media only screen and (min-width: 768px) {\n    width: 394px;\n  }\n`;\n\nexport const StyledFieldAmount = styled(Field)`\n  width: 280px;\n  height: 75px;\n  color: ${({ theme }) => theme.colors.editBtn};\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n  padding: 0 20px;\n  outline: none;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.editBtn};\n    font-weight: 600;\n\n    @media only screen and (min-width: 768px) {\n      text-align: center;\n      font-weight: 700;\n    }\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 181px;\n  }\n`;\n\nexport const StyledFieldComment = styled(Field)`\n  width: 280px;\n  height: 75px;\n  color: ${({ theme }) => theme.colors.editBtn};\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n  padding: 0 20px;\n  outline: none;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.editBtn};\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 394px;\n  }\n`;\n\nexport const AddFormTitle = styled.h2`\n  text-align: center;\n  font-size: 24px;\n  margin-bottom: 34px;\n`;\n\nexport const StyledRadioBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const StyledRadioInput = styled.input`\n  display: none;\n`;\n\nexport const StyledTextSpan = styled.span`\n  color: ${({ theme }) => theme.colors.editBtn};\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const SwitcherSquare = styled.div`\n  width: 80px;\n  height: 40px;\n  border-radius: 30px;\n  background: #fff;\n  position: relative;\n`;\n\nexport const SwitcherRoundPlus = styled.div`\n  width: 44px;\n  height: 44px;\n  background: #ffb627;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  box-shadow: 0px 6px 15px 0px rgba(255, 199, 39, 0.5);\n  top: -2px;\n  left: -2px;\n`;\n\nexport const SwitcherRoundMinus = styled.div`\n  width: 44px;\n  height: 44px;\n  background: #ff868d;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  box-shadow: 0px 6px 15px 0px rgba(255, 134, 141, 0.5);\n  top: -2px;\n  left: 38px;\n`;\n\nexport const AmountDateBox = styled.div`\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    gap: 32px;\n  }\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  width: 280px;\n  height: 75px;\n  padding: 0 20px;\n  color: ${({ theme }) => theme.colors.mainWhite};\n  background: transparent;\n  padding: 0 20px;\n  border: none;\n  outline: none;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.mainWhite};\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 181px;\n  }\n`;\n\nexport const StyledWrapper = styled.div`\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 5px 5px 20px;\n  }\n  .react-datepicker__input {\n    border: 2px solid #333;\n    border-radius: 4px;\n    padding: 8px;\n  }\n  .react-datepicker__input-container {\n    padding-bottom: 15px;\n  }\n  .react-datepicker__input-container .react-datepicker__calendar-icon {\n    position: absolute;\n    padding: 0.5rem;\n    box-sizing: content-box;\n    right: 5px;\n    top: 25px;\n  }\n  .react-datepicker__calendar-icon {\n    width: 24px;\n    height: 24px;\n    vertical-align: -0.125em;\n  }\n  .react-datepicker__month-container {\n    float: left;\n    background: radial-gradient(#3f2e96, #5f478c);\n  }\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name,\n  .react-datepicker__current-month {\n    color: ${({ theme }) => theme.colors.mainWhite};\n  }\n  .react-datepicker__day:hover {\n    background: ${({ theme }) => theme.backgrounds.active};\n  }\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.backgrounds.tableHead};\n  }\n  .react-datepicker__day--disabled,\n  .react-datepicker__month-text--disabled,\n  .react-datepicker__quarter-text--disabled,\n  .react-datepicker__year-text--disabled {\n    cursor: default;\n    background-color: ${({ theme }) => theme.backgrounds.white40};\n  }\n  .react-datepicker__day--disabled:hover,\n  .react-datepicker__month-text--disabled:hover,\n  .react-datepicker__quarter-text--disabled:hover,\n  .react-datepicker__year-text--disabled:hover {\n    background-color: ${({ theme }) => theme.backgrounds.white40};\n    border-radius: 0;\n  }\n  .react-datepicker__day--selected,\n  .react-datepicker__day--keyboard-selected {\n    background-color: ${({ theme }) => theme.backgrounds.active};\n  }\n`;\n\nexport const BtnBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const BtnAdd = styled.button`\n  width: 280px;\n  height: 50px;\n  padding: 13px 100px;\n  border-radius: 20px;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.mainWhite};\n  background: ${({ theme }) => theme.backgrounds.btnGradient};\n  margin-top: 40px;\n`;\n\n//================= select ==================\n\nexport const StyledSelectMainDiv = styled.div`\n  width: 280px;\n\n  @media only screen and (min-width: 768px) {\n    width: 394px;\n  }\n`;\n\nexport const styles = {\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    border: 'none',\n    borderRadius: 'none',\n    borderBottom: '1px solid gray',\n    paddingTop: '42px',\n    '@media only screen and (min-width:768px)': {\n      ...styles['@media only screen and (min-width: 768px)'],\n      width: 394,\n    },\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: state.isSelected ? 'rgba(255, 255, 255, 0.10)' : '',\n    ':hover': {\n      background: 'rgba(255, 255, 255, 0.10)',\n    },\n  }),\n  menu: baseStyles => ({\n    ...baseStyles,\n    background:\n      'linear-gradient(0deg, rgba(87, 38, 146, 0.813) 0%, rgba(80, 48, 154, 0.9) 43.14%, rgba(99, 63, 159, 0.9) 73.27%, rgba(76, 46, 109, 0.8) 120.03%) ',\n    border: 'none ',\n  }),\n  menuList: base => ({\n    ...base,\n\n    '::-webkit-scrollbar': {\n      width: '4px',\n      height: '0px',\n    },\n    '::-webkit-scrollbar-track': {\n      background: '#9065d1',\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: '#6b438c',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: '#330a65',\n    },\n  }),\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\n\nexport const StyledEditContainer = styled.div`\n  padding: 20px;\n`;\n\nexport const EditFormTitle = styled.h2`\n  text-align: center;\n  font-size: 24px;\n  margin-bottom: 32px;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 30px;\n  }\n`;\n\nexport const StyledlabelBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 50px;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 60px;\n  }\n`;\nexport const StyledEditForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 280px;\n`;\n\nexport const CustomRadioLabel = styled.label`\n  position: relative;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: normal;\n\n  color: ${({ value, selected }) => {\n    if (\n      (selected === 'INCOME' && value === 'INCOME') ||\n      (selected === 'EXPENSE' && value === 'EXPENSE')\n    ) {\n      return value === 'INCOME' ? '#FFB627' : '#FF868D';\n    } else {\n      return '#E0E0E0';\n    }\n  }};\n\n  @media only screen and (min-width: 768px) {\n    font-weight: 700;\n  }\n`;\n\nexport const CustomRadioInput = styled.input`\n  display: none;\n`;\n\nexport const StyledAmounDateEdit = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    gap: 32px;\n    margin-bottom: 40px;\n  }\n`;\nexport const StyledEditAmount = styled(Field)`\n  font-size: 18px;\n  font-weight: 600;\n  line-height: normal;\n  padding: 8px;\n  padding-left: 20px;\n  width: 280px;\n  margin-bottom: 40px;\n  outline: none;\n\n  border: none;\n  background: transparent;\n  color: ${({ theme }) => theme.colors.mainWhite};\n  border-bottom: ${({ theme }) => theme.border.borderBottom};\n\n  @media only screen and (min-width: 768px) {\n    width: 180px;\n    text-align: center;\n  }\n`;\nexport const StyledReqField = styled.span`\n  position: absolute;\n  font-size: 14px;\n  right: 90px;\n  bottom: 90px;\n  color: ${({ theme }) => theme.colors.expenseColor};\n\n  @media only screen and (min-width: 768px) {\n    bottom: 20px;\n    right: 210px;\n  }\n`;\n\nexport const StyledReqCommentField = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.expenseColor};\n`;\n\nexport const StyledEditField = styled(Field)`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: normal;\n  width: 280px;\n  padding: 0 20px 8px 20px;\n  background: transparent;\n  outline: none;\n  border: none;\n  border-bottom: ${({ theme }) => theme.border.borderBottom};\n  color: ${({ theme }) => theme.colors.mainWhite};\n\n  @media only screen and (min-width: 768px) {\n    width: 394px;\n    padding: 0 8px 8px 8px;\n  }\n`;\n\nexport const StyledEditDatePicker = styled(DatePicker)`\n  width: 280px;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: normal;\n  margin-bottom: 20px;\n  outline: none;\n\n  background: transparent;\n  border: none;\n  border-bottom: ${({ theme }) => theme.border.borderBottom};\n  color: ${({ theme }) => theme.colors.mainWhite};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.mainWhite};\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 180px;\n  }\n`;\n\nexport const StyledIconCalendar = styled.svg`\n  cursor: pointer;\n`;\nexport const StyledWrapper = styled.div`\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 5px 5px 20px;\n  }\n  .react-datepicker__input {\n    border: 2px solid #333;\n    border-radius: 4px;\n    padding: 8px;\n  }\n  .react-datepicker__input-container {\n    padding-bottom: 15px;\n  }\n  .react-datepicker__input-container .react-datepicker__calendar-icon {\n    position: absolute;\n    padding: 0.5rem;\n    box-sizing: content-box;\n    right: 5px;\n    top: -2px;\n  }\n  .react-datepicker__calendar-icon {\n    width: 24px;\n    height: 24px;\n    vertical-align: -0.125em;\n  }\n  .react-datepicker__month-container {\n    float: left;\n    background: ${({ theme }) => theme.backgrounds.modalBg};\n  }\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name,\n  .react-datepicker__current-month {\n    color: ${({ theme }) => theme.colors.mainWhite};\n  }\n  .react-datepicker__day:hover {\n    background-color: ${({ theme }) => theme.backgrounds.active};\n  }\n  .react-datepicker__header {\n    background-color: ${({ theme }) => theme.backgrounds.tableHead};\n  }\n  .react-datepicker__day--disabled,\n  .react-datepicker__month-text--disabled,\n  .react-datepicker__quarter-text--disabled,\n  .react-datepicker__year-text--disabled {\n    cursor: default;\n    background-color: ${({ theme }) => theme.backgrounds.white40};\n  }\n  .react-datepicker__day--disabled:hover,\n  .react-datepicker__month-text--disabled:hover,\n  .react-datepicker__quarter-text--disabled:hover,\n  .react-datepicker__year-text--disabled:hover {\n    background-color: ${({ theme }) => theme.backgrounds.white40};\n    border-radius: 0;\n  }\n  .react-datepicker__day--selected,\n  .react-datepicker__day--keyboard-selected {\n    background-color: ${({ theme }) => theme.backgrounds.active};\n  }\n`;\n\nexport const EditBtnBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const BtnSave = styled.button`\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  width: 280px;\n  height: 50px;\n  padding: 13px 100px;\n  margin-top: 40px;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.colors.mainWhite};\n  background: ${({ theme }) => theme.backgrounds.btnGradient};\n`;\n\nexport const EditBtnCancel = styled.button`\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  text-align: center;\n  width: 280px;\n  height: 50px;\n  padding: 13px 100px;\n  border-radius: 20px;\n  color: #623f8b;\n  background-color: ${({ theme }) => theme.colors.mainWhite};\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  AddFormTitle,\n  AmountDateBox,\n  BtnAdd,\n  BtnBox,\n  StyledContainer,\n  StyledDatePicker,\n  StyledFieldAmount,\n  StyledFieldComment,\n  StyledForm,\n  StyledRadioBox,\n  StyledRadioInput,\n  StyledSelectMainDiv,\n  StyledTextSpan,\n  StyledWrapper,\n  SwitcherRoundMinus,\n  SwitcherRoundPlus,\n  SwitcherSquare,\n  styles,\n} from './AddTransactionForm.styled';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addTransactionThunk,\n  fetchTransactionCategory,\n} from '../../redux/transactions/operations';\nimport { object, string } from 'yup';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from '../../images/sprite.svg';\nimport { selectAllCategories } from '../../redux/transactions/selectors';\nimport Select from 'react-select';\nimport { StyledIconCalendar } from 'components/EditTransactionForm/EditTransactionForm.styled';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nconst AddSchema = object({\n  amount: string().required(),\n  comment: string().min(2, 'Too Short!').max(50, 'Too Long!'),\n  category: string(),\n});\n\nconst handleNumberInput = e => {\n  const inputValue = e.target.value;\n  const newValue = inputValue.replace(/[-+eE]/g, '');\n  e.target.value = newValue;\n};\nconst AddTransactionForm = ({ close }) => {\n  const dispatch = useDispatch();\n\n  const [selectedCategory, setSelectedCategory] = useState({\n    value: 'Select a category',\n    label: 'Select a category',\n  });\n\n  const [transactionType, setTransactionType] = useState('EXPENSE');\n  const [isSwitcherRoundPlusVisible, setIsSwitcherRoundPlusVisible] =\n    useState(false);\n  const [isSwitcherRoundMinusVisible, setIsSwitcherRoundMinusVisible] =\n    useState(true);\n\n  const onCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n\n  const categories = useSelector(selectAllCategories);\n\n  useEffect(() => {\n    dispatch(fetchTransactionCategory());\n  }, [dispatch]);\n\n  const [startDate, setStartDate] = useState();\n\n  const handleSwitcherClick = (values, setFieldValue) => {\n    const newTransactionType =\n      transactionType === 'EXPENSE' ? 'INCOME' : 'EXPENSE';\n    setTransactionType(transactionType === 'EXPENSE' ? 'INCOME' : 'EXPENSE');\n    setFieldValue('type', newTransactionType);\n    setTransactionType(newTransactionType);\n\n    if (transactionType === 'EXPENSE') {\n      setIsSwitcherRoundPlusVisible(true);\n      setIsSwitcherRoundMinusVisible(false);\n    } else {\n      setIsSwitcherRoundPlusVisible(false);\n      setIsSwitcherRoundMinusVisible(true);\n    }\n  };\n  const onClickTitle = str => {\n    if (str === 'INCOME') {\n      setIsSwitcherRoundPlusVisible(true);\n      setIsSwitcherRoundMinusVisible(false);\n    }\n    if (str === 'EXPENSE') {\n      setIsSwitcherRoundPlusVisible(false);\n      setIsSwitcherRoundMinusVisible(true);\n    }\n  };\n\n  const handleSubmit = (values, selectedCategory) => {\n    const addFormData = {\n      amount:\n        values.type === 'EXPENSE'\n          ? Number(-values.amount)\n          : Number(values.amount),\n      categoryId:\n        values.type === 'EXPENSE'\n          ? selectedCategory.id\n          : '063f1132-ba5d-42b4-951d-44011ca46262', // categoryId INCOME\n      comment: values.comment,\n      transactionDate: values.transactionDate,\n      type: values.type,\n    };\n\n    dispatch(addTransactionThunk(addFormData))\n      .unwrap()\n      .then(() => {\n        close();\n        toast.success(`Transaction added💸`);\n      })\n      .catch(() => {\n        toast.error(\n          'Something went wrong, enter amount or choose a category!🤷‍♀️'\n        );\n      });\n  };\n\n  return (\n    <div>\n      <StyledContainer>\n        <AddFormTitle>Add transaction</AddFormTitle>\n        <Formik\n          initialValues={{\n            type: 'EXPENSE',\n            category: '',\n            amount: '',\n            transactionDate: new Date(),\n            comment: '',\n          }}\n          validationSchema={AddSchema}\n          onSubmit={(values, { setFieldValue }) =>\n            handleSubmit(values, selectedCategory)\n          }\n        >\n          {({ errors, touched, values, handleChange, setFieldValue }) => (\n            <StyledForm autoComplete=\"off\">\n              <input type=\"hidden\" name=\"type\" value={values.type} />\n              <StyledRadioBox>\n                <label>\n                  <StyledRadioInput\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"INCOME\"\n                    checked={values.type === 'INCOME'}\n                    onChange={handleChange}\n                    onClick={() => onClickTitle('INCOME')}\n                  />\n                  <StyledTextSpan\n                    style={{\n                      color: values.type === 'INCOME' ? '#FFB627' : '#ffffff99',\n                    }}\n                  >\n                    Income\n                  </StyledTextSpan>\n                </label>\n                <SwitcherSquare\n                  onClick={() => handleSwitcherClick(values, setFieldValue)}\n                >\n                  {isSwitcherRoundPlusVisible && (\n                    <SwitcherRoundPlus>\n                      <svg width=\"20\" height=\"20\">\n                        <use href={`${sprite}#plus`} />\n                      </svg>\n                    </SwitcherRoundPlus>\n                  )}\n\n                  {isSwitcherRoundMinusVisible && (\n                    <SwitcherRoundMinus>\n                      <svg width=\"20\" height=\"20\">\n                        <use href={`${sprite}#minus`} />\n                      </svg>\n                    </SwitcherRoundMinus>\n                  )}\n                </SwitcherSquare>\n                <label>\n                  <StyledRadioInput\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"EXPENSE\"\n                    checked={values.type === 'EXPENSE'}\n                    onChange={handleChange}\n                    onClick={() => onClickTitle('EXPENSE')}\n                  />\n                  <StyledTextSpan\n                    style={{\n                      color:\n                        values.type === 'EXPENSE' ? '#FF868D' : '#ffffff99',\n                    }}\n                  >\n                    Expense\n                  </StyledTextSpan>\n                </label>\n              </StyledRadioBox>\n\n              {values.type === 'EXPENSE' ? (\n                <StyledSelectMainDiv>\n                  <Select\n                    name=\"category\"\n                    styles={styles}\n                    value={selectedCategory}\n                    onChange={value => onCategoryChange(value)}\n                    options={categories\n                      ?.filter(option => option.type === 'EXPENSE')\n                      .map(option => ({\n                        value: option.type,\n                        label: option.name,\n                        id: option.id,\n                      }))}\n                    placeholder={selectedCategory.label}\n                    theme={theme => ({\n                      ...theme,\n                      colors: {\n                        neutral50: '#fff',\n                      },\n                    })}\n                  />\n                </StyledSelectMainDiv>\n              ) : null}\n\n              <AmountDateBox>\n                <StyledFieldAmount\n                  name=\"amount\"\n                  type=\"number\"\n                  onInput={handleNumberInput}\n                  placeholder=\"0.00\"\n                  value={values.amount.toString().replace('-', '')}\n                />\n                <StyledWrapper>\n                  <label>\n                    <StyledDatePicker\n                      name=\"transactionDate\"\n                      value={values.transactionDate}\n                      onChange={transactionDate => {\n                        handleChange({\n                          target: {\n                            name: 'transactionDate',\n                            value: transactionDate,\n                          },\n                        });\n                        setStartDate(transactionDate);\n                      }}\n                      dateFormat=\"dd.MM.yyyy\"\n                      placeholderText={`${new Date().toLocaleDateString(\n                        'uk-UA'\n                      )}`}\n                      showIcon\n                      selected={startDate}\n                      maxDate={new Date()}\n                      style={{ float: 'left' }}\n                      icon={\n                        <StyledIconCalendar width=\"24\" height=\"24\">\n                          <use href={`${sprite}#calendar`} />\n                        </StyledIconCalendar>\n                      }\n                    />\n                  </label>\n                </StyledWrapper>\n              </AmountDateBox>\n              <StyledFieldComment\n                name=\"comment\"\n                type=\"comment\"\n                placeholder=\"Comment\"\n              />\n              {errors.comment && touched.comment ? (\n                <div>{errors.comment}</div>\n              ) : null}\n              <BtnBox>\n                <BtnAdd type=\"submit\">Add</BtnAdd>\n              </BtnBox>\n            </StyledForm>\n          )}\n        </Formik>\n      </StyledContainer>\n    </div>\n  );\n};\n\nexport default AddTransactionForm;\n\nAddTransactionForm.propTypes = {\n  close: PropTypes.func,\n};\n","import React from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { AddBtnCircle } from './ButtonAddTransactions.styled';\nimport useModal from 'hooks/useModal';\nimport Modal from 'components/Modal/Modal';\nimport AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\nimport PropTypes from 'prop-types';\n\nconst ButtonAddTransactions = ({ transaction }) => {\n  const { open, close, isOpen, data } = useModal();\n  return (\n    <>\n      <AddBtnCircle type=\"button\" onClick={() => open(transaction)}>\n        <svg width=\"20\" height=\"20\">\n          <use href={`${sprite}#plus`} />\n        </svg>\n      </AddBtnCircle>\n      {isOpen && (\n        <Modal close={close}>\n          <AddTransactionForm transaction={data} close={close} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ButtonAddTransactions;\n\nButtonAddTransactions.propTypes = {\n  transaction: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const StyledTransaction = styled.li`\n  margin: 0 auto;\n  min-width: 280px;\n  max-width: 360px;\n  margin-bottom: 8px;\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.backgrounds.transactionBg};\n  border-left: 5px solid ${props => props.$color};\n\n  @media only screen and (min-width: 320px) and (max-width: 767px) {\n    display: block;\n    list-style: none;\n  }\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const StyledParWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  border-bottom: ${({ theme }) => theme.border.borderBottom};\n`;\nexport const StyledParagraph = styled.p`\n  text-align: right;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: normal;\n  color: ${({ theme }) => theme.colors.mainWhite};\n`;\n\nexport const StyledSpan = styled.span`\n  max-width: 120px;\n`;\nexport const StyledBtnBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 20px;\n`;\n\nexport const StyledDeleteBtn = styled.button`\n  text-align: center;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: normal;\n  padding: 4px 12px;\n\n  border-radius: 18px;\n  background: ${({ theme }) => theme.backgrounds.btnGradient};\n  box-shadow: ${({ theme }) => theme.shadows.deleteBtnShadow};\n  transition: filter 0.3s;\n  &:hover {\n    filter: drop-shadow(0px 3px 10px rgba(255, 255, 255, 0.6));\n  }\n`;\n\nexport const StyledEditBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 12px;\n\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.32px;\n\n  background-color: transparent;\n  color: ${({ theme }) => theme.colors.editBtn};\n  transition: filter 0.3s;\n  &:hover {\n    filter: drop-shadow(0px 3px 5px rgba(255, 255, 255, 0.8));\n  }\n`;\n\nexport const StyledTansNotFound = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  margin-top: 80px;\n\n  padding: 30px;\n  width: 260px;\n  height: 100px;\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.backgrounds.tableHead};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n`;\n\nexport const StyledNotFoundTitle = styled.h3`\n  text-align: center;\n`;\n","import { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateTransactionThunk } from '../../redux/transactions/operations';\nimport sprite from '../../images/sprite.svg';\nimport { object, string } from 'yup';\nimport {\n  BtnSave,\n  CustomRadioInput,\n  CustomRadioLabel,\n  EditBtnBox,\n  EditFormTitle,\n  StyledAmounDateEdit,\n  StyledEditAmount,\n  StyledEditContainer,\n  StyledEditDatePicker,\n  StyledEditField,\n  StyledEditForm,\n  StyledIconCalendar,\n  StyledReqField,\n  StyledWrapper,\n  StyledlabelBox,\n} from './EditTransactionForm.styled';\nimport PropTypes from 'prop-types';\n\nconst handleNumberInput = e => {\n  const inputValue = e.target.value;\n  const newValue = inputValue.replace(/[-+eE]/g, '');\n  e.target.value = newValue;\n};\n\nconst EditTransactionForm = ({ transaction, close }) => {\n  const dispatch = useDispatch();\n  const [startDate, setStartDate] = useState();\n  const [selectedType, setSelectedType] = useState(transaction.type);\n\n  const AddSchema = object({\n    amount: string().required().min(1, 'Too Short!').max(12, 'Too Long!'),\n    comment: string().max(50, 'Too Long!'),\n    type: string().oneOf(['INCOME', 'EXPENSE'], 'Invalid transaction type'),\n  });\n\n  const handleSubmit = values => {\n    const EditData = {\n      id: transaction.id,\n      amount:\n        values.type === 'EXPENSE'\n          ? -Math.abs(values.amount)\n          : Math.abs(values.amount),\n      transactionDate: values.transactionDate,\n      type: values.type,\n      comment: values.comment,\n      categoryId: transaction.categoryId,\n    };\n    dispatch(updateTransactionThunk(EditData));\n    close();\n  };\n\n  return (\n    <div>\n      <StyledEditContainer>\n        <EditFormTitle>Edit transaction</EditFormTitle>\n        <Formik\n          initialValues={{\n            id: transaction.id,\n            amount: transaction.amount,\n            transactionDate: new Date(Date.parse(transaction.transactionDate)),\n            comment: transaction.comment,\n            type: transaction.type,\n          }}\n          validationSchema={AddSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched, values, handleChange, setFieldValue }) => (\n            <StyledEditForm autoComplete=\"off\">\n              <StyledlabelBox>\n                <CustomRadioLabel value=\"INCOME\" selected={selectedType}>\n                  <CustomRadioInput\n                    type=\"radio\"\n                    name=\"type\"\n                    value=\"INCOME\"\n                    disabled={values.type === 'EXPENSE' ? true : false}\n                    checked={values.type === 'INCOME'}\n                    onChange={() => {\n                      setFieldValue('type', 'INCOME');\n                      setSelectedType('INCOME');\n                    }}\n                  />\n                  Income\n                </CustomRadioLabel>\n                <span>/</span>\n                <CustomRadioLabel value=\"EXPENSE\" selected={selectedType}>\n                  <CustomRadioInput\n                    type=\"radio\"\n                    name=\"type\"\n                    disabled={values.type === 'INCOME' ? true : false}\n                    value=\"EXPENSE\"\n                    checked={values.type === 'EXPENSE'}\n                    onChange={() => {\n                      setFieldValue('type', 'EXPENSE');\n                      setSelectedType('EXPENSE');\n                    }}\n                  />\n                  Expense\n                </CustomRadioLabel>\n              </StyledlabelBox>\n              <StyledAmounDateEdit>\n                <div>\n                  <StyledEditAmount\n                    name=\"amount\"\n                    type=\"number\"\n                    onInput={handleNumberInput}\n                    value={values.amount.toString().replace('-', '')}\n                    placeholder=\"0.0\"\n                  />\n                  {errors.amount && touched.amount ? (\n                    <StyledReqField>{errors.amount}</StyledReqField>\n                  ) : null}\n                </div>\n                <StyledWrapper>\n                  <label>\n                    <StyledEditDatePicker\n                      name=\"transactionDate\"\n                      value={values.transactionDate}\n                      onChange={date => {\n                        handleChange({\n                          target: {\n                            name: 'transactionDate',\n                            value: date,\n                          },\n                        });\n                        setStartDate(date);\n                      }}\n                      dateFormat=\"dd.MM.yyyy\"\n                      placeholderText={`${values.transactionDate.toLocaleDateString(\n                        'uk-UA'\n                      )}`}\n                      showIcon\n                      selected={startDate}\n                      maxDate={new Date()}\n                      style={{ float: 'left' }}\n                      icon={\n                        <StyledIconCalendar width=\"24\" height=\"24\">\n                          <use href={`${sprite}#calendar`} />\n                        </StyledIconCalendar>\n                      }\n                    />\n                  </label>\n                </StyledWrapper>\n              </StyledAmounDateEdit>\n              <StyledEditField\n                name=\"comment\"\n                type=\"text\"\n                value={values.comment}\n                placeholder=\"Comment\"\n              />\n              <EditBtnBox>\n                <BtnSave type=\"submit\">Save</BtnSave>\n              </EditBtnBox>\n            </StyledEditForm>\n          )}\n        </Formik>\n      </StyledEditContainer>\n    </div>\n  );\n};\n\nexport default EditTransactionForm;\n\nEditTransactionForm.propTypes = {\n  transaction: PropTypes.object,\n  close: PropTypes.func,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteTransactionThunk } from '../../redux/transactions/operations';\nimport {\n  StyledBtnBox,\n  StyledDeleteBtn,\n  StyledEditBtn,\n  StyledParWrapper,\n  StyledParagraph,\n  StyledSpan,\n  StyledTransaction,\n} from './TransactionsItem.styled';\nimport { selectAllCategories } from '../../redux/transactions/selectors';\nimport sprite from '../../images/sprite.svg';\nimport useModal from 'hooks/useModal';\nimport Modal from 'components/Modal/Modal';\nimport EditTransactionForm from 'components/EditTransactionForm/EditTransactionForm';\nimport PropTypes from 'prop-types';\n\nconst TransactionsItem = ({ transaction }) => {\n  const categories = useSelector(selectAllCategories);\n  const { open, close, isOpen } = useModal();\n  const dispatch = useDispatch();\n  const category = categories.find(cat => cat.id === transaction.categoryId);\n  const handleBtnDelete = id => {\n    dispatch(deleteTransactionThunk(id));\n  };\n  return (\n    <>\n      <StyledTransaction\n        $color={transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'}\n      >\n        <StyledParWrapper>\n          <StyledParagraph>Date</StyledParagraph>\n          <span>{formatDate(transaction.transactionDate)}</span>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Type</StyledParagraph>\n          <span>{transaction.type}</span>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Category</StyledParagraph>\n          <span>{categories ? category?.name : '-'}</span>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Comment</StyledParagraph>\n          <StyledSpan>\n            {transaction.comment.length >= 10\n              ? `${transaction.comment.slice(0, 10)}...`\n              : transaction.comment}\n          </StyledSpan>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Sum</StyledParagraph>\n          <span> {transaction.amount.toString().replace('-', '')}</span>\n        </StyledParWrapper>\n        <StyledBtnBox>\n          <StyledDeleteBtn onClick={() => handleBtnDelete(transaction.id)}>\n            Delete\n          </StyledDeleteBtn>\n          <StyledEditBtn onClick={() => open(transaction)}>\n            <svg width=\"14\" height=\"14\">\n              <use href={`${sprite}#edit`} />\n            </svg>\n            Edit\n          </StyledEditBtn>\n        </StyledBtnBox>\n        {isOpen && (\n          <Modal close={close}>\n            <EditTransactionForm transaction={transaction} close={close} />\n          </Modal>\n        )}\n      </StyledTransaction>\n    </>\n  );\n};\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear().toString().slice(-2);\n  return `${day}.${month}.${year}`;\n}\n\nexport default TransactionsItem;\n\nTransactionsItem.propTypes = {\n  transaction: PropTypes.object,\n};\n","import styled from 'styled-components';\n\n// ==============Mobile==================\n\nexport const StyledTransactionsList = styled.div`\n  margin: 0 auto;\n  @media only screen and (min-width: 1280px) {\n    margin-top: 46px;\n  }\n`;\n\nexport const StyledMobileWrapper = styled.ul`\n  @media only screen and (min-width: 320px) and (max-width: 767px) {\n    display: block;\n    list-style: none;\n  }\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n// ==============Table==================\nexport const StyledTableWrapper = styled.div`\n  display: none;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: fit-content;\n    margin-left: 55px;\n  }\n`;\nexport const StyledTable = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\nexport const StyledHeaderTr = styled.tr`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 16px 20px;\n\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.backgrounds.tableHead};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n  backdrop-filter: ${({ theme }) => theme.blur.backdropFilter};\n\n  @media only screen and (min-width: 768px) {\n    padding-right: calc(100% / 4.2);\n  }\n  @media only screen and (min-width: 1280px) {\n    padding-right: calc(100% / 4.05);\n  }\n`;\n\nexport const StyledTh = styled.th`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n\n  color: ${({ theme }) => theme.colors.mainWhite};\n`;\n\nexport const StyledThSortActive = styled(StyledTh)`\n  cursor: pointer;\n`;\n\nexport const StyledSortIcon = styled.svg`\n  margin-left: 6px;\n  transition: transform 0.3s ease;\n  transform: rotate(180deg);\n`;\nexport const StyledTbodyTable = styled.tbody`\n  display: block;\n\n  max-height: 50vh;\n  overflow-y: scroll;\n  &::-webkit-scrollbar-thumb {\n    background-color: ${({ theme }) => theme.backgrounds.bgScrollBar};\n  }\n  &::-webkit-scrollbar-track {\n    box-shadow: ${({ theme }) => theme.shadows.scrollbarShadow};\n  }\n  &::-webkit-scrollbar {\n    width: 0.5em;\n  }\n\n  @media only screen and (min-width: 1280px) {\n    max-height: 70vh;\n  }\n`;\n\nexport const StyledTr = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 10px 12px 20px;\n  border-bottom: ${({ theme }) => theme.border.borderBottom};\n\n  gap: 50px;\n`;\nexport const StyledTd = styled.td`\n  width: 50px;\n  text-align: center;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: normal;\n  color: ${props => props.$color};\n`;\nexport const StyledTdComment = styled(StyledTd)`\n  flex-basis: 182px;\n`;\nexport const StyledTableBtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StyledNoFound = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  margin-top: 80px;\n\n  padding: 30px;\n  width: 600px;\n  height: 200px;\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.backgrounds.tableHead};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n`;\n","import styled from 'styled-components';\n\nexport const StyledSortTransactionBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 0.5em;\n`;\n\nexport const styledSort = {\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    width: 150,\n    borderRadius: '8px',\n    background: ' rgba(133, 93, 175, 0.13) ',\n    borderColor: 'rgba(255, 255, 255, 0.3)',\n  }),\n};\n","import { styles } from 'components/StatisticsDashboard/StatisticsDashboard.styled';\nimport { styledSort } from './SortTransaction.styled';\nimport React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst SortTransaction = ({ value, setSortCriteria }) => {\n  const options = [\n    { value: 'date', label: 'Date' },\n    { value: 'amount', label: 'Amount' },\n    { value: 'category', label: 'Category' },\n  ];\n  return (\n    <>\n      <Select\n        styles={{ ...styles, ...styledSort }}\n        value={value}\n        onChange={value => setSortCriteria(value)}\n        options={options}\n        placeholder={value.label}\n        theme={theme => ({\n          ...theme,\n          colors: {\n            neutral50: '#fff',\n          },\n        })}\n      />\n    </>\n  );\n};\n\nexport default SortTransaction;\n\nSortTransaction.propTypes = {\n  value: PropTypes.object,\n  setSortCriteria: PropTypes.func,\n};\n","import React, { useEffect, useState } from 'react';\nimport TransactionsItem from '../TransactionsItem/TransactionsItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectFIltered,\n  selectTransactions,\n} from '../../redux/transactions/selectors';\nimport { selectLoading } from '../../redux/auth/selectors';\nimport {\n  fetchTransactionCategory,\n  fetchTransactionsThunk,\n} from '../../redux/transactions/operations';\nimport {\n  StyledNotFoundTitle,\n  StyledTansNotFound,\n} from 'components/TransactionsItem/TransactionsItem.styled';\nimport Loader from 'components/Loader/Loader';\nimport { StyledMobileWrapper } from './TransactionsList.styled';\nimport SortTransaction from 'components/SortTransaction/SortTransaction';\nimport { StyledSortTransactionBox } from 'components/SortTransaction/SortTransaction.styled';\n\nconst MobileList = () => {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n  const [sortCriteria, setSortCriteria] = useState({\n    value: 'date',\n    label: 'Date',\n  });\n  const filteredTransactions = useSelector(state =>\n    selectFIltered(state, sortCriteria)\n  );\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchTransactionsThunk());\n    dispatch(fetchTransactionCategory());\n  }, [dispatch]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <h1>Something went wrong... 😢</h1>}\n      <StyledSortTransactionBox>\n        <SortTransaction\n          id=\"sortSelect\"\n          setSortCriteria={setSortCriteria}\n          value={sortCriteria}\n        />\n      </StyledSortTransactionBox>\n      {transactions.length > 0 ? (\n        <StyledMobileWrapper>\n          {filteredTransactions.map(transaction => (\n            <TransactionsItem key={transaction.id} transaction={transaction} />\n          ))}\n        </StyledMobileWrapper>\n      ) : (\n        <StyledTansNotFound>\n          <StyledNotFoundTitle>\n            No transactions found, lets create!\n          </StyledNotFoundTitle>\n        </StyledTansNotFound>\n      )}\n    </>\n  );\n};\n\nexport default MobileList;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectAllCategories,\n  selectError,\n  selectFIltered,\n  selectLoading,\n} from '../../redux/transactions/selectors';\nimport Loader from 'components/Loader/Loader';\nimport {\n  StyledHeaderTr,\n  StyledNoFound,\n  StyledSortIcon,\n  StyledTable,\n  StyledTableBtnWrapper,\n  StyledTableWrapper,\n  StyledTbodyTable,\n  StyledTd,\n  StyledTdComment,\n  StyledTh,\n  StyledThSortActive,\n  StyledTr,\n  StyledTransactionsList,\n} from './TransactionsList.styled';\nimport sprite from '../../images/sprite.svg';\nimport {\n  StyledDeleteBtn,\n  StyledEditBtn,\n} from 'components/TransactionsItem/TransactionsItem.styled';\nimport {\n  deleteTransactionThunk,\n  fetchTransactionCategory,\n  fetchTransactionsThunk,\n} from '../../redux/transactions/operations';\nimport useModal from 'hooks/useModal';\nimport Modal from 'components/Modal/Modal';\nimport EditTransactionForm from 'components/EditTransactionForm/EditTransactionForm';\n\nconst TransactionsList = () => {\n  const dispatch = useDispatch();\n  const [sortCriteria, setSortCriteria] = useState({\n    value: 'date',\n    label: 'Date',\n    isReverse: false,\n  });\n  const { open, close, isOpen, data } = useModal();\n  const categories = useSelector(selectAllCategories);\n  const filteredTransactions = useSelector(state =>\n    selectFIltered(state, sortCriteria)\n  );\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const dateRef = useRef(null);\n  const amountRef = useRef(null);\n  const categoryRef = useRef(null);\n\n  useEffect(() => {\n    dispatch(fetchTransactionsThunk());\n    dispatch(fetchTransactionCategory());\n  }, [dispatch]);\n\n  const handleTableBtnDelete = id => {\n    dispatch(deleteTransactionThunk(id));\n  };\n\n  const handleSort = criteria => {\n    if (sortCriteria.value === criteria.value) {\n      setSortCriteria(prev => ({\n        ...prev,\n        isReverse: !prev.isReverse,\n      }));\n    } else {\n      setSortCriteria({ ...criteria, isReverse: false });\n    }\n  };\n  const rotateIcon = state => {\n    switch (state) {\n      case 'date':\n        dateRef.current.style.transform = 'rotate(0)';\n        amountRef.current.style.transform = 'rotate(180deg)';\n        categoryRef.current.style.transform = 'rotate(180deg)';\n        break;\n      case 'category':\n        dateRef.current.style.transform = 'rotate(180deg)';\n        amountRef.current.style.transform = 'rotate(180deg)';\n        categoryRef.current.style.transform = 'rotate(0)';\n        break;\n      case 'amount':\n        dateRef.current.style.transform = 'rotate(180deg)';\n        amountRef.current.style.transform = 'rotate(0)';\n        categoryRef.current.style.transform = 'rotate(180deg)';\n        break;\n      default:\n    }\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <h1>Something went wrong... 😢</h1>}\n      {filteredTransactions.length > 0 ? (\n        <StyledTransactionsList>\n          <StyledTableWrapper>\n            <StyledTable>\n              <thead>\n                <StyledHeaderTr>\n                  <StyledThSortActive\n                    onClick={() => {\n                      handleSort({\n                        value: 'date',\n                      });\n                      rotateIcon('date');\n                    }}\n                  >\n                    Date\n                    <StyledSortIcon ref={dateRef} width=\"14\" height=\"14\">\n                      <use href={`${sprite}#arrow_down`} />\n                    </StyledSortIcon>\n                  </StyledThSortActive>\n                  <StyledTh>Type</StyledTh>\n                  <StyledThSortActive\n                    onClick={() => {\n                      handleSort({\n                        value: 'category',\n                      });\n                      rotateIcon('category');\n                    }}\n                  >\n                    Category\n                    <StyledSortIcon ref={categoryRef} width=\"14\" height=\"14\">\n                      <use href={`${sprite}#arrow_down`} />\n                    </StyledSortIcon>\n                  </StyledThSortActive>\n\n                  <StyledTh>Comment</StyledTh>\n                  <StyledThSortActive\n                    onClick={() => {\n                      handleSort({\n                        value: 'amount',\n                      });\n                      rotateIcon('amount');\n                    }}\n                  >\n                    Sum\n                    <StyledSortIcon ref={amountRef} width=\"14\" height=\"14\">\n                      <use href={`${sprite}#arrow_down`} />\n                    </StyledSortIcon>\n                  </StyledThSortActive>\n                </StyledHeaderTr>\n              </thead>\n              <StyledTbodyTable>\n                {filteredTransactions.map(transaction => (\n                  <StyledTr key={transaction.id}>\n                    <StyledTd>\n                      {formatDate(transaction.transactionDate)}\n                    </StyledTd>\n                    <StyledTd>\n                      {transaction.type === 'INCOME' ? '+' : '-'}\n                    </StyledTd>\n                    <StyledTd>\n                      {categories.find(cat => cat.id === transaction.categoryId)\n                        ?.name || 'Other'}\n                    </StyledTd>\n                    <StyledTdComment>\n                      {transaction.comment.length > 15\n                        ? `${transaction.comment.slice(0, 15)}...`\n                        : transaction.comment}\n                    </StyledTdComment>\n                    <StyledTd\n                      $color={\n                        transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'\n                      }\n                    >\n                      {transaction.amount.toString().replace('-', '')}\n                    </StyledTd>\n                    <td>\n                      <StyledTableBtnWrapper>\n                        <StyledEditBtn onClick={() => open(transaction)}>\n                          <svg width=\"14\" height=\"14\">\n                            <use href={`${sprite}#edit`} />\n                          </svg>\n                        </StyledEditBtn>\n                        <StyledDeleteBtn\n                          onClick={() => handleTableBtnDelete(transaction.id)}\n                        >\n                          Delete\n                        </StyledDeleteBtn>\n                      </StyledTableBtnWrapper>\n                    </td>\n                  </StyledTr>\n                ))}\n              </StyledTbodyTable>\n            </StyledTable>\n          </StyledTableWrapper>\n          {isOpen && (\n            <Modal close={close}>\n              <EditTransactionForm transaction={data} close={close} />\n            </Modal>\n          )}\n        </StyledTransactionsList>\n      ) : (\n        <StyledNoFound>\n          <h2>No transactions found, lets create!</h2>\n        </StyledNoFound>\n      )}\n    </>\n  );\n};\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear().toString().slice(-2);\n  return `${day}.${month}.${year}`;\n}\n\nexport default TransactionsList;\n","import styled from 'styled-components';\nimport { StyledContainer } from 'styles/GlobalStyles';\n\nexport const StyledHomeTabContainer = styled(StyledContainer)`\n  @media only screen and (min-width: 768px) {\n    padding: 0;\n  }\n`;\n","import ButtonAddTransactions from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport MobileList from 'components/TransactionsList/MobileList';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { StyledHomeTabContainer } from './HomeTab.styled';\n\nconst HomeTab = () => {\n  const isTable = useMediaQuery({\n    query: '(min-width:768px)',\n  });\n  return (\n    <StyledHomeTabContainer>\n      {isTable ? <TransactionsList /> : <MobileList />}\n      <ButtonAddTransactions />\n    </StyledHomeTabContainer>\n  );\n};\n\nexport default HomeTab;\n","import { createSelector } from 'reselect';\n// transactions\n\nexport const selectTransactions = state =>\n  state.transactions.transactions.items;\nexport const selectLoading = state => state.transactions.transactions.isLoading;\nexport const selectError = state => state.transactions.transactions.error;\nexport const selectCategories = state =>\n  state.transactions.transactions.categories;\n\nexport const selectAllCategories = createSelector(\n  [selectCategories],\n  categories => {\n    return categories;\n  }\n);\n\n// sort transactions\nexport const selectFIltered = (state, sortCriteria) => {\n  const transactions = selectTransactions(state);\n  const categories = selectCategories(state);\n\n  const sortedTransactions = [...transactions];\n  switch (sortCriteria.value) {\n    case 'date':\n      sortedTransactions.sort((a, b) => {\n        const dateA = new Date(a.transactionDate);\n        const dateB = new Date(b.transactionDate);\n        return sortCriteria.isReverse ? dateA - dateB : dateB - dateA;\n      });\n      break;\n    case 'amount':\n      sortedTransactions.sort((a, b) => {\n        return sortCriteria.isReverse\n          ? b.amount - a.amount\n          : a.amount - b.amount;\n      });\n      break;\n    case 'category':\n      sortedTransactions.sort((a, b) => {\n        const categoryA =\n          categories.find(cat => cat.id === a.categoryId)?.name || '';\n        const categoryB =\n          categories.find(cat => cat.id === b.categoryId)?.name || '';\n        return sortCriteria.isReverse\n          ? categoryB.localeCompare(categoryA)\n          : categoryA.localeCompare(categoryB);\n      });\n      break;\n    default:\n      return sortedTransactions.sort(\n        (a, b) => new Date(b.transactionDate) - new Date(a.transactionDate)\n      );\n  }\n  return sortedTransactions;\n};\n\n// summary\nexport const selectCategoriesSummary = state =>\n  state.transactions.summary.categoriesSummary;\nexport const selectIncomeSummary = state =>\n  state.transactions.summary.incomeSummary;\nexport const selectExpenseSummary = state =>\n  state.transactions.summary.expenseSummary;\nexport const selectPeriodTotal = state =>\n  state.transactions.summary.periodTotal;\nexport const selectYear = state => state.transactions.summary.year;\nexport const selectMonth = state => state.transactions.summary.month;\n"],"names":["StyledSelectMainDiv","styled","div","styles","control","baseStyles","state","minWidth","maxWidth","minHeight","borderRadius","background","option","backgroundColor","isSelected","color","menu","border","menuList","base","width","height","AddBtnCircle","button","_ref","theme","backgrounds","btnGradient","_ref2","colors","incomeColor","useModal","isOpen","setIsOpen","useState","data","SetData","useEffect","document","body","style","overflow","close","open","content","toggle","prev","OverlayStyle","ModalWindowStyle","ButtonCloseStyle","CancelBtnStyle","Modal","children","showCloseIcon","handleKeyDown","e","key","addEventListener","removeEventListener","closeClick","target","name","currentTarget","_jsx","onClick","handleBackdropClick","_jsxs","type","viewBox","fill","xmlns","d","stroke","StyledContainer","StyledForm","Form","StyledFieldAmount","Field","editBtn","StyledFieldComment","_ref3","_ref4","AddFormTitle","h2","StyledRadioBox","StyledRadioInput","input","StyledTextSpan","span","_ref5","SwitcherSquare","SwitcherRoundPlus","SwitcherRoundMinus","AmountDateBox","StyledDatePicker","DatePicker","_ref6","mainWhite","_ref7","StyledWrapper","_ref8","_ref9","active","_ref10","tableHead","_ref11","white40","_ref12","_ref13","BtnBox","BtnAdd","_ref14","_ref15","borderBottom","paddingTop","StyledEditContainer","EditFormTitle","StyledlabelBox","StyledEditForm","CustomRadioLabel","label","value","selected","CustomRadioInput","StyledAmounDateEdit","StyledEditAmount","StyledReqField","expenseColor","StyledEditField","StyledEditDatePicker","StyledIconCalendar","svg","modalBg","_ref16","_ref17","EditBtnBox","BtnSave","_ref18","_ref19","_ref20","AddSchema","object","amount","string","required","comment","min","max","category","handleNumberInput","newValue","replace","dispatch","useDispatch","selectedCategory","setSelectedCategory","transactionType","setTransactionType","isSwitcherRoundPlusVisible","setIsSwitcherRoundPlusVisible","isSwitcherRoundMinusVisible","setIsSwitcherRoundMinusVisible","categories","useSelector","selectAllCategories","fetchTransactionCategory","startDate","setStartDate","onClickTitle","str","Formik","initialValues","transactionDate","Date","validationSchema","onSubmit","values","setFieldValue","handleSubmit","addFormData","Number","categoryId","id","addTransactionThunk","unwrap","then","toast","success","catch","error","errors","touched","handleChange","autoComplete","checked","onChange","handleSwitcherClick","newTransactionType","href","sprite","Select","options","filter","map","placeholder","neutral50","onInput","toString","dateFormat","placeholderText","toLocaleDateString","showIcon","maxDate","float","icon","transaction","_Fragment","AddTransactionForm","StyledTransaction","li","transactionBg","props","$color","StyledParWrapper","StyledParagraph","p","StyledSpan","StyledBtnBox","StyledDeleteBtn","shadows","deleteBtnShadow","StyledEditBtn","StyledTansNotFound","default","StyledNotFoundTitle","h3","selectedType","setSelectedType","oneOf","parse","EditData","Math","abs","updateTransactionThunk","disabled","date","formatDate","dateString","getDate","padStart","getMonth","getFullYear","slice","find","cat","length","handleBtnDelete","deleteTransactionThunk","EditTransactionForm","StyledTransactionsList","StyledMobileWrapper","ul","StyledTableWrapper","StyledTable","table","StyledHeaderTr","tr","blur","backdropFilter","StyledTh","th","StyledThSortActive","StyledSortIcon","StyledTbodyTable","tbody","bgScrollBar","scrollbarShadow","StyledTr","StyledTd","td","StyledTdComment","StyledTableBtnWrapper","StyledNoFound","StyledSortTransactionBox","styledSort","borderColor","setSortCriteria","MobileList","transactions","selectTransactions","sortCriteria","filteredTransactions","selectFIltered","loading","selectLoading","selectError","fetchTransactionsThunk","Loader","SortTransaction","TransactionsItem","TransactionsList","isReverse","dateRef","useRef","amountRef","categoryRef","handleSort","criteria","rotateIcon","current","transform","ref","_categories$find","handleTableBtnDelete","StyledHomeTabContainer","HomeTab","isTable","useMediaQuery","query","ButtonAddTransactions","items","isLoading","selectCategories","createSelector","sortedTransactions","sort","a","b","dateA","dateB","_categories$find2","categoryA","categoryB","localeCompare","selectCategoriesSummary","summary","categoriesSummary","selectIncomeSummary","incomeSummary","selectExpenseSummary","expenseSummary","selectPeriodTotal","periodTotal"],"sourceRoot":""}